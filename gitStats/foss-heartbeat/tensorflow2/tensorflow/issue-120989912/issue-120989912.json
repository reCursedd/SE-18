{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/445", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/445/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/445/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/445", "id": 120989912, "node_id": "MDU6SXNzdWUxMjA5ODk5MTI=", "number": 445, "title": "tensorflow in armv7l", "user": {"login": "vmayoral", "id": 1375246, "node_id": "MDQ6VXNlcjEzNzUyNDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1375246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmayoral", "html_url": "https://github.com/vmayoral", "followers_url": "https://api.github.com/users/vmayoral/followers", "following_url": "https://api.github.com/users/vmayoral/following{/other_user}", "gists_url": "https://api.github.com/users/vmayoral/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmayoral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmayoral/subscriptions", "organizations_url": "https://api.github.com/users/vmayoral/orgs", "repos_url": "https://api.github.com/users/vmayoral/repos", "events_url": "https://api.github.com/users/vmayoral/events{/privacy}", "received_events_url": "https://api.github.com/users/vmayoral/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 27, "created_at": "2015-12-08T11:39:48Z", "updated_at": "2018-01-05T05:05:03Z", "closed_at": "2016-03-14T22:16:38Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I've cross-compiled tensorflow for <code>armv7l</code> and generated a wheel successfully however when deploying it into an embedded board with the same architecture (e.g.: Raspberry Pi 2), i get the following when executing <a href=\"https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/1%20-%20Introduction/helloworld.py\">https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/1%20-%20Introduction/helloworld.py</a>:</p>\n<pre><code>erle@erle-brain-2 ~/TensorFlow-Examples/examples/1 - Introduction $ python helloworld.py \nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 4\npure virtual method called\nterminate called without an active exception\nI tensorflow/core/common_runtime/direct_session.cc:60] Direct session inter op parallelism threads: 4\nAborted\n</code></pre>\n<p>Digging a bit more:</p>\n<pre><code>erle@erle-brain-2 ~/TensorFlow-Examples/examples/1 - Introduction $ gdb -ex r --args python helloworld.py\nGNU gdb (Raspbian 7.7.1+dfsg-5) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"arm-linux-gnueabihf\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n&lt;http://www.gnu.org/software/gdb/bugs/&gt;.\nFind the GDB manual and other documentation resources online at:\n&lt;http://www.gnu.org/software/gdb/documentation/&gt;.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from python...(no debugging symbols found)...done.\nStarting program: /usr/bin/python helloworld.py\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/arm-linux-gnueabihf/libthread_db.so.1\".\n\nProgram received signal SIGILL, Illegal instruction.\n0x73f1cd08 in ?? () from /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0\n(gdb) bt\n#0  0x73f1cd08 in ?? () from /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0\n#1  0x73f193f4 in OPENSSL_cpuid_setup () from /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0\n#2  0x76fdf058 in call_init (l=&lt;optimized out&gt;, argc=2, argv=0x7efff184, env=0x7efff190) at dl-init.c:78\n#3  0x76fdf134 in _dl_init (main_map=main_map@entry=0x8e9268, argc=2, argv=0x7efff184, env=0x7efff190) at dl-init.c:126\n#4  0x76fe36b4 in dl_open_worker (a=&lt;optimized out&gt;) at dl-open.c:577\n#5  0x76fdeef0 in _dl_catch_error (objname=0x76fdeef0 &lt;_dl_catch_error+112&gt;, objname@entry=0x7effcc04, errstring=0x76ff6510, errstring@entry=0x7effcc08, \n    mallocedp=0x7effcc04, mallocedp@entry=0x7effcc03, operate=0x7effcc03, args=args@entry=0x7effcc0c) at dl-error.c:187\n#6  0x76fe2da4 in _dl_open (file=0x9094e0 \"/usr/lib/python2.7/lib-dynload/_hashlib.arm-linux-gnueabihf.so\", mode=-2147483646, \n    caller_dlopen=0x10aa94 &lt;_PyImport_GetDynLoadFunc+272&gt;, nsid=-2, argc=2, argv=0x7efff184, env=0x7efff190) at dl-open.c:661\n#7  0x76f66ba8 in dlopen_doit (a=0x7effce58) at dlopen.c:66\n#8  0x76fdeef0 in _dl_catch_error (objname=0x76fdeef0 &lt;_dl_catch_error+112&gt;, errstring=0x76ff6510, mallocedp=0x4e93a4, operate=0x4e93a0, args=0x7effce58)\n    at dl-error.c:187\n#9  0x76f672a8 in _dlerror_run (operate=0x76f66b28 &lt;dlopen_doit&gt;, args=args@entry=0x7effce58) at dlerror.c:163\n#10 0x76f66c74 in __dlopen (file=&lt;optimized out&gt;, mode=&lt;optimized out&gt;) at dlopen.c:87\n#11 0x0010aa94 in _PyImport_GetDynLoadFunc ()\n#12 0x0010a338 in _PyImport_LoadDynamicModule ()\n#13 0x00067844 in ?? ()\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\n(gdb) Quit\n(gdb) quit\nA debugging session is active.\n</code></pre>\n<p><code>cryt*</code> libraries in the machine used to cross compile tensorflow:</p>\n<pre><code>root@debian-arm:~/TensorFlow-Examples/examples/1 - Introduction# dpkg -l|grep crypt\nii  libcryptsetup4:armhf          2:1.6.6-5                 armhf        disk encryption support - shared library\nii  libgcrypt20:armhf             1.6.3-2                   armhf        LGPL Crypto library - runtime library\nii  libhogweed2:armhf             2.7.1-5                   armhf        low level cryptographic library (public-key cryptos)\nii  libk5crypto3:armhf            1.12.1+dfsg-19            armhf        MIT Kerberos runtime libraries - Crypto Library\nii  libnettle4:armhf              2.7.1-5                   armhf        low level cryptographic library (symmetric and one-way cryptos)\nii  openssl                       1.0.1k-3+deb8u1           armhf        Secure Sockets Layer toolkit - cryptographic utility\nii  python-cryptography           0.6.1-1                   armhf        Python library exposing cryptographic recipes and primitives (Python 2)\n\n</code></pre>\n<p><code>cryt*</code> libraries in the target machine (Raspberry Pi 2):</p>\n<pre><code>erle@erle-brain-2 ~/TensorFlow-Examples/examples/1 - Introduction $ dpkg -l|grep crypt\nii  cryptsetup-bin                         2:1.6.6-5                                 armhf        disk encryption support - command line tools\nii  libcryptsetup4:armhf                   2:1.6.6-5                                 armhf        disk encryption support - shared library\nii  libgcrypt20:armhf                      1.6.3-2                                   armhf        LGPL Crypto library - runtime library\nii  libhcrypto4-heimdal:armhf              1.6~rc2+dfsg-9+rpi1                       armhf        Heimdal Kerberos - crypto library\nii  libhogweed2:armhf                      2.7.1-5                                   armhf        low level cryptographic library (public-key cryptos)\nii  libk5crypto3:armhf                     1.12.1+dfsg-19                            armhf        MIT Kerberos runtime libraries - Crypto Library\nii  libmhash2:armhf                        0.9.9.9-7                                 armhf        Library for cryptographic hashing and message authentication\nii  libnettle4:armhf                       2.7.1-5                                   armhf        low level cryptographic library (symmetric and one-way crypos)\nii  libpococrypto9                         1.3.6p1-5                                 armhf        C++ Portable Components (POCO) Crypto library\nii  openssl                                1.0.1k-3+deb8u1                           armhf        Secure Sockets Layer toolkit - cryptographic utility\n</code></pre>", "body_text": "Hi,\nI've cross-compiled tensorflow for armv7l and generated a wheel successfully however when deploying it into an embedded board with the same architecture (e.g.: Raspberry Pi 2), i get the following when executing https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/1%20-%20Introduction/helloworld.py:\nerle@erle-brain-2 ~/TensorFlow-Examples/examples/1 - Introduction $ python helloworld.py \nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 4\npure virtual method called\nterminate called without an active exception\nI tensorflow/core/common_runtime/direct_session.cc:60] Direct session inter op parallelism threads: 4\nAborted\n\nDigging a bit more:\nerle@erle-brain-2 ~/TensorFlow-Examples/examples/1 - Introduction $ gdb -ex r --args python helloworld.py\nGNU gdb (Raspbian 7.7.1+dfsg-5) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"arm-linux-gnueabihf\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from python...(no debugging symbols found)...done.\nStarting program: /usr/bin/python helloworld.py\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/arm-linux-gnueabihf/libthread_db.so.1\".\n\nProgram received signal SIGILL, Illegal instruction.\n0x73f1cd08 in ?? () from /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0\n(gdb) bt\n#0  0x73f1cd08 in ?? () from /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0\n#1  0x73f193f4 in OPENSSL_cpuid_setup () from /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0\n#2  0x76fdf058 in call_init (l=<optimized out>, argc=2, argv=0x7efff184, env=0x7efff190) at dl-init.c:78\n#3  0x76fdf134 in _dl_init (main_map=main_map@entry=0x8e9268, argc=2, argv=0x7efff184, env=0x7efff190) at dl-init.c:126\n#4  0x76fe36b4 in dl_open_worker (a=<optimized out>) at dl-open.c:577\n#5  0x76fdeef0 in _dl_catch_error (objname=0x76fdeef0 <_dl_catch_error+112>, objname@entry=0x7effcc04, errstring=0x76ff6510, errstring@entry=0x7effcc08, \n    mallocedp=0x7effcc04, mallocedp@entry=0x7effcc03, operate=0x7effcc03, args=args@entry=0x7effcc0c) at dl-error.c:187\n#6  0x76fe2da4 in _dl_open (file=0x9094e0 \"/usr/lib/python2.7/lib-dynload/_hashlib.arm-linux-gnueabihf.so\", mode=-2147483646, \n    caller_dlopen=0x10aa94 <_PyImport_GetDynLoadFunc+272>, nsid=-2, argc=2, argv=0x7efff184, env=0x7efff190) at dl-open.c:661\n#7  0x76f66ba8 in dlopen_doit (a=0x7effce58) at dlopen.c:66\n#8  0x76fdeef0 in _dl_catch_error (objname=0x76fdeef0 <_dl_catch_error+112>, errstring=0x76ff6510, mallocedp=0x4e93a4, operate=0x4e93a0, args=0x7effce58)\n    at dl-error.c:187\n#9  0x76f672a8 in _dlerror_run (operate=0x76f66b28 <dlopen_doit>, args=args@entry=0x7effce58) at dlerror.c:163\n#10 0x76f66c74 in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87\n#11 0x0010aa94 in _PyImport_GetDynLoadFunc ()\n#12 0x0010a338 in _PyImport_LoadDynamicModule ()\n#13 0x00067844 in ?? ()\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\n(gdb) Quit\n(gdb) quit\nA debugging session is active.\n\ncryt* libraries in the machine used to cross compile tensorflow:\nroot@debian-arm:~/TensorFlow-Examples/examples/1 - Introduction# dpkg -l|grep crypt\nii  libcryptsetup4:armhf          2:1.6.6-5                 armhf        disk encryption support - shared library\nii  libgcrypt20:armhf             1.6.3-2                   armhf        LGPL Crypto library - runtime library\nii  libhogweed2:armhf             2.7.1-5                   armhf        low level cryptographic library (public-key cryptos)\nii  libk5crypto3:armhf            1.12.1+dfsg-19            armhf        MIT Kerberos runtime libraries - Crypto Library\nii  libnettle4:armhf              2.7.1-5                   armhf        low level cryptographic library (symmetric and one-way cryptos)\nii  openssl                       1.0.1k-3+deb8u1           armhf        Secure Sockets Layer toolkit - cryptographic utility\nii  python-cryptography           0.6.1-1                   armhf        Python library exposing cryptographic recipes and primitives (Python 2)\n\n\ncryt* libraries in the target machine (Raspberry Pi 2):\nerle@erle-brain-2 ~/TensorFlow-Examples/examples/1 - Introduction $ dpkg -l|grep crypt\nii  cryptsetup-bin                         2:1.6.6-5                                 armhf        disk encryption support - command line tools\nii  libcryptsetup4:armhf                   2:1.6.6-5                                 armhf        disk encryption support - shared library\nii  libgcrypt20:armhf                      1.6.3-2                                   armhf        LGPL Crypto library - runtime library\nii  libhcrypto4-heimdal:armhf              1.6~rc2+dfsg-9+rpi1                       armhf        Heimdal Kerberos - crypto library\nii  libhogweed2:armhf                      2.7.1-5                                   armhf        low level cryptographic library (public-key cryptos)\nii  libk5crypto3:armhf                     1.12.1+dfsg-19                            armhf        MIT Kerberos runtime libraries - Crypto Library\nii  libmhash2:armhf                        0.9.9.9-7                                 armhf        Library for cryptographic hashing and message authentication\nii  libnettle4:armhf                       2.7.1-5                                   armhf        low level cryptographic library (symmetric and one-way crypos)\nii  libpococrypto9                         1.3.6p1-5                                 armhf        C++ Portable Components (POCO) Crypto library\nii  openssl                                1.0.1k-3+deb8u1                           armhf        Secure Sockets Layer toolkit - cryptographic utility", "body": "Hi,\n\nI've cross-compiled tensorflow for `armv7l` and generated a wheel successfully however when deploying it into an embedded board with the same architecture (e.g.: Raspberry Pi 2), i get the following when executing https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/1%20-%20Introduction/helloworld.py:\n\n```\nerle@erle-brain-2 ~/TensorFlow-Examples/examples/1 - Introduction $ python helloworld.py \nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 4\npure virtual method called\nterminate called without an active exception\nI tensorflow/core/common_runtime/direct_session.cc:60] Direct session inter op parallelism threads: 4\nAborted\n```\n\nDigging a bit more:\n\n```\nerle@erle-brain-2 ~/TensorFlow-Examples/examples/1 - Introduction $ gdb -ex r --args python helloworld.py\nGNU gdb (Raspbian 7.7.1+dfsg-5) 7.7.1\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"arm-linux-gnueabihf\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from python...(no debugging symbols found)...done.\nStarting program: /usr/bin/python helloworld.py\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/arm-linux-gnueabihf/libthread_db.so.1\".\n\nProgram received signal SIGILL, Illegal instruction.\n0x73f1cd08 in ?? () from /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0\n(gdb) bt\n#0  0x73f1cd08 in ?? () from /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0\n#1  0x73f193f4 in OPENSSL_cpuid_setup () from /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.0.0\n#2  0x76fdf058 in call_init (l=<optimized out>, argc=2, argv=0x7efff184, env=0x7efff190) at dl-init.c:78\n#3  0x76fdf134 in _dl_init (main_map=main_map@entry=0x8e9268, argc=2, argv=0x7efff184, env=0x7efff190) at dl-init.c:126\n#4  0x76fe36b4 in dl_open_worker (a=<optimized out>) at dl-open.c:577\n#5  0x76fdeef0 in _dl_catch_error (objname=0x76fdeef0 <_dl_catch_error+112>, objname@entry=0x7effcc04, errstring=0x76ff6510, errstring@entry=0x7effcc08, \n    mallocedp=0x7effcc04, mallocedp@entry=0x7effcc03, operate=0x7effcc03, args=args@entry=0x7effcc0c) at dl-error.c:187\n#6  0x76fe2da4 in _dl_open (file=0x9094e0 \"/usr/lib/python2.7/lib-dynload/_hashlib.arm-linux-gnueabihf.so\", mode=-2147483646, \n    caller_dlopen=0x10aa94 <_PyImport_GetDynLoadFunc+272>, nsid=-2, argc=2, argv=0x7efff184, env=0x7efff190) at dl-open.c:661\n#7  0x76f66ba8 in dlopen_doit (a=0x7effce58) at dlopen.c:66\n#8  0x76fdeef0 in _dl_catch_error (objname=0x76fdeef0 <_dl_catch_error+112>, errstring=0x76ff6510, mallocedp=0x4e93a4, operate=0x4e93a0, args=0x7effce58)\n    at dl-error.c:187\n#9  0x76f672a8 in _dlerror_run (operate=0x76f66b28 <dlopen_doit>, args=args@entry=0x7effce58) at dlerror.c:163\n#10 0x76f66c74 in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87\n#11 0x0010aa94 in _PyImport_GetDynLoadFunc ()\n#12 0x0010a338 in _PyImport_LoadDynamicModule ()\n#13 0x00067844 in ?? ()\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\n(gdb) Quit\n(gdb) quit\nA debugging session is active.\n```\n\n`cryt*` libraries in the machine used to cross compile tensorflow:\n\n```\nroot@debian-arm:~/TensorFlow-Examples/examples/1 - Introduction# dpkg -l|grep crypt\nii  libcryptsetup4:armhf          2:1.6.6-5                 armhf        disk encryption support - shared library\nii  libgcrypt20:armhf             1.6.3-2                   armhf        LGPL Crypto library - runtime library\nii  libhogweed2:armhf             2.7.1-5                   armhf        low level cryptographic library (public-key cryptos)\nii  libk5crypto3:armhf            1.12.1+dfsg-19            armhf        MIT Kerberos runtime libraries - Crypto Library\nii  libnettle4:armhf              2.7.1-5                   armhf        low level cryptographic library (symmetric and one-way cryptos)\nii  openssl                       1.0.1k-3+deb8u1           armhf        Secure Sockets Layer toolkit - cryptographic utility\nii  python-cryptography           0.6.1-1                   armhf        Python library exposing cryptographic recipes and primitives (Python 2)\n\n```\n\n`cryt*` libraries in the target machine (Raspberry Pi 2):\n\n```\nerle@erle-brain-2 ~/TensorFlow-Examples/examples/1 - Introduction $ dpkg -l|grep crypt\nii  cryptsetup-bin                         2:1.6.6-5                                 armhf        disk encryption support - command line tools\nii  libcryptsetup4:armhf                   2:1.6.6-5                                 armhf        disk encryption support - shared library\nii  libgcrypt20:armhf                      1.6.3-2                                   armhf        LGPL Crypto library - runtime library\nii  libhcrypto4-heimdal:armhf              1.6~rc2+dfsg-9+rpi1                       armhf        Heimdal Kerberos - crypto library\nii  libhogweed2:armhf                      2.7.1-5                                   armhf        low level cryptographic library (public-key cryptos)\nii  libk5crypto3:armhf                     1.12.1+dfsg-19                            armhf        MIT Kerberos runtime libraries - Crypto Library\nii  libmhash2:armhf                        0.9.9.9-7                                 armhf        Library for cryptographic hashing and message authentication\nii  libnettle4:armhf                       2.7.1-5                                   armhf        low level cryptographic library (symmetric and one-way crypos)\nii  libpococrypto9                         1.3.6p1-5                                 armhf        C++ Portable Components (POCO) Crypto library\nii  openssl                                1.0.1k-3+deb8u1                           armhf        Secure Sockets Layer toolkit - cryptographic utility\n```\n"}