{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16999", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16999/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16999/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16999/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16999", "id": 296975663, "node_id": "MDU6SXNzdWUyOTY5NzU2NjM=", "number": 16999, "title": "Feature Request: Add Edit Distance metric_fn to tf.metrics or Make a way to Pass Custom metric_fn outside tf.metrics", "user": {"login": "selcouthlyBlue", "id": 13268675, "node_id": "MDQ6VXNlcjEzMjY4Njc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13268675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selcouthlyBlue", "html_url": "https://github.com/selcouthlyBlue", "followers_url": "https://api.github.com/users/selcouthlyBlue/followers", "following_url": "https://api.github.com/users/selcouthlyBlue/following{/other_user}", "gists_url": "https://api.github.com/users/selcouthlyBlue/gists{/gist_id}", "starred_url": "https://api.github.com/users/selcouthlyBlue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selcouthlyBlue/subscriptions", "organizations_url": "https://api.github.com/users/selcouthlyBlue/orgs", "repos_url": "https://api.github.com/users/selcouthlyBlue/repos", "events_url": "https://api.github.com/users/selcouthlyBlue/events{/privacy}", "received_events_url": "https://api.github.com/users/selcouthlyBlue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-14T04:55:11Z", "updated_at": "2018-04-04T02:17:52Z", "closed_at": "2018-04-04T02:17:52Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 8.1</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.4 CPU</li>\n<li><strong>Python version</strong>:<br>\n3.6</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nN/A</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I would like another metric (edit_distance) to be added into tf.metrics for <code>label_error_rate</code> calculation. I'm having trouble passing metric dicts for <code>eval_metric_ops</code> to be used by <code>ModelFnOps</code> that are not part of  tf.metrics.</p>\n<p>If that isn't possible, would it be possible for us we can pass our own <code>metric_fn</code>s that are outside tf.metrics?</p>\n<h3>Source code / logs</h3>\n<p>This is the metric dict I would like to pass as the <code>eval_metric_ops</code> for <code>ModelFnOps</code>:</p>\n<p><code>metric = {\"label_error_rate\": tf.reduce_mean(tf.edit_distance(tf.cast(y_pred, tf.int32), y_true), name=\"label_error_rate\")}</code></p>\n<p>Where <code>y_pred</code> and <code>y_true</code> are sparse.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 8.1\nTensorFlow installed from (source or binary):\nBinary\nTensorFlow version (use command below):\n1.4 CPU\nPython version:\n3.6\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\n\nDescribe the problem\nI would like another metric (edit_distance) to be added into tf.metrics for label_error_rate calculation. I'm having trouble passing metric dicts for eval_metric_ops to be used by ModelFnOps that are not part of  tf.metrics.\nIf that isn't possible, would it be possible for us we can pass our own metric_fns that are outside tf.metrics?\nSource code / logs\nThis is the metric dict I would like to pass as the eval_metric_ops for ModelFnOps:\nmetric = {\"label_error_rate\": tf.reduce_mean(tf.edit_distance(tf.cast(y_pred, tf.int32), y_true), name=\"label_error_rate\")}\nWhere y_pred and y_true are sparse.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 8.1\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\n1.4 CPU\r\n- **Python version**: \r\n3.6\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n\r\n\r\n### Describe the problem\r\nI would like another metric (edit_distance) to be added into tf.metrics for `label_error_rate` calculation. I'm having trouble passing metric dicts for `eval_metric_ops` to be used by `ModelFnOps` that are not part of  tf.metrics. \r\n\r\nIf that isn't possible, would it be possible for us we can pass our own `metric_fn`s that are outside tf.metrics? \r\n\r\n### Source code / logs\r\nThis is the metric dict I would like to pass as the `eval_metric_ops` for `ModelFnOps`:\r\n\r\n`metric = {\"label_error_rate\": tf.reduce_mean(tf.edit_distance(tf.cast(y_pred, tf.int32), y_true), name=\"label_error_rate\")}`\r\n\r\nWhere `y_pred` and `y_true` are sparse.\r\n"}