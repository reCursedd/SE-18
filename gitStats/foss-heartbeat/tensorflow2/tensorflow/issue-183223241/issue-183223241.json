{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4989", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4989/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4989/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4989/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4989", "id": 183223241, "node_id": "MDU6SXNzdWUxODMyMjMyNDE=", "number": 4989, "title": "Fail to load user op compiled by bazel with gcc 6", "user": {"login": "tongda", "id": 653425, "node_id": "MDQ6VXNlcjY1MzQyNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/653425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongda", "html_url": "https://github.com/tongda", "followers_url": "https://api.github.com/users/tongda/followers", "following_url": "https://api.github.com/users/tongda/following{/other_user}", "gists_url": "https://api.github.com/users/tongda/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongda/subscriptions", "organizations_url": "https://api.github.com/users/tongda/orgs", "repos_url": "https://api.github.com/users/tongda/repos", "events_url": "https://api.github.com/users/tongda/events{/privacy}", "received_events_url": "https://api.github.com/users/tongda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2016-10-15T17:56:22Z", "updated_at": "2016-12-07T11:31:36Z", "closed_at": "2016-10-18T01:38:03Z", "author_association": "NONE", "body_html": "<p>User op built by bazel with gcc &gt;=5 could not be loaded in python. Hope there is a solution to pass g++ config to bazel.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p><a href=\"https://github.com/tensorflow/tensorflow/issues/2455\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2455/hovercard\">#2455 Adding a New Op Error: can not load the customed file</a><br>\n<a href=\"http://stackoverflow.com/questions/38048266/custom-new-operation-in-tensorflow-results-in-exception-pointer-being-freed-was\" rel=\"nofollow\">Custom new operation in Tensorflow results in exception 'pointer being freed was not allocated'</a></p>\n<h3>Environment info</h3>\n<p>Operating System: macOS 10.12</p>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)</li>\n</ol>\n<p><a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/73b01567d68d4639d2329deb335ddfcd9c04f87c/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/73b01567d68d4639d2329deb335ddfcd9c04f87c\"><tt>73b0156</tt></a></p>\n<ol>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<pre><code>Build label: 0.3.1-homebrew\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Aug 4 09:58:27 2016 (1470304707)\nBuild timestamp: 1470304707\nBuild timestamp as int: 1470304707\n</code></pre>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>zero_out.cc:</p>\n<pre><code>#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n\nusing namespace tensorflow;\n\nREGISTER_OP(\"ZeroOut\")\n    .Input(\"to_zero: int32\")\n    .Output(\"zeroed: int32\");\n\nclass ZeroOutOp : public OpKernel {\n public:\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Grab the input tensor\n    const Tensor&amp; input_tensor = context-&gt;input(0);\n    auto input = input_tensor.flat&lt;int32&gt;();\n\n    // Create an output tensor\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context, context-&gt;allocate_output(0, input_tensor.shape(),\n                                                     &amp;output_tensor));\n    auto output = output_tensor-&gt;flat&lt;int32&gt;();\n\n    // Set all but the first element of the output tensor to 0.\n    const int N = input.size();\n    for (int i = 1; i &lt; N; i++) {\n      output(i) = 0;\n    }\n\n    // Preserve the first input value if possible.\n    if (N &gt; 0) output(0) = input(0);\n  }\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\n</code></pre>\n<p>BUILD</p>\n<pre><code>load(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n\ntf_custom_op_library(\n    name = \"zero_out.so\",\n    srcs = [\"zero_out.cc\"]\n)\n</code></pre>\n<p>run:</p>\n<pre><code>bazel build -c opt //tensorflow/core/user_ops:zero_out.so\n</code></pre>\n<p>then load the lib from python:</p>\n<pre><code>&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; tf.load_op_library('zero_out.so')\npython(61257,0x7fffb7e123c0) malloc: *** error for object 0x7fa5fcb46028: pointer being freed was not allocated\n*** set a breakpoint in malloc_error_break to debug\n</code></pre>\n<h3>What other attempted solutions have you tried?</h3>\n<p>Firstly, I tried to rebuild it with g++, with the option of <code>-D_GLIBCXX_USE_CXX11_ABI=0</code> mentioned in the tutorial:</p>\n<pre><code>g++ -v -std=c++11 -shared zero_out.cc -o zero_out.so -fPIC -I $TF_INC -O2 -undefined dynamic_lookup -D_GLIBCXX_USE_CXX11_ABI=0\n</code></pre>\n<p>it works.</p>\n<p>Then, I tried to add this option to bazel:</p>\n<pre><code>bazel build --copt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" -c opt //tensorflow/core/user_ops:zero_out.so\n</code></pre>\n<p>the problem is still there.</p>\n<h3>Logs or other output that would be helpful</h3>\n<p><a href=\"https://gist.github.com/tongda/b9b7c17c9d574669a0925e5606d9aa23\">bazel log</a></p>", "body_text": "User op built by bazel with gcc >=5 could not be loaded in python. Hope there is a solution to pass g++ config to bazel.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n#2455 Adding a New Op Error: can not load the customed file\nCustom new operation in Tensorflow results in exception 'pointer being freed was not allocated'\nEnvironment info\nOperating System: macOS 10.12\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\n\n73b0156\n\nThe output of bazel version\n\nBuild label: 0.3.1-homebrew\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Aug 4 09:58:27 2016 (1470304707)\nBuild timestamp: 1470304707\nBuild timestamp as int: 1470304707\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nzero_out.cc:\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n\nusing namespace tensorflow;\n\nREGISTER_OP(\"ZeroOut\")\n    .Input(\"to_zero: int32\")\n    .Output(\"zeroed: int32\");\n\nclass ZeroOutOp : public OpKernel {\n public:\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Grab the input tensor\n    const Tensor& input_tensor = context->input(0);\n    auto input = input_tensor.flat<int32>();\n\n    // Create an output tensor\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context, context->allocate_output(0, input_tensor.shape(),\n                                                     &output_tensor));\n    auto output = output_tensor->flat<int32>();\n\n    // Set all but the first element of the output tensor to 0.\n    const int N = input.size();\n    for (int i = 1; i < N; i++) {\n      output(i) = 0;\n    }\n\n    // Preserve the first input value if possible.\n    if (N > 0) output(0) = input(0);\n  }\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\n\nBUILD\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n\ntf_custom_op_library(\n    name = \"zero_out.so\",\n    srcs = [\"zero_out.cc\"]\n)\n\nrun:\nbazel build -c opt //tensorflow/core/user_ops:zero_out.so\n\nthen load the lib from python:\n>>> import tensorflow as tf\n>>> tf.load_op_library('zero_out.so')\npython(61257,0x7fffb7e123c0) malloc: *** error for object 0x7fa5fcb46028: pointer being freed was not allocated\n*** set a breakpoint in malloc_error_break to debug\n\nWhat other attempted solutions have you tried?\nFirstly, I tried to rebuild it with g++, with the option of -D_GLIBCXX_USE_CXX11_ABI=0 mentioned in the tutorial:\ng++ -v -std=c++11 -shared zero_out.cc -o zero_out.so -fPIC -I $TF_INC -O2 -undefined dynamic_lookup -D_GLIBCXX_USE_CXX11_ABI=0\n\nit works.\nThen, I tried to add this option to bazel:\nbazel build --copt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" -c opt //tensorflow/core/user_ops:zero_out.so\n\nthe problem is still there.\nLogs or other output that would be helpful\nbazel log", "body": "User op built by bazel with gcc >=5 could not be loaded in python. Hope there is a solution to pass g++ config to bazel.\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n\n[#2455 Adding a New Op Error: can not load the customed file](https://github.com/tensorflow/tensorflow/issues/2455)\n[Custom new operation in Tensorflow results in exception 'pointer being freed was not allocated'](http://stackoverflow.com/questions/38048266/custom-new-operation-in-tensorflow-results-in-exception-pointer-being-freed-was)\n### Environment info\n\nOperating System: macOS 10.12\n\nIf installed from source, provide \n1. The commit hash (`git rev-parse HEAD`)\n\n73b01567d68d4639d2329deb335ddfcd9c04f87c\n1. The output of `bazel version`\n\n```\nBuild label: 0.3.1-homebrew\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Aug 4 09:58:27 2016 (1470304707)\nBuild timestamp: 1470304707\nBuild timestamp as int: 1470304707\n```\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n\nzero_out.cc:\n\n```\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n\nusing namespace tensorflow;\n\nREGISTER_OP(\"ZeroOut\")\n    .Input(\"to_zero: int32\")\n    .Output(\"zeroed: int32\");\n\nclass ZeroOutOp : public OpKernel {\n public:\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Grab the input tensor\n    const Tensor& input_tensor = context->input(0);\n    auto input = input_tensor.flat<int32>();\n\n    // Create an output tensor\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context, context->allocate_output(0, input_tensor.shape(),\n                                                     &output_tensor));\n    auto output = output_tensor->flat<int32>();\n\n    // Set all but the first element of the output tensor to 0.\n    const int N = input.size();\n    for (int i = 1; i < N; i++) {\n      output(i) = 0;\n    }\n\n    // Preserve the first input value if possible.\n    if (N > 0) output(0) = input(0);\n  }\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\n```\n\nBUILD\n\n```\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n\ntf_custom_op_library(\n    name = \"zero_out.so\",\n    srcs = [\"zero_out.cc\"]\n)\n```\n\nrun:\n\n```\nbazel build -c opt //tensorflow/core/user_ops:zero_out.so\n```\n\nthen load the lib from python:\n\n```\n>>> import tensorflow as tf\n>>> tf.load_op_library('zero_out.so')\npython(61257,0x7fffb7e123c0) malloc: *** error for object 0x7fa5fcb46028: pointer being freed was not allocated\n*** set a breakpoint in malloc_error_break to debug\n```\n### What other attempted solutions have you tried?\n\nFirstly, I tried to rebuild it with g++, with the option of `-D_GLIBCXX_USE_CXX11_ABI=0` mentioned in the tutorial:\n\n```\ng++ -v -std=c++11 -shared zero_out.cc -o zero_out.so -fPIC -I $TF_INC -O2 -undefined dynamic_lookup -D_GLIBCXX_USE_CXX11_ABI=0\n```\n\nit works.\n\nThen, I tried to add this option to bazel:\n\n```\nbazel build --copt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" -c opt //tensorflow/core/user_ops:zero_out.so\n```\n\nthe problem is still there.\n### Logs or other output that would be helpful\n\n[bazel log](https://gist.github.com/tongda/b9b7c17c9d574669a0925e5606d9aa23)\n"}