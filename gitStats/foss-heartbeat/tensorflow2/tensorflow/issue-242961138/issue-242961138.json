{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11499", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11499/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11499/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11499/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11499", "id": 242961138, "node_id": "MDU6SXNzdWUyNDI5NjExMzg=", "number": 11499, "title": "Tensorflow runs matmul, bincount and other \"heavy\" funcions only on cpu", "user": {"login": "iurilarosa", "id": 16984873, "node_id": "MDQ6VXNlcjE2OTg0ODcz", "avatar_url": "https://avatars3.githubusercontent.com/u/16984873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iurilarosa", "html_url": "https://github.com/iurilarosa", "followers_url": "https://api.github.com/users/iurilarosa/followers", "following_url": "https://api.github.com/users/iurilarosa/following{/other_user}", "gists_url": "https://api.github.com/users/iurilarosa/gists{/gist_id}", "starred_url": "https://api.github.com/users/iurilarosa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iurilarosa/subscriptions", "organizations_url": "https://api.github.com/users/iurilarosa/orgs", "repos_url": "https://api.github.com/users/iurilarosa/repos", "events_url": "https://api.github.com/users/iurilarosa/events{/privacy}", "received_events_url": "https://api.github.com/users/iurilarosa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-14T10:40:45Z", "updated_at": "2017-07-17T07:47:36Z", "closed_at": "2017-07-17T07:47:36Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux virgo-wn100.roma1.infn.it 3.10.0-514.el7.x86_64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115886302\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1\">#1</a> SMP Thu Nov 3 15:10:49 CDT 2016 x86_64 x86_64 x86_64 GNU/Linux<br>\nVERSION=\"7.3 (Nitrogen)\"<br>\nVERSION_ID=\"7.3\"<br>\nREDHAT_BUGZILLA_PRODUCT_VERSION=7.3<br>\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7.3\"</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: from pip3</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.2.0-5-g435cdfc 1.2.1</li>\n<li><strong>Python version</strong>: Python 3.5.2</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA: 8.0, cuDNN : 5</li>\n<li><strong>GPU model and memory</strong>: Tesla K20m, memory 4742MiB</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Everytime i run a code with simple operations and heavy computation functions, the simple ones, like add or reshape, run on the gpu, while the heavy ones, like matmul, bincount, tensordot run always on cpu. This is very strange, because tensorflow sees the gpu but uses it only for simple functions, while i expect the inverse behavior.<br>\nI noticed it when i used Timeline to profile my codes.</p>\n<h3>Source code / logs</h3>\n<p>A simple example of the code i use:</p>\n<pre><code>import numpy\nimport tensorflow as tf\nfrom tensorflow.python.client import timeline\n\nmatrix1 = tf.zeros([5000,5000], dtype = tf.int32)\nmatrix2 = tf.ones([5000,5000], dtype = tf.int32)\nmatrix1 = tf.add(matrix1,2)\nproduct = tf.matmul(matrix1,matrix2)\n    \nsession = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n\nrun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nrun_metadata = tf.RunMetadata()\n\nimage = session.run(product, options=run_options, run_metadata=run_metadata)\n\n\n    # Create the Timeline object, and write it to a json\ntl = timeline.Timeline(run_metadata.step_stats)\nctf = tl.generate_chrome_trace_format()\nwith open('timelineDB.json', 'w') as f:\n\tf.write(ctf)\n</code></pre>\n<p>and here the logs:</p>\n<pre><code>2017-07-14 12:33:41.431036: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-14 12:33:41.431080: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-14 12:33:41.431089: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-14 12:33:41.431096: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-14 12:33:41.431104: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-14 12:33:42.860681: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties: \nname: Tesla K20m\nmajor: 3 minor: 5 memoryClockRate (GHz) 0.7055\npciBusID 0000:02:00.0\nTotal memory: 4.63GiB\nFree memory: 4.57GiB\n2017-07-14 12:33:42.860741: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0 \n2017-07-14 12:33:42.860778: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y \n2017-07-14 12:33:42.860791: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0)\nDevice mapping:\n/job:localhost/replica:0/task:0/gpu:0 -&gt; device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0\n2017-07-14 12:33:42.901828: I tensorflow/core/common_runtime/direct_session.cc:265] Device mapping:\n/job:localhost/replica:0/task:0/gpu:0 -&gt; device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0\n\nAdd: (Add): /job:localhost/replica:0/task:0/gpu:0\n2017-07-14 12:33:42.902645: I tensorflow/core/common_runtime/simple_placer.cc:847] Add: (Add)/job:localhost/replica:0/task:0/gpu:0\nMatMul: (MatMul): /job:localhost/replica:0/task:0/cpu:0\n2017-07-14 12:33:42.902669: I tensorflow/core/common_runtime/simple_placer.cc:847] MatMul: (MatMul)/job:localhost/replica:0/task:0/cpu:0\nAdd/y: (Const): /job:localhost/replica:0/task:0/gpu:0\n2017-07-14 12:33:42.902714: I tensorflow/core/common_runtime/simple_placer.cc:847] Add/y: (Const)/job:localhost/replica:0/task:0/gpu:0\nones: (Const): /job:localhost/replica:0/task:0/cpu:0\n2017-07-14 12:33:42.902736: I tensorflow/core/common_runtime/simple_placer.cc:847] ones: (Const)/job:localhost/replica:0/task:0/cpu:0\nzeros: (Const): /job:localhost/replica:0/task:0/gpu:0\n2017-07-14 12:33:42.902756: I tensorflow/core/common_runtime/simple_placer.cc:847] zeros: (Const)/job:localhost/replica:0/task:0/gpu:0\n2017-07-14 12:33:43.110880: I tensorflow/stream_executor/dso_loader.cc:139] successfully opened CUDA library libcupti.so.8.0 locally\n</code></pre>\n<p>I attach the .json generated (change .txt to .json and open it with chrome://tracing/)<br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/1148128/timeline.txt\">timeline.txt</a></p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux virgo-wn100.roma1.infn.it 3.10.0-514.el7.x86_64 #1 SMP Thu Nov 3 15:10:49 CDT 2016 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"7.3 (Nitrogen)\"\nVERSION_ID=\"7.3\"\nREDHAT_BUGZILLA_PRODUCT_VERSION=7.3\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7.3\"\nTensorFlow installed from (source or binary): from pip3\nTensorFlow version (use command below): v1.2.0-5-g435cdfc 1.2.1\nPython version: Python 3.5.2\nCUDA/cuDNN version: CUDA: 8.0, cuDNN : 5\nGPU model and memory: Tesla K20m, memory 4742MiB\n\nDescribe the problem\nEverytime i run a code with simple operations and heavy computation functions, the simple ones, like add or reshape, run on the gpu, while the heavy ones, like matmul, bincount, tensordot run always on cpu. This is very strange, because tensorflow sees the gpu but uses it only for simple functions, while i expect the inverse behavior.\nI noticed it when i used Timeline to profile my codes.\nSource code / logs\nA simple example of the code i use:\nimport numpy\nimport tensorflow as tf\nfrom tensorflow.python.client import timeline\n\nmatrix1 = tf.zeros([5000,5000], dtype = tf.int32)\nmatrix2 = tf.ones([5000,5000], dtype = tf.int32)\nmatrix1 = tf.add(matrix1,2)\nproduct = tf.matmul(matrix1,matrix2)\n    \nsession = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n\nrun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nrun_metadata = tf.RunMetadata()\n\nimage = session.run(product, options=run_options, run_metadata=run_metadata)\n\n\n    # Create the Timeline object, and write it to a json\ntl = timeline.Timeline(run_metadata.step_stats)\nctf = tl.generate_chrome_trace_format()\nwith open('timelineDB.json', 'w') as f:\n\tf.write(ctf)\n\nand here the logs:\n2017-07-14 12:33:41.431036: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-14 12:33:41.431080: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-14 12:33:41.431089: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-14 12:33:41.431096: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-14 12:33:41.431104: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-14 12:33:42.860681: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties: \nname: Tesla K20m\nmajor: 3 minor: 5 memoryClockRate (GHz) 0.7055\npciBusID 0000:02:00.0\nTotal memory: 4.63GiB\nFree memory: 4.57GiB\n2017-07-14 12:33:42.860741: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0 \n2017-07-14 12:33:42.860778: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y \n2017-07-14 12:33:42.860791: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0)\nDevice mapping:\n/job:localhost/replica:0/task:0/gpu:0 -> device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0\n2017-07-14 12:33:42.901828: I tensorflow/core/common_runtime/direct_session.cc:265] Device mapping:\n/job:localhost/replica:0/task:0/gpu:0 -> device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0\n\nAdd: (Add): /job:localhost/replica:0/task:0/gpu:0\n2017-07-14 12:33:42.902645: I tensorflow/core/common_runtime/simple_placer.cc:847] Add: (Add)/job:localhost/replica:0/task:0/gpu:0\nMatMul: (MatMul): /job:localhost/replica:0/task:0/cpu:0\n2017-07-14 12:33:42.902669: I tensorflow/core/common_runtime/simple_placer.cc:847] MatMul: (MatMul)/job:localhost/replica:0/task:0/cpu:0\nAdd/y: (Const): /job:localhost/replica:0/task:0/gpu:0\n2017-07-14 12:33:42.902714: I tensorflow/core/common_runtime/simple_placer.cc:847] Add/y: (Const)/job:localhost/replica:0/task:0/gpu:0\nones: (Const): /job:localhost/replica:0/task:0/cpu:0\n2017-07-14 12:33:42.902736: I tensorflow/core/common_runtime/simple_placer.cc:847] ones: (Const)/job:localhost/replica:0/task:0/cpu:0\nzeros: (Const): /job:localhost/replica:0/task:0/gpu:0\n2017-07-14 12:33:42.902756: I tensorflow/core/common_runtime/simple_placer.cc:847] zeros: (Const)/job:localhost/replica:0/task:0/gpu:0\n2017-07-14 12:33:43.110880: I tensorflow/stream_executor/dso_loader.cc:139] successfully opened CUDA library libcupti.so.8.0 locally\n\nI attach the .json generated (change .txt to .json and open it with chrome://tracing/)\ntimeline.txt", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux virgo-wn100.roma1.infn.it 3.10.0-514.el7.x86_64 #1 SMP Thu Nov 3 15:10:49 CDT 2016 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"7.3 (Nitrogen)\"\r\nVERSION_ID=\"7.3\"\r\nREDHAT_BUGZILLA_PRODUCT_VERSION=7.3\r\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7.3\"\r\n- **TensorFlow installed from (source or binary)**: from pip3\r\n- **TensorFlow version (use command below)**: v1.2.0-5-g435cdfc 1.2.1\r\n- **Python version**: Python 3.5.2\r\n- **CUDA/cuDNN version**: CUDA: 8.0, cuDNN : 5\r\n- **GPU model and memory**: Tesla K20m, memory 4742MiB\r\n\r\n### Describe the problem\r\nEverytime i run a code with simple operations and heavy computation functions, the simple ones, like add or reshape, run on the gpu, while the heavy ones, like matmul, bincount, tensordot run always on cpu. This is very strange, because tensorflow sees the gpu but uses it only for simple functions, while i expect the inverse behavior.\r\nI noticed it when i used Timeline to profile my codes.\r\n\r\n### Source code / logs\r\nA simple example of the code i use:\r\n```\r\nimport numpy\r\nimport tensorflow as tf\r\nfrom tensorflow.python.client import timeline\r\n\r\nmatrix1 = tf.zeros([5000,5000], dtype = tf.int32)\r\nmatrix2 = tf.ones([5000,5000], dtype = tf.int32)\r\nmatrix1 = tf.add(matrix1,2)\r\nproduct = tf.matmul(matrix1,matrix2)\r\n    \r\nsession = tf.Session(config=tf.ConfigProto(log_device_placement=True))\r\n\r\nrun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\nrun_metadata = tf.RunMetadata()\r\n\r\nimage = session.run(product, options=run_options, run_metadata=run_metadata)\r\n\r\n\r\n    # Create the Timeline object, and write it to a json\r\ntl = timeline.Timeline(run_metadata.step_stats)\r\nctf = tl.generate_chrome_trace_format()\r\nwith open('timelineDB.json', 'w') as f:\r\n\tf.write(ctf)\r\n```\r\n\r\nand here the logs:\r\n``` \r\n2017-07-14 12:33:41.431036: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-07-14 12:33:41.431080: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-07-14 12:33:41.431089: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-07-14 12:33:41.431096: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-07-14 12:33:41.431104: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-07-14 12:33:42.860681: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties: \r\nname: Tesla K20m\r\nmajor: 3 minor: 5 memoryClockRate (GHz) 0.7055\r\npciBusID 0000:02:00.0\r\nTotal memory: 4.63GiB\r\nFree memory: 4.57GiB\r\n2017-07-14 12:33:42.860741: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0 \r\n2017-07-14 12:33:42.860778: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y \r\n2017-07-14 12:33:42.860791: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0)\r\nDevice mapping:\r\n/job:localhost/replica:0/task:0/gpu:0 -> device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0\r\n2017-07-14 12:33:42.901828: I tensorflow/core/common_runtime/direct_session.cc:265] Device mapping:\r\n/job:localhost/replica:0/task:0/gpu:0 -> device: 0, name: Tesla K20m, pci bus id: 0000:02:00.0\r\n\r\nAdd: (Add): /job:localhost/replica:0/task:0/gpu:0\r\n2017-07-14 12:33:42.902645: I tensorflow/core/common_runtime/simple_placer.cc:847] Add: (Add)/job:localhost/replica:0/task:0/gpu:0\r\nMatMul: (MatMul): /job:localhost/replica:0/task:0/cpu:0\r\n2017-07-14 12:33:42.902669: I tensorflow/core/common_runtime/simple_placer.cc:847] MatMul: (MatMul)/job:localhost/replica:0/task:0/cpu:0\r\nAdd/y: (Const): /job:localhost/replica:0/task:0/gpu:0\r\n2017-07-14 12:33:42.902714: I tensorflow/core/common_runtime/simple_placer.cc:847] Add/y: (Const)/job:localhost/replica:0/task:0/gpu:0\r\nones: (Const): /job:localhost/replica:0/task:0/cpu:0\r\n2017-07-14 12:33:42.902736: I tensorflow/core/common_runtime/simple_placer.cc:847] ones: (Const)/job:localhost/replica:0/task:0/cpu:0\r\nzeros: (Const): /job:localhost/replica:0/task:0/gpu:0\r\n2017-07-14 12:33:42.902756: I tensorflow/core/common_runtime/simple_placer.cc:847] zeros: (Const)/job:localhost/replica:0/task:0/gpu:0\r\n2017-07-14 12:33:43.110880: I tensorflow/stream_executor/dso_loader.cc:139] successfully opened CUDA library libcupti.so.8.0 locally\r\n```\r\nI attach the .json generated (change .txt to .json and open it with chrome://tracing/)\r\n[timeline.txt](https://github.com/tensorflow/tensorflow/files/1148128/timeline.txt)\r\n"}