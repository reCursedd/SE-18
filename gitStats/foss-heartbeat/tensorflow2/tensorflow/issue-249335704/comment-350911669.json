{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/350911669", "html_url": "https://github.com/tensorflow/tensorflow/issues/12177#issuecomment-350911669", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12177", "id": 350911669, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDkxMTY2OQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-12T01:09:12Z", "updated_at": "2017-12-12T01:09:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Nothing obvious springs to mind. There might be some issue in one of the Eigen kernels we use when building with MSVC.</p>\n<p>Can you narrow the reproduction down further? In particular, it would be useful to know which op produces a different <em>output</em> in the two configurations. For example, to get the immediate inputs of the failing op, you could run the following code in both versions:</p>\n<div class=\"highlight highlight-source-python\"><pre>op <span class=\"pl-k\">=</span> tf.get_default_graph().get_operation_by_name(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>opt/gradients/node_label_update_1/Sum_grad/DynamicStitch<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-k\">for</span> input_ <span class=\"pl-k\">in</span> op.inputs:\n  <span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">input</span>, sess.run(input_, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x: Xdata, y: Ydata}))</pre></div>", "body_text": "Nothing obvious springs to mind. There might be some issue in one of the Eigen kernels we use when building with MSVC.\nCan you narrow the reproduction down further? In particular, it would be useful to know which op produces a different output in the two configurations. For example, to get the immediate inputs of the failing op, you could run the following code in both versions:\nop = tf.get_default_graph().get_operation_by_name(\"opt/gradients/node_label_update_1/Sum_grad/DynamicStitch\")\n\nfor input_ in op.inputs:\n  print(input, sess.run(input_, feed_dict={x: Xdata, y: Ydata}))", "body": "Nothing obvious springs to mind. There might be some issue in one of the Eigen kernels we use when building with MSVC.\r\n\r\nCan you narrow the reproduction down further? In particular, it would be useful to know which op produces a different *output* in the two configurations. For example, to get the immediate inputs of the failing op, you could run the following code in both versions:\r\n\r\n```python\r\nop = tf.get_default_graph().get_operation_by_name(\"opt/gradients/node_label_update_1/Sum_grad/DynamicStitch\")\r\n\r\nfor input_ in op.inputs:\r\n  print(input, sess.run(input_, feed_dict={x: Xdata, y: Ydata}))\r\n```"}