{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7201", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7201/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7201/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7201/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7201", "id": 204748234, "node_id": "MDU6SXNzdWUyMDQ3NDgyMzQ=", "number": 7201, "title": "Feeding to boolean placeholder -- works in TF 0.11 but not in 0.12.1", "user": {"login": "charlesq34", "id": 5589040, "node_id": "MDQ6VXNlcjU1ODkwNDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5589040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charlesq34", "html_url": "https://github.com/charlesq34", "followers_url": "https://api.github.com/users/charlesq34/followers", "following_url": "https://api.github.com/users/charlesq34/following{/other_user}", "gists_url": "https://api.github.com/users/charlesq34/gists{/gist_id}", "starred_url": "https://api.github.com/users/charlesq34/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charlesq34/subscriptions", "organizations_url": "https://api.github.com/users/charlesq34/orgs", "repos_url": "https://api.github.com/users/charlesq34/repos", "events_url": "https://api.github.com/users/charlesq34/events{/privacy}", "received_events_url": "https://api.github.com/users/charlesq34/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-02T00:29:35Z", "updated_at": "2018-11-20T19:55:45Z", "closed_at": "2017-02-10T16:01:45Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> The info is attached below. I've targeted the problem to the conflict of tf.cond on boolean placeholder with the ExponentialMovingAverage's apply function.</p>\n<p>The same code works just fine in TF 0.11</p>\n<h1>Environment Info</h1>\n<p>OS: Ubuntu 14.04<br>\nCUDA: 8.0 with cuDNN 5.1<br>\nTEnsorflow 0.12.1</p>\n<h1>Minimal Example:</h1>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-k\">with</span> tf.Graph().as_default():\n    <span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/gpu:0<span class=\"pl-pds\">'</span></span>):\n        isTrain <span class=\"pl-k\">=</span> tf.placeholder(tf.bool, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>())\n        user_input <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">4</span>))\n\n        <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>batchnorm<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> sc:\n           batch_mean, batch_var <span class=\"pl-k\">=</span> tf.nn.moments(user_input, [<span class=\"pl-c1\">0</span>,])\n           ema <span class=\"pl-k\">=</span> tf.train.ExponentialMovingAverage(<span class=\"pl-v\">decay</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.9</span>)\n\n           ema_apply_op <span class=\"pl-k\">=</span> tf.cond(isTrain,\n                           <span class=\"pl-k\">lambda</span>: ema.apply([batch_mean, batch_var]),\n                           <span class=\"pl-k\">lambda</span>: tf.no_op())\n\n    init <span class=\"pl-k\">=</span> tf.initialize_all_variables()\n    sess <span class=\"pl-k\">=</span> tf.Session()\n    sess.run(init)\n    sess.run([batch_mean], <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{user_input:[[<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>],[<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">5</span>]], isTrain: <span class=\"pl-c1\">True</span>})</pre></div>\n<h1>Error Message:</h1>\n<pre><code>InvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'Placeholder' with dtype bool\n\t [[Node: Placeholder = Placeholder[dtype=DT_BOOL, shape=[], _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\n</code></pre>", "body_text": "@yaroslavvb The info is attached below. I've targeted the problem to the conflict of tf.cond on boolean placeholder with the ExponentialMovingAverage's apply function.\nThe same code works just fine in TF 0.11\nEnvironment Info\nOS: Ubuntu 14.04\nCUDA: 8.0 with cuDNN 5.1\nTEnsorflow 0.12.1\nMinimal Example:\nimport tensorflow as tf\nimport numpy as np\n\nwith tf.Graph().as_default():\n    with tf.device('/gpu:0'):\n        isTrain = tf.placeholder(tf.bool, shape=())\n        user_input = tf.placeholder(tf.float32, shape=(2,4))\n\n        with tf.variable_scope('batchnorm') as sc:\n           batch_mean, batch_var = tf.nn.moments(user_input, [0,])\n           ema = tf.train.ExponentialMovingAverage(decay=0.9)\n\n           ema_apply_op = tf.cond(isTrain,\n                           lambda: ema.apply([batch_mean, batch_var]),\n                           lambda: tf.no_op())\n\n    init = tf.initialize_all_variables()\n    sess = tf.Session()\n    sess.run(init)\n    sess.run([batch_mean], feed_dict={user_input:[[1,2,3,4],[2,3,4,5]], isTrain: True})\nError Message:\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'Placeholder' with dtype bool\n\t [[Node: Placeholder = Placeholder[dtype=DT_BOOL, shape=[], _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]", "body": "@yaroslavvb The info is attached below. I've targeted the problem to the conflict of tf.cond on boolean placeholder with the ExponentialMovingAverage's apply function.\r\n\r\nThe same code works just fine in TF 0.11\r\n\r\nEnvironment Info\r\n============================\r\nOS: Ubuntu 14.04\r\nCUDA: 8.0 with cuDNN 5.1\r\nTEnsorflow 0.12.1\r\n\r\nMinimal Example:\r\n============================\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nwith tf.Graph().as_default():\r\n    with tf.device('/gpu:0'):\r\n        isTrain = tf.placeholder(tf.bool, shape=())\r\n        user_input = tf.placeholder(tf.float32, shape=(2,4))\r\n\r\n        with tf.variable_scope('batchnorm') as sc:\r\n           batch_mean, batch_var = tf.nn.moments(user_input, [0,])\r\n           ema = tf.train.ExponentialMovingAverage(decay=0.9)\r\n\r\n           ema_apply_op = tf.cond(isTrain,\r\n                           lambda: ema.apply([batch_mean, batch_var]),\r\n                           lambda: tf.no_op())\r\n\r\n    init = tf.initialize_all_variables()\r\n    sess = tf.Session()\r\n    sess.run(init)\r\n    sess.run([batch_mean], feed_dict={user_input:[[1,2,3,4],[2,3,4,5]], isTrain: True})\r\n```\r\n\r\nError Message:\r\n============================\r\n```\r\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'Placeholder' with dtype bool\r\n\t [[Node: Placeholder = Placeholder[dtype=DT_BOOL, shape=[], _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\r\n```"}