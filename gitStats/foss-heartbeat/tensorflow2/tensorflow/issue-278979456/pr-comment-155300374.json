{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155300374", "pull_request_review_id": 81581750, "id": 155300374, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTMwMDM3NA==", "diff_hunk": "@@ -0,0 +1,71 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include <algorithm>\n+#include <queue>\n+\n+namespace tflite {\n+namespace label_image {\n+\n+extern bool input_floating;\n+\n+// Returns the top N confidence values over threshold in the provided vector,\n+// sorted by confidence in descending order.\n+template <class T>\n+void get_top_n(T* prediction, const int prediction_size,\n+               const size_t num_results, const float threshold,\n+               std::vector<std::pair<float, int>>* top_results) {\n+  // Will contain top N results in ascending order.\n+  std::priority_queue<std::pair<float, int>, std::vector<std::pair<float, int>>,\n+                      std::greater<std::pair<float, int>>>\n+      top_result_pq;\n+\n+  const long count = prediction_size;\n+  for (int i = 0; i < count; ++i) {\n+    float value;\n+    if (input_floating)\n+      value = prediction[i];\n+    else\n+      value = prediction[i] / 255.0;\n+    // Only add it if it beats the threshold and has a chance at being in\n+    // the top N.\n+    if (value < threshold) {\n+      continue;\n+    }\n+\n+    top_result_pq.push(std::pair<float, int>(value, i));\n+\n+    // If at capacity, kick the smallest value out.\n+    if (top_result_pq.size() > num_results) {\n+      top_result_pq.pop();\n+    }\n+  }\n+\n+  // Copy to output vector and reverse into descending order.\n+  while (!top_result_pq.empty()) {\n+    top_results->push_back(top_result_pq.top());\n+    top_result_pq.pop();\n+  }\n+  std::reverse(top_results->begin(), top_results->end());\n+}\n+\n+// explicit instantiation so that we can use them otherwhere", "path": "tensorflow/contrib/lite/examples/label_image/get_top_n.cc", "position": null, "original_position": 64, "commit_id": "8b7ad1194bbcb6e3f147791381c7502edf8b0ba8", "original_commit_id": "9d6093d09ebeb547fedf08aa05a8174d720dc651", "user": {"login": "andrehentz", "id": 25754898, "node_id": "MDQ6VXNlcjI1NzU0ODk4", "avatar_url": "https://avatars3.githubusercontent.com/u/25754898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrehentz", "html_url": "https://github.com/andrehentz", "followers_url": "https://api.github.com/users/andrehentz/followers", "following_url": "https://api.github.com/users/andrehentz/following{/other_user}", "gists_url": "https://api.github.com/users/andrehentz/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrehentz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrehentz/subscriptions", "organizations_url": "https://api.github.com/users/andrehentz/orgs", "repos_url": "https://api.github.com/users/andrehentz/repos", "events_url": "https://api.github.com/users/andrehentz/events{/privacy}", "received_events_url": "https://api.github.com/users/andrehentz/received_events", "type": "User", "site_admin": false}, "body": "As I comment elsewhere, these template instantiations are better placed in a header file somewhere, as free function whose implementations use the template.", "created_at": "2017-12-06T17:14:03Z", "updated_at": "2017-12-14T07:45:55Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15095#discussion_r155300374", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15095", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155300374"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15095#discussion_r155300374"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15095"}}, "body_html": "<p>As I comment elsewhere, these template instantiations are better placed in a header file somewhere, as free function whose implementations use the template.</p>", "body_text": "As I comment elsewhere, these template instantiations are better placed in a header file somewhere, as free function whose implementations use the template."}