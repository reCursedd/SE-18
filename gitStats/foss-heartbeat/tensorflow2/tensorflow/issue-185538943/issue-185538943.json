{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5225", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5225/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5225/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5225/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5225", "id": 185538943, "node_id": "MDU6SXNzdWUxODU1Mzg5NDM=", "number": 5225, "title": "Shape must be rank 0 but is rank 1, Potential issue with parse_single_sequence_example", "user": {"login": "GrandathePanda", "id": 6426407, "node_id": "MDQ6VXNlcjY0MjY0MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6426407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GrandathePanda", "html_url": "https://github.com/GrandathePanda", "followers_url": "https://api.github.com/users/GrandathePanda/followers", "following_url": "https://api.github.com/users/GrandathePanda/following{/other_user}", "gists_url": "https://api.github.com/users/GrandathePanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/GrandathePanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GrandathePanda/subscriptions", "organizations_url": "https://api.github.com/users/GrandathePanda/orgs", "repos_url": "https://api.github.com/users/GrandathePanda/repos", "events_url": "https://api.github.com/users/GrandathePanda/events{/privacy}", "received_events_url": "https://api.github.com/users/GrandathePanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-26T23:43:34Z", "updated_at": "2016-10-29T00:41:54Z", "closed_at": "2016-10-29T00:41:54Z", "author_association": "NONE", "body_html": "<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>Spent quite some time digging around didn't come up with anything from stack overflow or other issues that landed near my issues. I also debugged the stack trace all the way down into where it jumps out of python and didn't come up with anything particularly useful.</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nUbuntu 16.04 64bit</p>\n<p>Installed version of CUDA and cuDNN: 8 and 5<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<p>-rw-r--r-- 1 root root 558720 Sep 14 19:02 /usr/local/cuda/lib64/libcudadevrt.a<br>\nlrwxrwxrwx 1 root root     16 Sep 14 19:05 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.8.0<br>\nlrwxrwxrwx 1 root root     19 Sep 14 19:05 /usr/local/cuda/lib64/libcudart.so.8.0 -&gt; libcudart.so.8.0.44<br>\n-rw-r--r-- 1 root root 415432 Sep 14 19:02 /usr/local/cuda/lib64/libcudart.so.8.0.44<br>\n-rw-r--r-- 1 root root 775162 Sep 14 19:02 /usr/local/cuda/lib64/libcudart_static.a</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed:</li>\n<li>The output from <code>python3 -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<p>I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally<br>\n0.11.0rc1</p>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<pre><code>import tensorflow as tf\nimport tempfile\nfrom IPython import embed\n\nsequences = [[1, 2, 3], [4, 5, 1], [1, 2]]\nlabel_sequences = [[0, 1, 0], [1, 0, 0], [1, 1]]\n\ndef make_example(sequence, labels):\n\n    ex = tf.train.SequenceExample()\n\n    sequence_length = len(sequence)\n    ex.context.feature[\"length\"].int64_list.value.append(sequence_length)\n\n    fl_tokens = ex.feature_lists.feature_list[\"tokens\"]\n    fl_labels = ex.feature_lists.feature_list[\"labels\"]\n    for token, label in zip(sequence, labels):\n        fl_tokens.feature.add().int64_list.value.append(token)\n        fl_labels.feature.add().int64_list.value.append(label)\n    return ex\n\n\nwriter = tf.python_io.TFRecordWriter('./test.tfrecords')\nfor sequence, label_sequence in zip(sequences, label_sequences):\n    ex = make_example(sequence, label_sequence)\n    writer.write(ex.SerializeToString())\nwriter.close()\n\ntf.reset_default_graph()\n\nfile_name_queue = tf.train.string_input_producer(['./test.tfrecords'], num_epochs=None)\n\nreader = tf.TFRecordReader()\n\n\n\ncontext_features = {\n    \"length\": tf.FixedLenFeature([], dtype=tf.int64)\n}\nsequence_features = {\n    \"tokens\": tf.FixedLenSequenceFeature([], dtype=tf.int64),\n    \"labels\": tf.FixedLenSequenceFeature([], dtype=tf.int64)\n}\n\nex = reader.read(file_name_queue)\n\n# Parse the example (returns a dictionary of tensors)\ncontext_parsed, sequence_parsed = tf.parse_single_sequence_example(\n    serialized=ex,\n    context_features=context_features,\n    sequence_features=sequence_features\n)\n\n\ncontext = tf.contrib.learn.run_n(context_parsed, n=1, feed_dict=None)\nprint(context[0])\nsequence = tf.contrib.learn.run_n(sequence_parsed, n=1, feed_dict=None)\nprint(sequence[0])\n\n</code></pre>\n<h3>What other attempted solutions have you tried?</h3>\n<p>This was the quickest reproduction I could put together using some sample code from the web with a few tweaks. Initially I was trying to do this on a more serious problem with an entirely different dataset/proto, but same issue. I've considered skipping this and using some other file format. However, I think the binary format will be best.</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<p>Traceback (most recent call last):<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/common_shapes.py\", line 594, in call_cpp_shape_fn<br>\nstatus)<br>\nFile \"/usr/lib/python3.5/contextlib.py\", line 66, in <strong>exit</strong><br>\nnext(self.gen)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors.py\", line 463, in raise_exception_on_not_ok_status<br>\npywrap_tensorflow.TF_GetCode(status))<br>\ntensorflow.python.framework.errors.InvalidArgumentError: Shape must be rank 0 but is rank 1</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>Traceback (most recent call last):<br>\nFile \"my_test.py\", line 51, in <br>\nsequence_features=sequence_features<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/parsing_ops.py\", line 640, in parse_single_sequence_example<br>\nfeature_list_dense_defaults, example_name, name)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/parsing_ops.py\", line 837, in _parse_single_sequence_example_raw<br>\nname=name)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_parsing_ops.py\", line 285, in _parse_single_sequence_example<br>\nname=name)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 749, in apply_op<br>\nop_def=op_def)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2382, in create_op<br>\nset_shapes_for_outputs(ret)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1783, in set_shapes_for_outputs<br>\nshapes = shape_func(op)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/common_shapes.py\", line 596, in call_cpp_shape_fn<br>\nraise ValueError(err.message)<br>\nValueError: Shape must be rank 0 but is rank 1</p>", "body_text": "What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nSpent quite some time digging around didn't come up with anything from stack overflow or other issues that landed near my issues. I also debugged the stack trace all the way down into where it jumps out of python and didn't come up with anything particularly useful.\nEnvironment info\nOperating System:\nUbuntu 16.04 64bit\nInstalled version of CUDA and cuDNN: 8 and 5\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n-rw-r--r-- 1 root root 558720 Sep 14 19:02 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Sep 14 19:05 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root root     19 Sep 14 19:05 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44\n-rw-r--r-- 1 root root 415432 Sep 14 19:02 /usr/local/cuda/lib64/libcudart.so.8.0.44\n-rw-r--r-- 1 root root 775162 Sep 14 19:02 /usr/local/cuda/lib64/libcudart_static.a\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed:\nThe output from python3 -c \"import tensorflow; print(tensorflow.__version__)\".\n\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\n0.11.0rc1\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nimport tensorflow as tf\nimport tempfile\nfrom IPython import embed\n\nsequences = [[1, 2, 3], [4, 5, 1], [1, 2]]\nlabel_sequences = [[0, 1, 0], [1, 0, 0], [1, 1]]\n\ndef make_example(sequence, labels):\n\n    ex = tf.train.SequenceExample()\n\n    sequence_length = len(sequence)\n    ex.context.feature[\"length\"].int64_list.value.append(sequence_length)\n\n    fl_tokens = ex.feature_lists.feature_list[\"tokens\"]\n    fl_labels = ex.feature_lists.feature_list[\"labels\"]\n    for token, label in zip(sequence, labels):\n        fl_tokens.feature.add().int64_list.value.append(token)\n        fl_labels.feature.add().int64_list.value.append(label)\n    return ex\n\n\nwriter = tf.python_io.TFRecordWriter('./test.tfrecords')\nfor sequence, label_sequence in zip(sequences, label_sequences):\n    ex = make_example(sequence, label_sequence)\n    writer.write(ex.SerializeToString())\nwriter.close()\n\ntf.reset_default_graph()\n\nfile_name_queue = tf.train.string_input_producer(['./test.tfrecords'], num_epochs=None)\n\nreader = tf.TFRecordReader()\n\n\n\ncontext_features = {\n    \"length\": tf.FixedLenFeature([], dtype=tf.int64)\n}\nsequence_features = {\n    \"tokens\": tf.FixedLenSequenceFeature([], dtype=tf.int64),\n    \"labels\": tf.FixedLenSequenceFeature([], dtype=tf.int64)\n}\n\nex = reader.read(file_name_queue)\n\n# Parse the example (returns a dictionary of tensors)\ncontext_parsed, sequence_parsed = tf.parse_single_sequence_example(\n    serialized=ex,\n    context_features=context_features,\n    sequence_features=sequence_features\n)\n\n\ncontext = tf.contrib.learn.run_n(context_parsed, n=1, feed_dict=None)\nprint(context[0])\nsequence = tf.contrib.learn.run_n(sequence_parsed, n=1, feed_dict=None)\nprint(sequence[0])\n\n\nWhat other attempted solutions have you tried?\nThis was the quickest reproduction I could put together using some sample code from the web with a few tweaks. Initially I was trying to do this on a more serious problem with an entirely different dataset/proto, but same issue. I've considered skipping this and using some other file format. However, I think the binary format will be best.\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/common_shapes.py\", line 594, in call_cpp_shape_fn\nstatus)\nFile \"/usr/lib/python3.5/contextlib.py\", line 66, in exit\nnext(self.gen)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors.py\", line 463, in raise_exception_on_not_ok_status\npywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors.InvalidArgumentError: Shape must be rank 0 but is rank 1\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"my_test.py\", line 51, in \nsequence_features=sequence_features\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/parsing_ops.py\", line 640, in parse_single_sequence_example\nfeature_list_dense_defaults, example_name, name)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/parsing_ops.py\", line 837, in _parse_single_sequence_example_raw\nname=name)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_parsing_ops.py\", line 285, in _parse_single_sequence_example\nname=name)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 749, in apply_op\nop_def=op_def)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2382, in create_op\nset_shapes_for_outputs(ret)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1783, in set_shapes_for_outputs\nshapes = shape_func(op)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/common_shapes.py\", line 596, in call_cpp_shape_fn\nraise ValueError(err.message)\nValueError: Shape must be rank 0 but is rank 1", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n\nSpent quite some time digging around didn't come up with anything from stack overflow or other issues that landed near my issues. I also debugged the stack trace all the way down into where it jumps out of python and didn't come up with anything particularly useful.  \n### Environment info\n\nOperating System:\nUbuntu 16.04 64bit\n\nInstalled version of CUDA and cuDNN: 8 and 5\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n-rw-r--r-- 1 root root 558720 Sep 14 19:02 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Sep 14 19:05 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root root     19 Sep 14 19:05 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44\n-rw-r--r-- 1 root root 415432 Sep 14 19:02 /usr/local/cuda/lib64/libcudart.so.8.0.44\n-rw-r--r-- 1 root root 775162 Sep 14 19:02 /usr/local/cuda/lib64/libcudart_static.a\n\nIf installed from binary pip package, provide:\n1. A link to the pip package you installed:\n2. The output from `python3 -c \"import tensorflow; print(tensorflow.__version__)\"`.\n\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\n0.11.0rc1\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n\n```\nimport tensorflow as tf\nimport tempfile\nfrom IPython import embed\n\nsequences = [[1, 2, 3], [4, 5, 1], [1, 2]]\nlabel_sequences = [[0, 1, 0], [1, 0, 0], [1, 1]]\n\ndef make_example(sequence, labels):\n\n    ex = tf.train.SequenceExample()\n\n    sequence_length = len(sequence)\n    ex.context.feature[\"length\"].int64_list.value.append(sequence_length)\n\n    fl_tokens = ex.feature_lists.feature_list[\"tokens\"]\n    fl_labels = ex.feature_lists.feature_list[\"labels\"]\n    for token, label in zip(sequence, labels):\n        fl_tokens.feature.add().int64_list.value.append(token)\n        fl_labels.feature.add().int64_list.value.append(label)\n    return ex\n\n\nwriter = tf.python_io.TFRecordWriter('./test.tfrecords')\nfor sequence, label_sequence in zip(sequences, label_sequences):\n    ex = make_example(sequence, label_sequence)\n    writer.write(ex.SerializeToString())\nwriter.close()\n\ntf.reset_default_graph()\n\nfile_name_queue = tf.train.string_input_producer(['./test.tfrecords'], num_epochs=None)\n\nreader = tf.TFRecordReader()\n\n\n\ncontext_features = {\n    \"length\": tf.FixedLenFeature([], dtype=tf.int64)\n}\nsequence_features = {\n    \"tokens\": tf.FixedLenSequenceFeature([], dtype=tf.int64),\n    \"labels\": tf.FixedLenSequenceFeature([], dtype=tf.int64)\n}\n\nex = reader.read(file_name_queue)\n\n# Parse the example (returns a dictionary of tensors)\ncontext_parsed, sequence_parsed = tf.parse_single_sequence_example(\n    serialized=ex,\n    context_features=context_features,\n    sequence_features=sequence_features\n)\n\n\ncontext = tf.contrib.learn.run_n(context_parsed, n=1, feed_dict=None)\nprint(context[0])\nsequence = tf.contrib.learn.run_n(sequence_parsed, n=1, feed_dict=None)\nprint(sequence[0])\n\n```\n### What other attempted solutions have you tried?\n\nThis was the quickest reproduction I could put together using some sample code from the web with a few tweaks. Initially I was trying to do this on a more serious problem with an entirely different dataset/proto, but same issue. I've considered skipping this and using some other file format. However, I think the binary format will be best.  \n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment or provide link).\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/common_shapes.py\", line 594, in call_cpp_shape_fn\n    status)\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in **exit**\n    next(self.gen)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors.py\", line 463, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors.InvalidArgumentError: Shape must be rank 0 but is rank 1\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"my_test.py\", line 51, in <module>\n    sequence_features=sequence_features\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/parsing_ops.py\", line 640, in parse_single_sequence_example\n    feature_list_dense_defaults, example_name, name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/parsing_ops.py\", line 837, in _parse_single_sequence_example_raw\n    name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_parsing_ops.py\", line 285, in _parse_single_sequence_example\n    name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 749, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2382, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1783, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/common_shapes.py\", line 596, in call_cpp_shape_fn\n    raise ValueError(err.message)\nValueError: Shape must be rank 0 but is rank 1\n"}