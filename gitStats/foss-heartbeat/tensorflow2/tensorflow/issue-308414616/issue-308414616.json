{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17995", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17995/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17995/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17995/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17995", "id": 308414616, "node_id": "MDU6SXNzdWUzMDg0MTQ2MTY=", "number": 17995, "title": "tf.igamma (lower regularized incomplete Gamma function) returns the incorrect derivative", "user": {"login": "erikbern", "id": 1027979, "node_id": "MDQ6VXNlcjEwMjc5Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1027979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikbern", "html_url": "https://github.com/erikbern", "followers_url": "https://api.github.com/users/erikbern/followers", "following_url": "https://api.github.com/users/erikbern/following{/other_user}", "gists_url": "https://api.github.com/users/erikbern/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikbern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikbern/subscriptions", "organizations_url": "https://api.github.com/users/erikbern/orgs", "repos_url": "https://api.github.com/users/erikbern/repos", "events_url": "https://api.github.com/users/erikbern/events{/privacy}", "received_events_url": "https://api.github.com/users/erikbern/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-03-26T02:32:59Z", "updated_at": "2018-11-19T13:22:15Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Mac OS X 10.11.6</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary (pypi)</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.6.0-0-gd2e24b6039</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version</strong>: using a precompiled version, not sure</li>\n<li><strong>CUDA/cuDNN version</strong>: not using a GPU</li>\n<li><strong>GPU model and memory</strong>: not using a GPU</li>\n<li><strong>Exact command to reproduce</strong>: <code>python igamma_test.py</code></li>\n</ul>\n<h3>Describe the problem</h3>\n<p><code>tf.igamma</code>, which is the lower regularized incomplete Gamma function, returns an incorrect derivative with respect to <code>a</code></p>\n<p>This is probably very low down on the list of things to fix, but I wanted to highlight it since I spent something like 5 hours trying to understand why my model wasn't converging. I was fitting a Gamma distribution, and deep into the code it turns out that <code>tf.igamma</code> doesn't return the right derivative.</p>\n<p>I suspect the derivative wrt <code>a</code> isn't supported, but I would have much rather seen an exception being thrown.</p>\n<p>My workaround ended up being not fitting <code>a</code> with gradient descent, but instead just perturbing it by epsilon (luckily I only had one single value that I tried to fit)</p>\n<p>Filing this issue mostly in the hope that anyone in the future doesn't waste the same amount of time that I spent.</p>\n<h3>Source code / logs</h3>\n<pre><code>a = tf.placeholder(dtype=tf.float32, shape=[None])\nx = tf.placeholder(dtype=tf.float32, shape=[None])\ny = tf.igamma(a, x)\ny_grad_a = tf.gradients(y, a)  # returns None, should return a tensor\ny_grad_x = tf.gradients(y, x)  # returns a tensor\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS X 10.11.6\nTensorFlow installed from (source or binary): binary (pypi)\nTensorFlow version (use command below): v1.6.0-0-gd2e24b6039\nPython version: 3.6\nBazel version: using a precompiled version, not sure\nCUDA/cuDNN version: not using a GPU\nGPU model and memory: not using a GPU\nExact command to reproduce: python igamma_test.py\n\nDescribe the problem\ntf.igamma, which is the lower regularized incomplete Gamma function, returns an incorrect derivative with respect to a\nThis is probably very low down on the list of things to fix, but I wanted to highlight it since I spent something like 5 hours trying to understand why my model wasn't converging. I was fitting a Gamma distribution, and deep into the code it turns out that tf.igamma doesn't return the right derivative.\nI suspect the derivative wrt a isn't supported, but I would have much rather seen an exception being thrown.\nMy workaround ended up being not fitting a with gradient descent, but instead just perturbing it by epsilon (luckily I only had one single value that I tried to fit)\nFiling this issue mostly in the hope that anyone in the future doesn't waste the same amount of time that I spent.\nSource code / logs\na = tf.placeholder(dtype=tf.float32, shape=[None])\nx = tf.placeholder(dtype=tf.float32, shape=[None])\ny = tf.igamma(a, x)\ny_grad_a = tf.gradients(y, a)  # returns None, should return a tensor\ny_grad_x = tf.gradients(y, x)  # returns a tensor", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS X 10.11.6\r\n- **TensorFlow installed from (source or binary)**: binary (pypi)\r\n- **TensorFlow version (use command below)**: v1.6.0-0-gd2e24b6039\r\n- **Python version**: 3.6\r\n- **Bazel version**: using a precompiled version, not sure\r\n- **CUDA/cuDNN version**: not using a GPU\r\n- **GPU model and memory**: not using a GPU\r\n- **Exact command to reproduce**: `python igamma_test.py`\r\n\r\n### Describe the problem\r\n\r\n`tf.igamma`, which is the lower regularized incomplete Gamma function, returns an incorrect derivative with respect to `a`\r\n\r\nThis is probably very low down on the list of things to fix, but I wanted to highlight it since I spent something like 5 hours trying to understand why my model wasn't converging. I was fitting a Gamma distribution, and deep into the code it turns out that `tf.igamma` doesn't return the right derivative.\r\n\r\nI suspect the derivative wrt `a` isn't supported, but I would have much rather seen an exception being thrown. \r\n\r\nMy workaround ended up being not fitting `a` with gradient descent, but instead just perturbing it by epsilon (luckily I only had one single value that I tried to fit)\r\n\r\nFiling this issue mostly in the hope that anyone in the future doesn't waste the same amount of time that I spent.\r\n\r\n### Source code / logs\r\n\r\n```\r\na = tf.placeholder(dtype=tf.float32, shape=[None])\r\nx = tf.placeholder(dtype=tf.float32, shape=[None])\r\ny = tf.igamma(a, x)\r\ny_grad_a = tf.gradients(y, a)  # returns None, should return a tensor\r\ny_grad_x = tf.gradients(y, x)  # returns a tensor\r\n```"}