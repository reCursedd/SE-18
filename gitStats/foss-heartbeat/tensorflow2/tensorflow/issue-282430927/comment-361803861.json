{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/361803861", "html_url": "https://github.com/tensorflow/tensorflow/issues/15396#issuecomment-361803861", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15396", "id": 361803861, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTgwMzg2MQ==", "user": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-31T02:30:32Z", "updated_at": "2018-01-31T02:30:32Z", "author_association": "MEMBER", "body_html": "<p>Hey, sorry for not looking at this sooner, too many issues!</p>\n<p>One note: I'm working on switching the Python API to call the C API, which means it'll switch to using the C++ shape inference implementation. I tried running the example with the C API enabled (by setting the env variable TF_C_API_GRAPH_CONSTRUCTION=1), and unfortunately it does even worse:</p>\n<pre><code>Tensor(\"Reshape:0\", shape=(2, 3, 20), dtype=float32)\nTensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\nTensor(\"Reshape_2:0\", shape=(?, ?, ?), dtype=float32)\nTensor(\"Reshape_3:0\", shape=(?, ?, ?), dtype=float32)\n</code></pre>\n<p>However, whoever takes this on should still fix the C++ shape inference instead of the Python version, since the Python version will go away soon.</p>\n<p>I'm not super familiar with shape inference, but I would guess this is doable if someone is willing to take the time to debug the example and get familiar with the shape inference code. It's pretty tricky, but also somewhat self-contained and easy to read, so someone familiar with C++ and debugging should be able to do it given some time, even if they're not super familiar with TF (I can offer pointers for how to get started). I'll probably eventually do this myself if no one else does it, but it'll take a while for me to get to it.</p>", "body_text": "Hey, sorry for not looking at this sooner, too many issues!\nOne note: I'm working on switching the Python API to call the C API, which means it'll switch to using the C++ shape inference implementation. I tried running the example with the C API enabled (by setting the env variable TF_C_API_GRAPH_CONSTRUCTION=1), and unfortunately it does even worse:\nTensor(\"Reshape:0\", shape=(2, 3, 20), dtype=float32)\nTensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\nTensor(\"Reshape_2:0\", shape=(?, ?, ?), dtype=float32)\nTensor(\"Reshape_3:0\", shape=(?, ?, ?), dtype=float32)\n\nHowever, whoever takes this on should still fix the C++ shape inference instead of the Python version, since the Python version will go away soon.\nI'm not super familiar with shape inference, but I would guess this is doable if someone is willing to take the time to debug the example and get familiar with the shape inference code. It's pretty tricky, but also somewhat self-contained and easy to read, so someone familiar with C++ and debugging should be able to do it given some time, even if they're not super familiar with TF (I can offer pointers for how to get started). I'll probably eventually do this myself if no one else does it, but it'll take a while for me to get to it.", "body": "Hey, sorry for not looking at this sooner, too many issues!\r\n\r\nOne note: I'm working on switching the Python API to call the C API, which means it'll switch to using the C++ shape inference implementation. I tried running the example with the C API enabled (by setting the env variable TF_C_API_GRAPH_CONSTRUCTION=1), and unfortunately it does even worse:\r\n```\r\nTensor(\"Reshape:0\", shape=(2, 3, 20), dtype=float32)\r\nTensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\r\nTensor(\"Reshape_2:0\", shape=(?, ?, ?), dtype=float32)\r\nTensor(\"Reshape_3:0\", shape=(?, ?, ?), dtype=float32)\r\n```\r\n\r\nHowever, whoever takes this on should still fix the C++ shape inference instead of the Python version, since the Python version will go away soon.\r\n\r\nI'm not super familiar with shape inference, but I would guess this is doable if someone is willing to take the time to debug the example and get familiar with the shape inference code. It's pretty tricky, but also somewhat self-contained and easy to read, so someone familiar with C++ and debugging should be able to do it given some time, even if they're not super familiar with TF (I can offer pointers for how to get started). I'll probably eventually do this myself if no one else does it, but it'll take a while for me to get to it."}