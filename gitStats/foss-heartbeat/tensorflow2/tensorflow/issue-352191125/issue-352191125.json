{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21738", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21738/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21738/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21738/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21738", "id": 352191125, "node_id": "MDU6SXNzdWUzNTIxOTExMjU=", "number": 21738, "title": "Model learns with keras but doesn't learn with tf.keras", "user": {"login": "kmadhugit", "id": 8188686, "node_id": "MDQ6VXNlcjgxODg2ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8188686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmadhugit", "html_url": "https://github.com/kmadhugit", "followers_url": "https://api.github.com/users/kmadhugit/followers", "following_url": "https://api.github.com/users/kmadhugit/following{/other_user}", "gists_url": "https://api.github.com/users/kmadhugit/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmadhugit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmadhugit/subscriptions", "organizations_url": "https://api.github.com/users/kmadhugit/orgs", "repos_url": "https://api.github.com/users/kmadhugit/repos", "events_url": "https://api.github.com/users/kmadhugit/events{/privacy}", "received_events_url": "https://api.github.com/users/kmadhugit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-08-20T15:41:38Z", "updated_at": "2018-09-04T16:55:55Z", "closed_at": "2018-09-04T16:55:55Z", "author_association": "NONE", "body_html": "<p>The below code would just work fine on keras,</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">from</span> keras.layers <span class=\"pl-k\">import</span> Flatten,Dense,Dropout\n<span class=\"pl-k\">from</span> keras.models <span class=\"pl-k\">import</span> Sequential\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>from tensorflow.python.keras.layers import Flatten,Dense,Dropout</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>from tensorflow.python.keras.models import Sequential</span>\n\nmnist <span class=\"pl-k\">=</span> tf.keras.datasets.mnist\n\n(x_train, y_train),(x_test, y_test) <span class=\"pl-k\">=</span> mnist.load_data()\nx_train, x_test <span class=\"pl-k\">=</span> x_train <span class=\"pl-k\">/</span> <span class=\"pl-c1\">255.0</span>, x_test <span class=\"pl-k\">/</span> <span class=\"pl-c1\">255.0</span>\n\n<span class=\"pl-k\">import</span> keras\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\">f</span><span class=\"pl-pds\">'</span><span class=\"pl-s\">tf version = </span><span class=\"pl-c1\">{</span>tf.<span class=\"pl-c1\">__version__</span><span class=\"pl-c1\">}</span><span class=\"pl-s\"> </span><span class=\"pl-pds\">'</span>)\n\nmodel <span class=\"pl-k\">=</span> Sequential([\n  Flatten(<span class=\"pl-v\">input_shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">28</span>,<span class=\"pl-c1\">28</span>)),\n  Dense(<span class=\"pl-c1\">512</span>, <span class=\"pl-v\">kernel_initializer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>uniform<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span>tf.nn.relu),\n  Dropout(<span class=\"pl-c1\">0.2</span>),\n  Dense(<span class=\"pl-c1\">10</span>, <span class=\"pl-v\">kernel_initializer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>uniform<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span>tf.nn.softmax)\n])\n\n\nmodel.compile(<span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>adam<span class=\"pl-pds\">'</span></span>,\n              <span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>sparse_categorical_crossentropy<span class=\"pl-pds\">'</span></span>,\n              <span class=\"pl-v\">metrics</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>accuracy<span class=\"pl-pds\">'</span></span>])\n\nmodel.fit(x_train, y_train, <span class=\"pl-v\">epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\nmodel.evaluate(x_test, y_test)</pre></div>\n<p><strong>KERAS</strong></p>\n<pre lang=\"Using\" data-meta=\"TensorFlow backend.\"><code>tf version = 1.10.0 \nEpoch 1/1\n2018-08-20 20:57:06.754898: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n\n   32/60000 [..............................] - ETA: 14:00 - loss: 2.3347 - acc: 0.1250\n  224/60000 [..............................] - ETA: 2:14 - loss: 2.1174 - acc: 0.3839 \n  416/60000 [..............................] - ETA: 1:19 - loss: 1.8965 - acc: 0.4712\n  576/60000 [..............................] - ETA: 1:03 - loss: 1.7533 - acc: 0.5365\n  ....\n .....\n59744/60000 [============================&gt;.] - ETA: 0s - loss: 0.2369 - acc: 0.9308\n59936/60000 [============================&gt;.] - ETA: 0s - loss: 0.2363 - acc: 0.9310\n60000/60000 [==============================] - 22s 360us/step - loss: 0.2363 - **acc: 0.9310**\n</code></pre>\n<p>but if you the import layers from tf.keras instead of the keras(i.e comment lines 3 &amp; 4 and uncomment lines 6 &amp; 7), the weights won't be updated and model doesn't learn at all.</p>\n<p><strong>tf.keras</strong></p>\n<pre><code>Using TensorFlow backend.\ntf version = 1.10.0 \nEpoch 1/1\n2018-08-20 21:08:05.112916: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n   32/60000 [..............................] - ETA: 10:26 - loss: 14.1033 - acc: 0.1250\n  224/60000 [..............................] - ETA: 1:42 - loss: 14.0464 - acc: 0.1205 \n  448/60000 [..............................] - ETA: 58s - loss: 14.3412 - acc: 0.1027 \n....\n....\n59744/60000 [============================&gt;.] - ETA: 0s - loss: 13.2745 - acc: 0.1744\n59904/60000 [============================&gt;.] - ETA: 0s - loss: 13.2730 - acc: 0.1745\n60000/60000 [==============================] - 19s 323us/step - loss: 13.2708 - **acc: 0.1746**\n</code></pre>\n<p>The problem is with <strong>kernel_initalizer</strong>, if you give a unsupported initalizer instead of giving an error tf.keras just fails somewhere. However keras works just fine.</p>", "body_text": "The below code would just work fine on keras,\nimport tensorflow as tf\n\nfrom keras.layers import Flatten,Dense,Dropout\nfrom keras.models import Sequential\n\n#from tensorflow.python.keras.layers import Flatten,Dense,Dropout\n#from tensorflow.python.keras.models import Sequential\n\nmnist = tf.keras.datasets.mnist\n\n(x_train, y_train),(x_test, y_test) = mnist.load_data()\nx_train, x_test = x_train / 255.0, x_test / 255.0\n\nimport keras\nprint(f'tf version = {tf.__version__} ')\n\nmodel = Sequential([\n  Flatten(input_shape=(28,28)),\n  Dense(512, kernel_initializer='uniform', activation=tf.nn.relu),\n  Dropout(0.2),\n  Dense(10, kernel_initializer='uniform', activation=tf.nn.softmax)\n])\n\n\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(x_train, y_train, epochs=1)\nmodel.evaluate(x_test, y_test)\nKERAS\ntf version = 1.10.0 \nEpoch 1/1\n2018-08-20 20:57:06.754898: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n\n   32/60000 [..............................] - ETA: 14:00 - loss: 2.3347 - acc: 0.1250\n  224/60000 [..............................] - ETA: 2:14 - loss: 2.1174 - acc: 0.3839 \n  416/60000 [..............................] - ETA: 1:19 - loss: 1.8965 - acc: 0.4712\n  576/60000 [..............................] - ETA: 1:03 - loss: 1.7533 - acc: 0.5365\n  ....\n .....\n59744/60000 [============================>.] - ETA: 0s - loss: 0.2369 - acc: 0.9308\n59936/60000 [============================>.] - ETA: 0s - loss: 0.2363 - acc: 0.9310\n60000/60000 [==============================] - 22s 360us/step - loss: 0.2363 - **acc: 0.9310**\n\nbut if you the import layers from tf.keras instead of the keras(i.e comment lines 3 & 4 and uncomment lines 6 & 7), the weights won't be updated and model doesn't learn at all.\ntf.keras\nUsing TensorFlow backend.\ntf version = 1.10.0 \nEpoch 1/1\n2018-08-20 21:08:05.112916: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n   32/60000 [..............................] - ETA: 10:26 - loss: 14.1033 - acc: 0.1250\n  224/60000 [..............................] - ETA: 1:42 - loss: 14.0464 - acc: 0.1205 \n  448/60000 [..............................] - ETA: 58s - loss: 14.3412 - acc: 0.1027 \n....\n....\n59744/60000 [============================>.] - ETA: 0s - loss: 13.2745 - acc: 0.1744\n59904/60000 [============================>.] - ETA: 0s - loss: 13.2730 - acc: 0.1745\n60000/60000 [==============================] - 19s 323us/step - loss: 13.2708 - **acc: 0.1746**\n\nThe problem is with kernel_initalizer, if you give a unsupported initalizer instead of giving an error tf.keras just fails somewhere. However keras works just fine.", "body": "The below code would just work fine on keras,\r\n\r\n````python\r\nimport tensorflow as tf\r\n\r\nfrom keras.layers import Flatten,Dense,Dropout\r\nfrom keras.models import Sequential\r\n\r\n#from tensorflow.python.keras.layers import Flatten,Dense,Dropout\r\n#from tensorflow.python.keras.models import Sequential\r\n\r\nmnist = tf.keras.datasets.mnist\r\n\r\n(x_train, y_train),(x_test, y_test) = mnist.load_data()\r\nx_train, x_test = x_train / 255.0, x_test / 255.0\r\n\r\nimport keras\r\nprint(f'tf version = {tf.__version__} ')\r\n\r\nmodel = Sequential([\r\n  Flatten(input_shape=(28,28)),\r\n  Dense(512, kernel_initializer='uniform', activation=tf.nn.relu),\r\n  Dropout(0.2),\r\n  Dense(10, kernel_initializer='uniform', activation=tf.nn.softmax)\r\n])\r\n\r\n\r\nmodel.compile(optimizer='adam',\r\n              loss='sparse_categorical_crossentropy',\r\n              metrics=['accuracy'])\r\n\r\nmodel.fit(x_train, y_train, epochs=1)\r\nmodel.evaluate(x_test, y_test)\r\n````\r\n\r\n\r\n**KERAS**\r\n````Using TensorFlow backend.\r\ntf version = 1.10.0 \r\nEpoch 1/1\r\n2018-08-20 20:57:06.754898: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n\r\n   32/60000 [..............................] - ETA: 14:00 - loss: 2.3347 - acc: 0.1250\r\n  224/60000 [..............................] - ETA: 2:14 - loss: 2.1174 - acc: 0.3839 \r\n  416/60000 [..............................] - ETA: 1:19 - loss: 1.8965 - acc: 0.4712\r\n  576/60000 [..............................] - ETA: 1:03 - loss: 1.7533 - acc: 0.5365\r\n  ....\r\n .....\r\n59744/60000 [============================>.] - ETA: 0s - loss: 0.2369 - acc: 0.9308\r\n59936/60000 [============================>.] - ETA: 0s - loss: 0.2363 - acc: 0.9310\r\n60000/60000 [==============================] - 22s 360us/step - loss: 0.2363 - **acc: 0.9310**\r\n````\r\nbut if you the import layers from tf.keras instead of the keras(i.e comment lines 3 & 4 and uncomment lines 6 & 7), the weights won't be updated and model doesn't learn at all.\r\n\r\n**tf.keras**\r\n````\r\nUsing TensorFlow backend.\r\ntf version = 1.10.0 \r\nEpoch 1/1\r\n2018-08-20 21:08:05.112916: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n   32/60000 [..............................] - ETA: 10:26 - loss: 14.1033 - acc: 0.1250\r\n  224/60000 [..............................] - ETA: 1:42 - loss: 14.0464 - acc: 0.1205 \r\n  448/60000 [..............................] - ETA: 58s - loss: 14.3412 - acc: 0.1027 \r\n....\r\n....\r\n59744/60000 [============================>.] - ETA: 0s - loss: 13.2745 - acc: 0.1744\r\n59904/60000 [============================>.] - ETA: 0s - loss: 13.2730 - acc: 0.1745\r\n60000/60000 [==============================] - 19s 323us/step - loss: 13.2708 - **acc: 0.1746**\r\n````\r\n\r\nThe problem is with **kernel_initalizer**, if you give a unsupported initalizer instead of giving an error tf.keras just fails somewhere. However keras works just fine. \r\n\r\n\r\n"}