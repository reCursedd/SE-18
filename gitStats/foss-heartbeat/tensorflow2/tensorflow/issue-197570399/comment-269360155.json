{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269360155", "html_url": "https://github.com/tensorflow/tensorflow/pull/6498#issuecomment-269360155", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6498", "id": 269360155, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTM2MDE1NQ==", "user": {"login": "shoyer", "id": 1217238, "node_id": "MDQ6VXNlcjEyMTcyMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoyer", "html_url": "https://github.com/shoyer", "followers_url": "https://api.github.com/users/shoyer/followers", "following_url": "https://api.github.com/users/shoyer/following{/other_user}", "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions", "organizations_url": "https://api.github.com/users/shoyer/orgs", "repos_url": "https://api.github.com/users/shoyer/repos", "events_url": "https://api.github.com/users/shoyer/events{/privacy}", "received_events_url": "https://api.github.com/users/shoyer/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-27T17:59:04Z", "updated_at": "2016-12-27T17:59:04Z", "author_association": "MEMBER", "body_html": "<p>This does look like an accurate reflection of what the op currently does. But, to be honest, I did not think too carefully about what the return value of the <code>update_op</code> from <code>streaming_concat()</code> should be when I wrote this op originally.</p>\n<p>An alternative fix would be to make <code>update_op</code> actually return the current value of the concatenated tensor. That would be a little more consistent with how other metrics ops work. I'm not entirely sure that makes sense, though, because it <em>might</em> have performance consequences to copy large tensors from <code>tf.Variable</code> objects into NumPy arrays. If so, then preserving the current behavior of returning the current size makes more sense. Can someone who understands TensorFlow internals better comment here?</p>\n<p>Either way, we should add a unit test to verify the behavior (currently, the return value of <code>update_op</code> is untested).</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> any thoughts?</p>", "body_text": "This does look like an accurate reflection of what the op currently does. But, to be honest, I did not think too carefully about what the return value of the update_op from streaming_concat() should be when I wrote this op originally.\nAn alternative fix would be to make update_op actually return the current value of the concatenated tensor. That would be a little more consistent with how other metrics ops work. I'm not entirely sure that makes sense, though, because it might have performance consequences to copy large tensors from tf.Variable objects into NumPy arrays. If so, then preserving the current behavior of returning the current size makes more sense. Can someone who understands TensorFlow internals better comment here?\nEither way, we should add a unit test to verify the behavior (currently, the return value of update_op is untested).\n@martinwicke any thoughts?", "body": "This does look like an accurate reflection of what the op currently does. But, to be honest, I did not think too carefully about what the return value of the `update_op` from `streaming_concat()` should be when I wrote this op originally.\r\n\r\nAn alternative fix would be to make `update_op` actually return the current value of the concatenated tensor. That would be a little more consistent with how other metrics ops work. I'm not entirely sure that makes sense, though, because it *might* have performance consequences to copy large tensors from `tf.Variable` objects into NumPy arrays. If so, then preserving the current behavior of returning the current size makes more sense. Can someone who understands TensorFlow internals better comment here?\r\n\r\nEither way, we should add a unit test to verify the behavior (currently, the return value of `update_op` is untested).\r\n\r\n@martinwicke any thoughts?"}