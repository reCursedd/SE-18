{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359256309", "html_url": "https://github.com/tensorflow/tensorflow/issues/6999#issuecomment-359256309", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6999", "id": 359256309, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTI1NjMwOQ==", "user": {"login": "SMH17", "id": 8108287, "node_id": "MDQ6VXNlcjgxMDgyODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8108287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SMH17", "html_url": "https://github.com/SMH17", "followers_url": "https://api.github.com/users/SMH17/followers", "following_url": "https://api.github.com/users/SMH17/following{/other_user}", "gists_url": "https://api.github.com/users/SMH17/gists{/gist_id}", "starred_url": "https://api.github.com/users/SMH17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SMH17/subscriptions", "organizations_url": "https://api.github.com/users/SMH17/orgs", "repos_url": "https://api.github.com/users/SMH17/repos", "events_url": "https://api.github.com/users/SMH17/events{/privacy}", "received_events_url": "https://api.github.com/users/SMH17/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-21T15:26:35Z", "updated_at": "2018-01-21T16:05:48Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6976744\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AlexisTM\">@AlexisTM</a> I prefer to rely on newer and improved software stacks gradually migrating the projects as newer versions are released. This makes the code better to be maintained compared to rely for years on old\\legacy software and then try to migrate the projects changing a lot of code to be compatible with all the changes accumulated in years of different releases. For this reason I prefer to see official Tensorflow releases following also the newer development lines as well, rather than following the philosophy to stay only with the older ones because still work, ignoring the new stuff.</p>", "body_text": "@AlexisTM I prefer to rely on newer and improved software stacks gradually migrating the projects as newer versions are released. This makes the code better to be maintained compared to rely for years on old\\legacy software and then try to migrate the projects changing a lot of code to be compatible with all the changes accumulated in years of different releases. For this reason I prefer to see official Tensorflow releases following also the newer development lines as well, rather than following the philosophy to stay only with the older ones because still work, ignoring the new stuff.", "body": "@AlexisTM I prefer to rely on newer and improved software stacks gradually migrating the projects as newer versions are released. This makes the code better to be maintained compared to rely for years on old\\legacy software and then try to migrate the projects changing a lot of code to be compatible with all the changes accumulated in years of different releases. For this reason I prefer to see official Tensorflow releases following also the newer development lines as well, rather than following the philosophy to stay only with the older ones because still work, ignoring the new stuff."}