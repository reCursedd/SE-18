{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/52824873", "pull_request_review_id": null, "id": 52824873, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0ODcz", "diff_hunk": "@@ -69,17 +69,22 @@ abs_path() {\n     [[ $1 = /* ]] && echo \"$1\" || echo \"$PWD/${1#./}\"\n }\n \n+# Exit after a failure\n+die() {\n+    echo $@\n+    exit 1\n+}\n+\n # Get the command line arguments\n CONTAINER_TYPE=$( echo \"$1\" | tr '[:upper:]' '[:lower:]' )\n \n PIP_BUILD_TARGET=\"//tensorflow/tools/pip_package:build_pip_package\"\n if [[ ${CONTAINER_TYPE} == \"cpu\" ]]; then\n-  bazel build -c opt ${PIP_BUILD_TARGET}\n+  bazel build -c opt ${PIP_BUILD_TARGET} || die \"Build failed.\"\n elif [[ ${CONTAINER_TYPE} == \"gpu\" ]]; then\n-  bazel build -c opt --config=cuda ${PIP_BUILD_TARGET}\n+  bazel build -c opt --config=cuda ${PIP_BUILD_TARGET} || die \"Build failed.\"\n else\n-  echo \"Unrecognized container type: \\\"${CONTAINER_TYPE}\\\"\"\n-  exit 1\n+  die \"Unrecognized container type: \\\"${CONTAINER_TYPE}\\\"\"\n fi", "path": "tensorflow/tools/ci_build/builds/pip.sh", "position": 24, "original_position": 24, "commit_id": "7c798086b728ed9afee1448ae3a430b0bb1b3afe", "original_commit_id": "7c798086b728ed9afee1448ae3a430b0bb1b3afe", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "body": "I really prefer the default to be the other way (set -e), such that if something fail, I get to know, instead of saying everywhere that if stuff fails, please tell me. You are correct, if it gets more complex, catching all of the if/fi construct may be a good idea.\n", "created_at": "2016-02-13T07:49:04Z", "updated_at": "2016-02-13T07:49:04Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1082#discussion_r52824873", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1082", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/52824873"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1082#discussion_r52824873"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1082"}}, "body_html": "<p>I really prefer the default to be the other way (set -e), such that if something fail, I get to know, instead of saying everywhere that if stuff fails, please tell me. You are correct, if it gets more complex, catching all of the if/fi construct may be a good idea.</p>", "body_text": "I really prefer the default to be the other way (set -e), such that if something fail, I get to know, instead of saying everywhere that if stuff fails, please tell me. You are correct, if it gets more complex, catching all of the if/fi construct may be a good idea."}