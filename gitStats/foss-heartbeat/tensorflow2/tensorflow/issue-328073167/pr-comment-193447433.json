{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/193447433", "pull_request_review_id": 126393660, "id": 193447433, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzQ0NzQzMw==", "diff_hunk": "@@ -0,0 +1,120 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/register_types.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/tensor_util.h\"\n+#include \"tensorflow/core/framework/types.h\"\n+#include \"tensorflow/core/util/sparse/sparse_tensor.h\"\n+\n+namespace tensorflow {\n+\n+template <typename T>\n+class SparseSliceGradOp : public OpKernel {\n+ public:\n+  explicit SparseSliceGradOp(OpKernelConstruction *ctx) : OpKernel(ctx) {}\n+\n+  void Compute(OpKernelContext *ctx) override {\n+    const Tensor *backprop_val_grad, *input_indices, *output_indices, *input_start;\n+    OP_REQUIRES_OK(ctx, ctx->input(\"backprop_val_grad\", &backprop_val_grad));\n+    OP_REQUIRES_OK(ctx, ctx->input(\"input_indices\", &input_indices));\n+    OP_REQUIRES_OK(ctx, ctx->input(\"input_start\", &input_start));\n+    OP_REQUIRES_OK(ctx, ctx->input(\"output_indices\", &output_indices));\n+\n+    OP_REQUIRES(ctx,\n+                TensorShapeUtils::IsMatrix(input_indices->shape()) &&\n+                    TensorShapeUtils::IsMatrix(output_indices->shape()),\n+                errors::InvalidArgument(\n+                    \"Input indices should be matrices but received shapes: \",\n+                    input_indices->shape().DebugString(), \" and \",\n+                    output_indices->shape().DebugString()));\n+    OP_REQUIRES(\n+        ctx, TensorShapeUtils::IsVector(backprop_val_grad->shape()),\n+        errors::InvalidArgument(\n+            \"Input backprop_val_grad should be a vector but received shape: \",\n+            backprop_val_grad->shape().DebugString()));\n+    OP_REQUIRES(\n+        ctx,\n+        input_indices->dim_size(1) == output_indices->dim_size(1),\n+        errors::InvalidArgument(\"The input and output should have the same \"\n+                                \"ndims: got: \", input_indices->dim_size(1), \" and \",\n+                                output_indices->dim_size(1)));\n+    OP_REQUIRES(\n+        ctx, output_indices->dim_size(0) <= input_indices->dim_size(0),\n+        errors::InvalidArgument(\"# rows of output_indices should be not greater \"\n+                                \"than of input_indices, got \",\n+                                output_indices->dim_size(0), \" and \",\n+                                input_indices->dim_size(0)));\n+    OP_REQUIRES(\n+        ctx, backprop_val_grad->NumElements() == output_indices->dim_size(0),\n+        errors::InvalidArgument(\"# elements of backprop_val_grad and # rows of \"\n+                                \"output_indices should match (#nnz of sum): got \",\n+                                backprop_val_grad->NumElements(), \" and \",\n+                                output_indices->dim_size(0)));\n+    OP_REQUIRES(ctx, TensorShapeUtils::IsVector(input_start->shape()),\n+                errors::InvalidArgument(\n+                    \"Input start should be a vector but received shape \",\n+                    input_start->shape().DebugString()));\n+\n+    const int num_dims = input_indices->dim_size(1);\n+    const int64 input_nnz = input_indices->dim_size(0);\n+\n+    Tensor *val_grad;\n+    OP_REQUIRES_OK(ctx,\n+                   ctx->allocate_output(0, TensorShape({input_nnz}), &val_grad));\n+\n+    T *val_grad_flat = val_grad->flat<T>().data();\n+    const T *backprop_val_grad_flat = backprop_val_grad->flat<T>().data();\n+    memset(val_grad_flat, 0, sizeof(T) * input_nnz);\n+\n+    // Fill gradients for position where indices of input and ouput are same.", "path": "tensorflow/core/kernels/sparse_slice_grad_op.cc", "position": null, "original_position": 83, "commit_id": "75b972bbc15d51f6590896b766d0be866a472378", "original_commit_id": "9127ab5b9f66f4ef522b1c9765a867a247d7cb2a", "user": {"login": "rachellim", "id": 9589037, "node_id": "MDQ6VXNlcjk1ODkwMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9589037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rachellim", "html_url": "https://github.com/rachellim", "followers_url": "https://api.github.com/users/rachellim/followers", "following_url": "https://api.github.com/users/rachellim/following{/other_user}", "gists_url": "https://api.github.com/users/rachellim/gists{/gist_id}", "starred_url": "https://api.github.com/users/rachellim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rachellim/subscriptions", "organizations_url": "https://api.github.com/users/rachellim/orgs", "repos_url": "https://api.github.com/users/rachellim/repos", "events_url": "https://api.github.com/users/rachellim/events{/privacy}", "received_events_url": "https://api.github.com/users/rachellim/received_events", "type": "User", "site_admin": false}, "body": "nit: output", "created_at": "2018-06-06T15:11:18Z", "updated_at": "2018-06-22T22:36:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19663#discussion_r193447433", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19663", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/193447433"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19663#discussion_r193447433"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19663"}}, "body_html": "<p>nit: output</p>", "body_text": "nit: output"}