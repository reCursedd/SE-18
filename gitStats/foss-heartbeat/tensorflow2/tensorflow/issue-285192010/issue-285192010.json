{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15729", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15729/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15729/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15729/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15729", "id": 285192010, "node_id": "MDU6SXNzdWUyODUxOTIwMTA=", "number": 15729, "title": "Feature Request: 'msg' parameter for test cases.", "user": {"login": "PhilJd", "id": 16101605, "node_id": "MDQ6VXNlcjE2MTAxNjA1", "avatar_url": "https://avatars2.githubusercontent.com/u/16101605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhilJd", "html_url": "https://github.com/PhilJd", "followers_url": "https://api.github.com/users/PhilJd/followers", "following_url": "https://api.github.com/users/PhilJd/following{/other_user}", "gists_url": "https://api.github.com/users/PhilJd/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhilJd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhilJd/subscriptions", "organizations_url": "https://api.github.com/users/PhilJd/orgs", "repos_url": "https://api.github.com/users/PhilJd/repos", "events_url": "https://api.github.com/users/PhilJd/events{/privacy}", "received_events_url": "https://api.github.com/users/PhilJd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-12-30T08:45:43Z", "updated_at": "2018-02-08T18:48:43Z", "closed_at": "2018-02-08T18:48:43Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Not relevant</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: Master rev. <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/3629fc4e98254c37e614ac3f77fa250b75c70f8d/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/3629fc4e98254c37e614ac3f77fa250b75c70f8d\"><tt>3629fc4</tt></a></li>\n<li><strong>Python version</strong>: 2/3</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:  Not relevant</li>\n<li><strong>GPU model and memory</strong>: Not relevant</li>\n<li><strong>Exact command to reproduce</strong>: Not relevant</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Python's unittest module as well as numpy's testing tools allow to optionally pass a message to various assertion functions. I'd love to have this for all functions in tf.TestCase as well (quite a few already have this paramter). It allows for more descriptive error messages where many permutations of ops/dtype/cpu/gpu configurations are tested (e.g. <a href=\"https://github.com/tensorflow/tensorflow/blob/3629fc4e98254c37e614ac3f77fa250b75c70f8d/tensorflow/python/kernel_tests/segment_reduction_ops_test.py#L109\">here</a>)</p>\n<p>As many of the underlying testing functions already have a msg parameter this could easily be implemented, e.g.</p>\n<pre><code>  def assertAllClose(self, a, b, rtol=1e-6, atol=1e-6, msg=None):\n    ...\n      self.assertItemsEqual(\n          a.keys(), b.keys(),\n          msg=\"mismatched keys, expected %s, got %s\\n%s\" % (a.keys(), b.keys(), msg if msg else \"\"))\n      for k in a:\n        self._assertArrayLikeAllClose(\n            a[k], b[k], rtol=rtol, atol=atol,\n            msg=\"%s: expected %s, got %s.\\n%s\" % (k, a, b, msg if msg else \"\"))\n    else:\n      self._assertArrayLikeAllClose(a, b, rtol=rtol, atol=atol, msg=msg)\n</code></pre>\n<p>Relevant functions:</p>\n<ul>\n<li><code>assertAllClose</code></li>\n<li><code>assertAllCloseAccordingToType</code></li>\n<li><code>assertAllEqual</code></li>\n<li><code>assertAlmostEqual</code></li>\n<li><code>assertAlmostEquals</code></li>\n<li><code>assertArrayNear</code></li>\n<li><code>assertDeviceEqual</code></li>\n<li><code>assertNDArrayNear</code></li>\n<li><code>assertProtoEquals</code></li>\n<li><code>assertProtoEqualsVersion</code></li>\n<li>(<code>assertRaises...</code>) adding a msg parameter to these test functions would probably break lot's of test cases, so I'd omit it</li>\n<li><code>assertShapeEqual</code></li>\n<li><code>checkedThread</code></li>\n</ul>\n<p>If you agree, I'll submit a quick pull request.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Not relevant\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): Master rev. 3629fc4\nPython version: 2/3\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:  Not relevant\nGPU model and memory: Not relevant\nExact command to reproduce: Not relevant\n\nDescribe the problem\nPython's unittest module as well as numpy's testing tools allow to optionally pass a message to various assertion functions. I'd love to have this for all functions in tf.TestCase as well (quite a few already have this paramter). It allows for more descriptive error messages where many permutations of ops/dtype/cpu/gpu configurations are tested (e.g. here)\nAs many of the underlying testing functions already have a msg parameter this could easily be implemented, e.g.\n  def assertAllClose(self, a, b, rtol=1e-6, atol=1e-6, msg=None):\n    ...\n      self.assertItemsEqual(\n          a.keys(), b.keys(),\n          msg=\"mismatched keys, expected %s, got %s\\n%s\" % (a.keys(), b.keys(), msg if msg else \"\"))\n      for k in a:\n        self._assertArrayLikeAllClose(\n            a[k], b[k], rtol=rtol, atol=atol,\n            msg=\"%s: expected %s, got %s.\\n%s\" % (k, a, b, msg if msg else \"\"))\n    else:\n      self._assertArrayLikeAllClose(a, b, rtol=rtol, atol=atol, msg=msg)\n\nRelevant functions:\n\nassertAllClose\nassertAllCloseAccordingToType\nassertAllEqual\nassertAlmostEqual\nassertAlmostEquals\nassertArrayNear\nassertDeviceEqual\nassertNDArrayNear\nassertProtoEquals\nassertProtoEqualsVersion\n(assertRaises...) adding a msg parameter to these test functions would probably break lot's of test cases, so I'd omit it\nassertShapeEqual\ncheckedThread\n\nIf you agree, I'll submit a quick pull request.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Not relevant\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: Master rev. 3629fc4e98254c37e614ac3f77fa250b75c70f8d\r\n- **Python version**: 2/3\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:  Not relevant\r\n- **GPU model and memory**: Not relevant\r\n- **Exact command to reproduce**: Not relevant\r\n\r\n### Describe the problem\r\nPython's unittest module as well as numpy's testing tools allow to optionally pass a message to various assertion functions. I'd love to have this for all functions in tf.TestCase as well (quite a few already have this paramter). It allows for more descriptive error messages where many permutations of ops/dtype/cpu/gpu configurations are tested (e.g. [here](https://github.com/tensorflow/tensorflow/blob/3629fc4e98254c37e614ac3f77fa250b75c70f8d/tensorflow/python/kernel_tests/segment_reduction_ops_test.py#L109))\r\n\r\nAs many of the underlying testing functions already have a msg parameter this could easily be implemented, e.g.\r\n```\r\n  def assertAllClose(self, a, b, rtol=1e-6, atol=1e-6, msg=None):\r\n    ...\r\n      self.assertItemsEqual(\r\n          a.keys(), b.keys(),\r\n          msg=\"mismatched keys, expected %s, got %s\\n%s\" % (a.keys(), b.keys(), msg if msg else \"\"))\r\n      for k in a:\r\n        self._assertArrayLikeAllClose(\r\n            a[k], b[k], rtol=rtol, atol=atol,\r\n            msg=\"%s: expected %s, got %s.\\n%s\" % (k, a, b, msg if msg else \"\"))\r\n    else:\r\n      self._assertArrayLikeAllClose(a, b, rtol=rtol, atol=atol, msg=msg)\r\n```\r\n\r\nRelevant functions:\r\n- `assertAllClose`\r\n- `assertAllCloseAccordingToType`\r\n- `assertAllEqual`\r\n- `assertAlmostEqual`\r\n- `assertAlmostEquals`\r\n- `assertArrayNear`\r\n- `assertDeviceEqual`\r\n- `assertNDArrayNear`\r\n- `assertProtoEquals`\r\n- `assertProtoEqualsVersion`\r\n- (`assertRaises...`) adding a msg parameter to these test functions would probably break lot's of test cases, so I'd omit it\r\n- `assertShapeEqual`\r\n- `checkedThread`\r\n\r\n\r\nIf you agree, I'll submit a quick pull request.\r\n"}