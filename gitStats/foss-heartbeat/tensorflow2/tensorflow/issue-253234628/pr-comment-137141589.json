{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/137141589", "pull_request_review_id": 60769423, "id": 137141589, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzE0MTU4OQ==", "diff_hunk": "@@ -447,15 +448,13 @@ private void loadGraph(InputStream is, Graph g) throws IOException {\n     }\n \n     // TODO(ashankar): Can we somehow mmap the contents instead of copying them?\n-    byte[] graphDef = new byte[is.available()];\n-    final int numBytesRead = is.read(graphDef);\n-    if (numBytesRead != graphDef.length) {\n-      throw new IOException(\n-          \"read error: read only \"\n-              + numBytesRead\n-              + \" of the graph, expected to read \"\n-              + graphDef.length);\n+    ByteArrayOutputStream baos = new ByteArrayOutputStream(16384);\n+    int numBytesRead;\n+    byte[] buf = new byte[16384];\n+    while ((numBytesRead = is.read(buf, 0, buf.length)) != -1) {\n+      baos.write(buf, 0, numBytesRead);\n     }\n+    byte[] graphDef = baos.toByteArray();", "path": "tensorflow/contrib/android/java/org/tensorflow/contrib/android/TensorFlowInferenceInterface.java", "position": null, "original_position": 26, "commit_id": "3ab1d9fdfc27f34b6a5f9f2a6b1b577c82fdb044", "original_commit_id": "b5020ceb02fdb4f19c9829110f34ff76399db97a", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "IIUC, this involves a copy, so the peak memory usage is 2x the model size. Is that correct? (As opposed to the previous behavior of 1x model size).\r\n\r\nCan we figure out a way to avoid that? I believe this constructor was introduced recently in #12341 . Prior to that change, the only constructor that existed would have read in the graph once. If the new constructor in needed, then perhaps we can arrange for it to be such that we still avoid model duplication when using the `AssetManager` constructor?", "created_at": "2017-09-05T23:42:12Z", "updated_at": "2017-09-08T03:55:46Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12643#discussion_r137141589", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12643", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/137141589"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12643#discussion_r137141589"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12643"}}, "body_html": "<p>IIUC, this involves a copy, so the peak memory usage is 2x the model size. Is that correct? (As opposed to the previous behavior of 1x model size).</p>\n<p>Can we figure out a way to avoid that? I believe this constructor was introduced recently in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"250803588\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12341\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/12341/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/12341\">#12341</a> . Prior to that change, the only constructor that existed would have read in the graph once. If the new constructor in needed, then perhaps we can arrange for it to be such that we still avoid model duplication when using the <code>AssetManager</code> constructor?</p>", "body_text": "IIUC, this involves a copy, so the peak memory usage is 2x the model size. Is that correct? (As opposed to the previous behavior of 1x model size).\nCan we figure out a way to avoid that? I believe this constructor was introduced recently in #12341 . Prior to that change, the only constructor that existed would have read in the graph once. If the new constructor in needed, then perhaps we can arrange for it to be such that we still avoid model duplication when using the AssetManager constructor?"}