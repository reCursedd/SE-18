{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/287142857", "html_url": "https://github.com/tensorflow/tensorflow/issues/8476#issuecomment-287142857", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8476", "id": 287142857, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE0Mjg1Nw==", "user": {"login": "MicaelCarvalho", "id": 17184992, "node_id": "MDQ6VXNlcjE3MTg0OTky", "avatar_url": "https://avatars3.githubusercontent.com/u/17184992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicaelCarvalho", "html_url": "https://github.com/MicaelCarvalho", "followers_url": "https://api.github.com/users/MicaelCarvalho/followers", "following_url": "https://api.github.com/users/MicaelCarvalho/following{/other_user}", "gists_url": "https://api.github.com/users/MicaelCarvalho/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicaelCarvalho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicaelCarvalho/subscriptions", "organizations_url": "https://api.github.com/users/MicaelCarvalho/orgs", "repos_url": "https://api.github.com/users/MicaelCarvalho/repos", "events_url": "https://api.github.com/users/MicaelCarvalho/events{/privacy}", "received_events_url": "https://api.github.com/users/MicaelCarvalho/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-16T18:03:49Z", "updated_at": "2017-03-16T18:03:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>About your last question: Yes, there is <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/client/timeline.py\">Timeline</a> that can help you with that.</p>\n<p>The usage is simple:</p>\n<pre><code>def save_timeline(run_metadata, output_folder):\n  tl = timeline.Timeline(run_metadata.step_stats)\n  ctf = tl.generate_chrome_trace_format()\n  with open('%s/timeline.json' % output_folder, 'w') as f:\n    f.write(ctf)\n\n\nFULL_TRACE_OPTION = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nRUN_METADATA = tf.RunMetadata()\ntraining_results = sess.run(your_ops_here, feed_dict=your_feed_dict_here, options=FULL_TRACE_OPTION, run_metadata=RUN_METADATA)\nsave_timeline(RUN_METADATA, '~/')\n</code></pre>\n<p>And then you can open Google Chrome (or Chromium) and type <code>chrome://tracing</code> in the URL. On the new page, <code>Load</code> the file you just saved, and you'll see the execution time for each part of your graph.</p>", "body_text": "About your last question: Yes, there is Timeline that can help you with that.\nThe usage is simple:\ndef save_timeline(run_metadata, output_folder):\n  tl = timeline.Timeline(run_metadata.step_stats)\n  ctf = tl.generate_chrome_trace_format()\n  with open('%s/timeline.json' % output_folder, 'w') as f:\n    f.write(ctf)\n\n\nFULL_TRACE_OPTION = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nRUN_METADATA = tf.RunMetadata()\ntraining_results = sess.run(your_ops_here, feed_dict=your_feed_dict_here, options=FULL_TRACE_OPTION, run_metadata=RUN_METADATA)\nsave_timeline(RUN_METADATA, '~/')\n\nAnd then you can open Google Chrome (or Chromium) and type chrome://tracing in the URL. On the new page, Load the file you just saved, and you'll see the execution time for each part of your graph.", "body": "About your last question: Yes, there is [Timeline](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/client/timeline.py) that can help you with that.\r\n\r\nThe usage is simple:\r\n```\r\ndef save_timeline(run_metadata, output_folder):\r\n  tl = timeline.Timeline(run_metadata.step_stats)\r\n  ctf = tl.generate_chrome_trace_format()\r\n  with open('%s/timeline.json' % output_folder, 'w') as f:\r\n    f.write(ctf)\r\n\r\n\r\nFULL_TRACE_OPTION = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\nRUN_METADATA = tf.RunMetadata()\r\ntraining_results = sess.run(your_ops_here, feed_dict=your_feed_dict_here, options=FULL_TRACE_OPTION, run_metadata=RUN_METADATA)\r\nsave_timeline(RUN_METADATA, '~/')\r\n```\r\n\r\nAnd then you can open Google Chrome (or Chromium) and type `chrome://tracing` in the URL. On the new page, `Load` the file you just saved, and you'll see the execution time for each part of your graph."}