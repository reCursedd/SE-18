{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20475", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20475/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20475/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20475/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20475", "id": 337500449, "node_id": "MDU6SXNzdWUzMzc1MDA0NDk=", "number": 20475, "title": "Add a dictionary to a collection", "user": {"login": "FrancescoSaverioZuppichini", "id": 15908060, "node_id": "MDQ6VXNlcjE1OTA4MDYw", "avatar_url": "https://avatars3.githubusercontent.com/u/15908060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescoSaverioZuppichini", "html_url": "https://github.com/FrancescoSaverioZuppichini", "followers_url": "https://api.github.com/users/FrancescoSaverioZuppichini/followers", "following_url": "https://api.github.com/users/FrancescoSaverioZuppichini/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescoSaverioZuppichini/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescoSaverioZuppichini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescoSaverioZuppichini/subscriptions", "organizations_url": "https://api.github.com/users/FrancescoSaverioZuppichini/orgs", "repos_url": "https://api.github.com/users/FrancescoSaverioZuppichini/repos", "events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-07-02T12:36:53Z", "updated_at": "2018-11-20T07:53:58Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<p>OS Platform and Distribution Mac OS X latest<br>\nTensorFlow installed from pip<br>\nTensorFlow version 1.8<br>\nBazel version N/A<br>\nCUDA/cuDNN version N/A<br>\nGPU model and memory N/A<br>\nExact command to reproduce see code below</p>\n<h3>Describe the problem</h3>\n<p>Dear All,</p>\n<p>I am looking for a way to store and retrieve a dictionary of tensors. If I try to pass a dict to <code>ft.add_to_collection</code> I get a warning and when I load the graph again the collection does not exist. This is a simple example:</p>\n<pre><code>import tensorflow as tf\ntf.reset_default_graph()\n\nfoo  = tf.Variable([1,2,3], dtype=tf.float32)\nboo  = tf.Variable([1,2,3], dtype=tf.float32)\n\ntf.add_to_collection('test', {'foo' : foo, 'boo': [boo] })\ntf.add_to_collection('test2', foo)\n\nwith tf.Session() as sess:\n    saver = tf.train.Saver()\n    sess.run(tf.global_variables_initializer())\n    saver.save(sess,'save/model.ckpt')\n\ntf.reset_default_graph() # reset so we are sure to load a new graph\n\nwith tf.Session() as sess:\n    saver = tf.train.import_meta_graph(\"save/model.ckpt.meta\")\n    saver.restore(sess,'save/model.ckpt')\n    graph = tf.get_default_graph()\n    print(graph.get_collection('test'))\n    print(graph.get_collection('test2'))\n</code></pre>\n<p>Output:</p>\n<pre><code>WARNING:tensorflow:Error encountered when serializing test.\nType is unsupported, or the types of the items don't match field type in CollectionDef.\n'dict' object has no attribute 'name'\nINFO:tensorflow:Restoring parameters from save/model.ckpt\n[]\n[&lt;tf.Tensor 'Variable:0' shape=(3,) dtype=float32_ref&gt;]\n</code></pre>\n<p>As you can see, after loading the graph, the <code>test</code> collection is empty.</p>\n<p>Is there any way to properly store/retrieve a dictionary that maps tensors?</p>", "body_text": "System information\nOS Platform and Distribution Mac OS X latest\nTensorFlow installed from pip\nTensorFlow version 1.8\nBazel version N/A\nCUDA/cuDNN version N/A\nGPU model and memory N/A\nExact command to reproduce see code below\nDescribe the problem\nDear All,\nI am looking for a way to store and retrieve a dictionary of tensors. If I try to pass a dict to ft.add_to_collection I get a warning and when I load the graph again the collection does not exist. This is a simple example:\nimport tensorflow as tf\ntf.reset_default_graph()\n\nfoo  = tf.Variable([1,2,3], dtype=tf.float32)\nboo  = tf.Variable([1,2,3], dtype=tf.float32)\n\ntf.add_to_collection('test', {'foo' : foo, 'boo': [boo] })\ntf.add_to_collection('test2', foo)\n\nwith tf.Session() as sess:\n    saver = tf.train.Saver()\n    sess.run(tf.global_variables_initializer())\n    saver.save(sess,'save/model.ckpt')\n\ntf.reset_default_graph() # reset so we are sure to load a new graph\n\nwith tf.Session() as sess:\n    saver = tf.train.import_meta_graph(\"save/model.ckpt.meta\")\n    saver.restore(sess,'save/model.ckpt')\n    graph = tf.get_default_graph()\n    print(graph.get_collection('test'))\n    print(graph.get_collection('test2'))\n\nOutput:\nWARNING:tensorflow:Error encountered when serializing test.\nType is unsupported, or the types of the items don't match field type in CollectionDef.\n'dict' object has no attribute 'name'\nINFO:tensorflow:Restoring parameters from save/model.ckpt\n[]\n[<tf.Tensor 'Variable:0' shape=(3,) dtype=float32_ref>]\n\nAs you can see, after loading the graph, the test collection is empty.\nIs there any way to properly store/retrieve a dictionary that maps tensors?", "body": "### System information\r\nOS Platform and Distribution Mac OS X latest\r\nTensorFlow installed from pip\r\nTensorFlow version 1.8\r\nBazel version N/A\r\nCUDA/cuDNN version N/A\r\nGPU model and memory N/A\r\nExact command to reproduce see code below\r\n\r\n### Describe the problem\r\nDear All,\r\n\r\nI am looking for a way to store and retrieve a dictionary of tensors. If I try to pass a dict to `ft.add_to_collection` I get a warning and when I load the graph again the collection does not exist. This is a simple example:\r\n\r\n```\r\nimport tensorflow as tf\r\ntf.reset_default_graph()\r\n\r\nfoo  = tf.Variable([1,2,3], dtype=tf.float32)\r\nboo  = tf.Variable([1,2,3], dtype=tf.float32)\r\n\r\ntf.add_to_collection('test', {'foo' : foo, 'boo': [boo] })\r\ntf.add_to_collection('test2', foo)\r\n\r\nwith tf.Session() as sess:\r\n    saver = tf.train.Saver()\r\n    sess.run(tf.global_variables_initializer())\r\n    saver.save(sess,'save/model.ckpt')\r\n\r\ntf.reset_default_graph() # reset so we are sure to load a new graph\r\n\r\nwith tf.Session() as sess:\r\n    saver = tf.train.import_meta_graph(\"save/model.ckpt.meta\")\r\n    saver.restore(sess,'save/model.ckpt')\r\n    graph = tf.get_default_graph()\r\n    print(graph.get_collection('test'))\r\n    print(graph.get_collection('test2'))\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nWARNING:tensorflow:Error encountered when serializing test.\r\nType is unsupported, or the types of the items don't match field type in CollectionDef.\r\n'dict' object has no attribute 'name'\r\nINFO:tensorflow:Restoring parameters from save/model.ckpt\r\n[]\r\n[<tf.Tensor 'Variable:0' shape=(3,) dtype=float32_ref>]\r\n```\r\n\r\nAs you can see, after loading the graph, the `test` collection is empty.\r\n\r\nIs there any way to properly store/retrieve a dictionary that maps tensors? \r\n"}