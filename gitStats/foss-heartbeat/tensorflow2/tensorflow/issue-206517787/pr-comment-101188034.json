{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/101188034", "pull_request_review_id": 21908789, "id": 101188034, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTE4ODAzNA==", "diff_hunk": "@@ -324,13 +324,43 @@ def sort_key(input_index, a):\n     num_summed_elements = _total_size(t0_shape[-len(axes_to_sum):])\n     new_shape = t0_shape[:len(preserved_axes)] + (num_broadcast_elements_t0,\n                                                   num_summed_elements)\n+    # Make new_shape valid, if invalid to be used in reshape\n+    none_dims = [i for i, d in enumerate(new_shape)", "path": "tensorflow/python/ops/special_math_ops.py", "position": null, "original_position": 5, "commit_id": "1d849832d6c5b63ff5136a4ca72e13f2e5c4a236", "original_commit_id": "6274c6e011b0e943dfc761f692df28bf926f6c4e", "user": {"login": "jihunchoi", "id": 1898501, "node_id": "MDQ6VXNlcjE4OTg1MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1898501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jihunchoi", "html_url": "https://github.com/jihunchoi", "followers_url": "https://api.github.com/users/jihunchoi/followers", "following_url": "https://api.github.com/users/jihunchoi/following{/other_user}", "gists_url": "https://api.github.com/users/jihunchoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jihunchoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jihunchoi/subscriptions", "organizations_url": "https://api.github.com/users/jihunchoi/orgs", "repos_url": "https://api.github.com/users/jihunchoi/repos", "events_url": "https://api.github.com/users/jihunchoi/events{/privacy}", "received_events_url": "https://api.github.com/users/jihunchoi/received_events", "type": "User", "site_admin": false}, "body": "That would be the simplest way, however the reason I tried to avoid fixing like that way is that it might cause some performance overhead.\r\nAs far as I understood, if one can determine the shape by just using `get_shape`, then node creation caused by `array_ops.shape` does not occur, thus there exists a possibility to gain performance a bit.\r\nI don't know how large the overhead of adding `array_ops.shape` node to the graph is. If it is negligible, then replacing `get_shape` with `array_ops.shape` would be the simplest and the cleanest way to fix this issue.", "created_at": "2017-02-15T01:39:52Z", "updated_at": "2017-02-17T01:56:08Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/7387#discussion_r101188034", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7387", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/101188034"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/7387#discussion_r101188034"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7387"}}, "body_html": "<p>That would be the simplest way, however the reason I tried to avoid fixing like that way is that it might cause some performance overhead.<br>\nAs far as I understood, if one can determine the shape by just using <code>get_shape</code>, then node creation caused by <code>array_ops.shape</code> does not occur, thus there exists a possibility to gain performance a bit.<br>\nI don't know how large the overhead of adding <code>array_ops.shape</code> node to the graph is. If it is negligible, then replacing <code>get_shape</code> with <code>array_ops.shape</code> would be the simplest and the cleanest way to fix this issue.</p>", "body_text": "That would be the simplest way, however the reason I tried to avoid fixing like that way is that it might cause some performance overhead.\nAs far as I understood, if one can determine the shape by just using get_shape, then node creation caused by array_ops.shape does not occur, thus there exists a possibility to gain performance a bit.\nI don't know how large the overhead of adding array_ops.shape node to the graph is. If it is negligible, then replacing get_shape with array_ops.shape would be the simplest and the cleanest way to fix this issue.", "in_reply_to_id": 100726342}