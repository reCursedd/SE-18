{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/101345915", "pull_request_review_id": 22071850, "id": 101345915, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTM0NTkxNQ==", "diff_hunk": "@@ -324,13 +324,43 @@ def sort_key(input_index, a):\n     num_summed_elements = _total_size(t0_shape[-len(axes_to_sum):])\n     new_shape = t0_shape[:len(preserved_axes)] + (num_broadcast_elements_t0,\n                                                   num_summed_elements)\n+    # Make new_shape valid, if invalid to be used in reshape\n+    none_dims = [i for i, d in enumerate(new_shape)", "path": "tensorflow/python/ops/special_math_ops.py", "position": null, "original_position": 5, "commit_id": "1d849832d6c5b63ff5136a4ca72e13f2e5c4a236", "original_commit_id": "6274c6e011b0e943dfc761f692df28bf926f6c4e", "user": {"login": "mstreeter", "id": 2622806, "node_id": "MDQ6VXNlcjI2MjI4MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2622806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mstreeter", "html_url": "https://github.com/mstreeter", "followers_url": "https://api.github.com/users/mstreeter/followers", "following_url": "https://api.github.com/users/mstreeter/following{/other_user}", "gists_url": "https://api.github.com/users/mstreeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/mstreeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mstreeter/subscriptions", "organizations_url": "https://api.github.com/users/mstreeter/orgs", "repos_url": "https://api.github.com/users/mstreeter/repos", "events_url": "https://api.github.com/users/mstreeter/events{/privacy}", "received_events_url": "https://api.github.com/users/mstreeter/received_events", "type": "User", "site_admin": false}, "body": "Good point.  I suspect the overhead is negligible, but I haven't verified this.\r\n\r\nI would be fine with always using array_ops.shape to keep the code simple.  Alternatively, to keep the number of ops small, you could create a _get_shape helper that either returns array_ops.shape or returns a tuple of integers when possible.  You could also modify _total_size so that it returns an integer if given a tuple of integers, and uses math_ops.reduce_prod otherwise.\r\n\r\nIt seems like this would get the best of both worlds, but let me know if I've missed something.", "created_at": "2017-02-15T18:21:09Z", "updated_at": "2017-02-17T01:56:08Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/7387#discussion_r101345915", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7387", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/101345915"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/7387#discussion_r101345915"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7387"}}, "body_html": "<p>Good point.  I suspect the overhead is negligible, but I haven't verified this.</p>\n<p>I would be fine with always using array_ops.shape to keep the code simple.  Alternatively, to keep the number of ops small, you could create a _get_shape helper that either returns array_ops.shape or returns a tuple of integers when possible.  You could also modify _total_size so that it returns an integer if given a tuple of integers, and uses math_ops.reduce_prod otherwise.</p>\n<p>It seems like this would get the best of both worlds, but let me know if I've missed something.</p>", "body_text": "Good point.  I suspect the overhead is negligible, but I haven't verified this.\nI would be fine with always using array_ops.shape to keep the code simple.  Alternatively, to keep the number of ops small, you could create a _get_shape helper that either returns array_ops.shape or returns a tuple of integers when possible.  You could also modify _total_size so that it returns an integer if given a tuple of integers, and uses math_ops.reduce_prod otherwise.\nIt seems like this would get the best of both worlds, but let me know if I've missed something.", "in_reply_to_id": 100726342}