{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/318464462", "html_url": "https://github.com/tensorflow/tensorflow/issues/11334#issuecomment-318464462", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11334", "id": 318464462, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODQ2NDQ2Mg==", "user": {"login": "Mr-Grieves", "id": 19175336, "node_id": "MDQ6VXNlcjE5MTc1MzM2", "avatar_url": "https://avatars2.githubusercontent.com/u/19175336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mr-Grieves", "html_url": "https://github.com/Mr-Grieves", "followers_url": "https://api.github.com/users/Mr-Grieves/followers", "following_url": "https://api.github.com/users/Mr-Grieves/following{/other_user}", "gists_url": "https://api.github.com/users/Mr-Grieves/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mr-Grieves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mr-Grieves/subscriptions", "organizations_url": "https://api.github.com/users/Mr-Grieves/orgs", "repos_url": "https://api.github.com/users/Mr-Grieves/repos", "events_url": "https://api.github.com/users/Mr-Grieves/events{/privacy}", "received_events_url": "https://api.github.com/users/Mr-Grieves/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-27T19:35:44Z", "updated_at": "2017-07-27T19:35:44Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a>: The latter. I'm new to Java and still not totally comfortable with the idea of leaving objects around to be cleaned up by the GC... My app runs as desired initially, but slows down over time, and eventually grinds to a halt. I initially thought this issue was being caused by a memory leak, but perhaps the memory management is running as it should and the cause of the slowdown lies somewhere else...</p>\n<p>I've attached a screenshot of my Memory and CPU monitors. GC events are being triggered every 10s or so, with 99% of the allocations occurring during the <code>addFeed(inputName, Tensor.create(dims, FloatBuffer.wrap(src)));</code>.</p>\n<p>If the memory is not the problem, my issue is most likely CPU related, in which case I am posting in the wrong thread.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/19175336/28688053-6c3455d4-72c5-11e7-981e-114d0cdf3d3d.png\"><img src=\"https://user-images.githubusercontent.com/19175336/28688053-6c3455d4-72c5-11e7-981e-114d0cdf3d3d.png\" alt=\"memorytrace\" style=\"max-width:100%;\"></a></p>", "body_text": "@asimshankar: The latter. I'm new to Java and still not totally comfortable with the idea of leaving objects around to be cleaned up by the GC... My app runs as desired initially, but slows down over time, and eventually grinds to a halt. I initially thought this issue was being caused by a memory leak, but perhaps the memory management is running as it should and the cause of the slowdown lies somewhere else...\nI've attached a screenshot of my Memory and CPU monitors. GC events are being triggered every 10s or so, with 99% of the allocations occurring during the addFeed(inputName, Tensor.create(dims, FloatBuffer.wrap(src)));.\nIf the memory is not the problem, my issue is most likely CPU related, in which case I am posting in the wrong thread.", "body": "@asimshankar: The latter. I'm new to Java and still not totally comfortable with the idea of leaving objects around to be cleaned up by the GC... My app runs as desired initially, but slows down over time, and eventually grinds to a halt. I initially thought this issue was being caused by a memory leak, but perhaps the memory management is running as it should and the cause of the slowdown lies somewhere else... \r\n\r\nI've attached a screenshot of my Memory and CPU monitors. GC events are being triggered every 10s or so, with 99% of the allocations occurring during the `addFeed(inputName, Tensor.create(dims, FloatBuffer.wrap(src)));`.\r\n\r\nIf the memory is not the problem, my issue is most likely CPU related, in which case I am posting in the wrong thread.\r\n\r\n![memorytrace](https://user-images.githubusercontent.com/19175336/28688053-6c3455d4-72c5-11e7-981e-114d0cdf3d3d.png)\r\n"}