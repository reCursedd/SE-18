{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20072", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20072/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20072/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20072/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20072", "id": 332959972, "node_id": "MDU6SXNzdWUzMzI5NTk5NzI=", "number": 20072, "title": "Partial model loaded SavedModelBundle without exception", "user": {"login": "frankzhangrui", "id": 8742978, "node_id": "MDQ6VXNlcjg3NDI5Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8742978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankzhangrui", "html_url": "https://github.com/frankzhangrui", "followers_url": "https://api.github.com/users/frankzhangrui/followers", "following_url": "https://api.github.com/users/frankzhangrui/following{/other_user}", "gists_url": "https://api.github.com/users/frankzhangrui/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankzhangrui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankzhangrui/subscriptions", "organizations_url": "https://api.github.com/users/frankzhangrui/orgs", "repos_url": "https://api.github.com/users/frankzhangrui/repos", "events_url": "https://api.github.com/users/frankzhangrui/events{/privacy}", "received_events_url": "https://api.github.com/users/frankzhangrui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-16T04:38:24Z", "updated_at": "2018-11-14T19:20:44Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: None</li>\n<li><strong>Python version</strong>:  None</li>\n<li><strong>Bazel version (if compiling from source)</strong>: None</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: None</li>\n<li><strong>CUDA/cuDNN version</strong>: None</li>\n<li><strong>GPU model and memory</strong>: None</li>\n<li><strong>Exact command to reproduce</strong>: None</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Background</p>\n<p>I am training a tensorflow with python and trying to load it in java for serving with SavedModelBundle.</p>\n<p>Sample mode directory<br>\n.<br>\n\u251c\u2500\u2500 saved_model.pb<br>\n\u2514\u2500\u2500 variables<br>\n\u251c\u2500\u2500 variables.data-00000-of-00001<br>\n\u2514\u2500\u2500 variables.index</p>\n<p>Problem</p>\n<p>The thing is my model is published on hdfs and during downloading, some instances of the prediction server downloaded a partial model path with incomplete variables. Somehow SavedModelBundle is still able to load the partial model path into memory. Then when I actually query the service, I will get a lot of java.lang.IllegalStateException: Attempting to use uninitialized value *** in some node.</p>\n<p>My question is how can I prevent this from happening? I can think of</p>\n<p>I need to check if downloading is successful before loading it.<br>\nHave a way to throw an exception in SavedModelBundle when loading the partial model.</p>\n<h3>Source code / logs</h3>\n<p>Exceptions like<br>\njava.lang.IllegalStateException: Attempting to use uninitialized value ***</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): None\nPython version:  None\nBazel version (if compiling from source): None\nGCC/Compiler version (if compiling from source): None\nCUDA/cuDNN version: None\nGPU model and memory: None\nExact command to reproduce: None\n\nDescribe the problem\nBackground\nI am training a tensorflow with python and trying to load it in java for serving with SavedModelBundle.\nSample mode directory\n.\n\u251c\u2500\u2500 saved_model.pb\n\u2514\u2500\u2500 variables\n\u251c\u2500\u2500 variables.data-00000-of-00001\n\u2514\u2500\u2500 variables.index\nProblem\nThe thing is my model is published on hdfs and during downloading, some instances of the prediction server downloaded a partial model path with incomplete variables. Somehow SavedModelBundle is still able to load the partial model path into memory. Then when I actually query the service, I will get a lot of java.lang.IllegalStateException: Attempting to use uninitialized value *** in some node.\nMy question is how can I prevent this from happening? I can think of\nI need to check if downloading is successful before loading it.\nHave a way to throw an exception in SavedModelBundle when loading the partial model.\nSource code / logs\nExceptions like\njava.lang.IllegalStateException: Attempting to use uninitialized value ***", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: None\r\n- **Python version**:  None\r\n- **Bazel version (if compiling from source)**: None\r\n- **GCC/Compiler version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: None\r\n- **Exact command to reproduce**: None\r\n\r\n### Describe the problem\r\nBackground\r\n\r\nI am training a tensorflow with python and trying to load it in java for serving with SavedModelBundle.\r\n\r\nSample mode directory\r\n.\r\n\u251c\u2500\u2500 saved_model.pb\r\n\u2514\u2500\u2500 variables\r\n    \u251c\u2500\u2500 variables.data-00000-of-00001\r\n    \u2514\u2500\u2500 variables.index\r\n\r\nProblem\r\n\r\nThe thing is my model is published on hdfs and during downloading, some instances of the prediction server downloaded a partial model path with incomplete variables. Somehow SavedModelBundle is still able to load the partial model path into memory. Then when I actually query the service, I will get a lot of java.lang.IllegalStateException: Attempting to use uninitialized value *** in some node.\r\n\r\nMy question is how can I prevent this from happening? I can think of\r\n\r\nI need to check if downloading is successful before loading it.\r\nHave a way to throw an exception in SavedModelBundle when loading the partial model.\r\n\r\n### Source code / logs\r\nExceptions like \r\njava.lang.IllegalStateException: Attempting to use uninitialized value ***\r\n"}