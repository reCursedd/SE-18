{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/233215459", "html_url": "https://github.com/tensorflow/tensorflow/issues/254#issuecomment-233215459", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/254", "id": 233215459, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzIxNTQ1OQ==", "user": {"login": "samjabrahams", "id": 11607205, "node_id": "MDQ6VXNlcjExNjA3MjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/11607205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samjabrahams", "html_url": "https://github.com/samjabrahams", "followers_url": "https://api.github.com/users/samjabrahams/followers", "following_url": "https://api.github.com/users/samjabrahams/following{/other_user}", "gists_url": "https://api.github.com/users/samjabrahams/gists{/gist_id}", "starred_url": "https://api.github.com/users/samjabrahams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samjabrahams/subscriptions", "organizations_url": "https://api.github.com/users/samjabrahams/orgs", "repos_url": "https://api.github.com/users/samjabrahams/repos", "events_url": "https://api.github.com/users/samjabrahams/events{/privacy}", "received_events_url": "https://api.github.com/users/samjabrahams/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-18T01:20:43Z", "updated_at": "2016-07-18T01:20:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>A couple recent changes are throwing a wrench into compiling full TensorFlow binaries on RPi. <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/platform.h#L40-L45\">These lines</a> cause <code>IS_MOBILE_PLATFORM</code> to be defined when compiling RPi, which in turn causes errors in some of the image processing files (such as <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/png.h#L23-L26\">core/platform/png.h</a> and <a href=\"https://github.com/tensorflow/tensorflow/blob/b11907ed7292e996b911ae64cc5d97f60c41518e/tensorflow/core/platform/gif.h#L23-L24\">core/platform/gif.h</a>). It also prevents non-32-bit operations from being defined <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/register_types.h#L107-L131\">in this file</a>. This may not be a bad thing, considering Raspbian is still a 32-bit OS, but it causes quirks when people try to use certain 64-bit-only Operations.</p>\n<p>I imagine that the current setup works when using the <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/makefile\">Makefile</a>, so I don't want to screw anything up. That said, any ideas on not defining <code>IS_MOBILE_PLATFORM</code> when compiling on Raspberry Pi? The best thing I could find was <a href=\"http://raspberrypi.stackexchange.com/questions/754/how-can-i-detect-that-im-compiling-for-raspberry-pi\" rel=\"nofollow\">this answer on Stack Overflow</a>- it seems a little clunky, so I didn't want to jump to making a PR with it without asking first.</p>\n<p>In the meantime, the current fix is to delete <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/platform.h#L45\">this line</a> before doing the Bazel build on the Pi. If there's no clean way to fix this up here, it's no big deal to tweak that file for builds moving forward.</p>", "body_text": "A couple recent changes are throwing a wrench into compiling full TensorFlow binaries on RPi. These lines cause IS_MOBILE_PLATFORM to be defined when compiling RPi, which in turn causes errors in some of the image processing files (such as core/platform/png.h and core/platform/gif.h). It also prevents non-32-bit operations from being defined in this file. This may not be a bad thing, considering Raspbian is still a 32-bit OS, but it causes quirks when people try to use certain 64-bit-only Operations.\nI imagine that the current setup works when using the Makefile, so I don't want to screw anything up. That said, any ideas on not defining IS_MOBILE_PLATFORM when compiling on Raspberry Pi? The best thing I could find was this answer on Stack Overflow- it seems a little clunky, so I didn't want to jump to making a PR with it without asking first.\nIn the meantime, the current fix is to delete this line before doing the Bazel build on the Pi. If there's no clean way to fix this up here, it's no big deal to tweak that file for builds moving forward.", "body": "A couple recent changes are throwing a wrench into compiling full TensorFlow binaries on RPi. [These lines](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/platform.h#L40-L45) cause `IS_MOBILE_PLATFORM` to be defined when compiling RPi, which in turn causes errors in some of the image processing files (such as [core/platform/png.h](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/png.h#L23-L26) and [core/platform/gif.h](https://github.com/tensorflow/tensorflow/blob/b11907ed7292e996b911ae64cc5d97f60c41518e/tensorflow/core/platform/gif.h#L23-L24)). It also prevents non-32-bit operations from being defined [in this file](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/register_types.h#L107-L131). This may not be a bad thing, considering Raspbian is still a 32-bit OS, but it causes quirks when people try to use certain 64-bit-only Operations.\n\nI imagine that the current setup works when using the [Makefile](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/makefile), so I don't want to screw anything up. That said, any ideas on not defining `IS_MOBILE_PLATFORM` when compiling on Raspberry Pi? The best thing I could find was [this answer on Stack Overflow](http://raspberrypi.stackexchange.com/questions/754/how-can-i-detect-that-im-compiling-for-raspberry-pi)\\- it seems a little clunky, so I didn't want to jump to making a PR with it without asking first.\n\nIn the meantime, the current fix is to delete [this line](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/platform.h#L45) before doing the Bazel build on the Pi. If there's no clean way to fix this up here, it's no big deal to tweak that file for builds moving forward.\n"}