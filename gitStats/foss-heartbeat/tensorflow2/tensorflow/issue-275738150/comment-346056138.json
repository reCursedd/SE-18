{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/346056138", "html_url": "https://github.com/tensorflow/tensorflow/issues/14762#issuecomment-346056138", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14762", "id": 346056138, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjA1NjEzOA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-21T15:11:09Z", "updated_at": "2017-11-21T15:11:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, this is intentional. <code>tf.concat()</code> expects a list of <code>tf.Tensor</code> objects as its argument, and it will implicitly convert a <code>tf.TensorShape</code> to a 1-D <code>tf.Tensor</code> if possible.</p>\n<p>If you want to concatenate shapes and retain their shape-ness, use <code>tf.TensorShape([4, 1]).concatenate([1, 1, 1, 1])</code>.</p>", "body_text": "Yes, this is intentional. tf.concat() expects a list of tf.Tensor objects as its argument, and it will implicitly convert a tf.TensorShape to a 1-D tf.Tensor if possible.\nIf you want to concatenate shapes and retain their shape-ness, use tf.TensorShape([4, 1]).concatenate([1, 1, 1, 1]).", "body": "Yes, this is intentional. `tf.concat()` expects a list of `tf.Tensor` objects as its argument, and it will implicitly convert a `tf.TensorShape` to a 1-D `tf.Tensor` if possible.\r\n\r\nIf you want to concatenate shapes and retain their shape-ness, use `tf.TensorShape([4, 1]).concatenate([1, 1, 1, 1])`."}