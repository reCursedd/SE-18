{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7129", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7129/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7129/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7129/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7129", "id": 203840720, "node_id": "MDU6SXNzdWUyMDM4NDA3MjA=", "number": 7129, "title": "Possible bug in ctc_beam_search_test.cc ?", "user": {"login": "matth", "id": 53077, "node_id": "MDQ6VXNlcjUzMDc3", "avatar_url": "https://avatars2.githubusercontent.com/u/53077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matth", "html_url": "https://github.com/matth", "followers_url": "https://api.github.com/users/matth/followers", "following_url": "https://api.github.com/users/matth/following{/other_user}", "gists_url": "https://api.github.com/users/matth/gists{/gist_id}", "starred_url": "https://api.github.com/users/matth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matth/subscriptions", "organizations_url": "https://api.github.com/users/matth/orgs", "repos_url": "https://api.github.com/users/matth/repos", "events_url": "https://api.github.com/users/matth/events{/privacy}", "received_events_url": "https://api.github.com/users/matth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-01-29T00:05:21Z", "updated_at": "2018-10-12T22:50:53Z", "closed_at": "2018-10-12T22:50:53Z", "author_association": "NONE", "body_html": "<p>Hello,</p>\n<p>I've found something very confusing in the above file, I can't see how <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/ctc/ctc_beam_search_test.cc#L54\">line number 54</a> can work correctly.</p>\n<pre><code> to_state-&gt;labels.push_back(to_label);\n</code></pre>\n<p>From what I can make out each child beam entry has a new state associated with it, so the <code>to_state</code> being passed to the <code>ExpandState</code> method should only ever be called with a single label, representing the current class at that time.</p>\n<p>I'm attempting to integrate a full n-gram language model into a beam scorer and this certainly seems to be the case. In order to build a string of all characters in the beam I must make a reference back to <code>from_state</code> in my <code>HistoryBeamState</code> and traverse back up the tree.</p>\n<p>This is not the case in the unit test though, and in fact if I log some output there I can see the <code>to_state</code> being reused with different <code>to_label</code> values. Hence the test does pass.</p>\n<p>Have I greatly misunderstood something here or is this not what the expected behaviour should be? I notice the test has a beam width less that the number of classes in the input tensor, which I guess is not so realistic? Perhaps I'm seeing an artifact of this?</p>\n<p>Any feedback would be great, I think understanding is correct but can't make sense of this unit test.</p>", "body_text": "Hello,\nI've found something very confusing in the above file, I can't see how line number 54 can work correctly.\n to_state->labels.push_back(to_label);\n\nFrom what I can make out each child beam entry has a new state associated with it, so the to_state being passed to the ExpandState method should only ever be called with a single label, representing the current class at that time.\nI'm attempting to integrate a full n-gram language model into a beam scorer and this certainly seems to be the case. In order to build a string of all characters in the beam I must make a reference back to from_state in my HistoryBeamState and traverse back up the tree.\nThis is not the case in the unit test though, and in fact if I log some output there I can see the to_state being reused with different to_label values. Hence the test does pass.\nHave I greatly misunderstood something here or is this not what the expected behaviour should be? I notice the test has a beam width less that the number of classes in the input tensor, which I guess is not so realistic? Perhaps I'm seeing an artifact of this?\nAny feedback would be great, I think understanding is correct but can't make sense of this unit test.", "body": "Hello,\r\n\r\nI've found something very confusing in the above file, I can't see how [line number 54](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/ctc/ctc_beam_search_test.cc#L54) can work correctly.\r\n\r\n```\r\n to_state->labels.push_back(to_label);\r\n```\r\n\r\nFrom what I can make out each child beam entry has a new state associated with it, so the `to_state` being passed to the `ExpandState` method should only ever be called with a single label, representing the current class at that time.\r\n\r\nI'm attempting to integrate a full n-gram language model into a beam scorer and this certainly seems to be the case. In order to build a string of all characters in the beam I must make a reference back to `from_state` in my `HistoryBeamState` and traverse back up the tree.\r\n\r\nThis is not the case in the unit test though, and in fact if I log some output there I can see the `to_state` being reused with different `to_label` values. Hence the test does pass.\r\n\r\nHave I greatly misunderstood something here or is this not what the expected behaviour should be? I notice the test has a beam width less that the number of classes in the input tensor, which I guess is not so realistic? Perhaps I'm seeing an artifact of this?\r\n\r\nAny feedback would be great, I think understanding is correct but can't make sense of this unit test."}