{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22731", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22731/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22731/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22731/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22731", "id": 366808138, "node_id": "MDU6SXNzdWUzNjY4MDgxMzg=", "number": 22731, "title": "Layer Normalization : Choice of the correct axes where to apply mean and variance in case of LSTM Input", "user": {"login": "AzizCode92", "id": 19540527, "node_id": "MDQ6VXNlcjE5NTQwNTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/19540527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AzizCode92", "html_url": "https://github.com/AzizCode92", "followers_url": "https://api.github.com/users/AzizCode92/followers", "following_url": "https://api.github.com/users/AzizCode92/following{/other_user}", "gists_url": "https://api.github.com/users/AzizCode92/gists{/gist_id}", "starred_url": "https://api.github.com/users/AzizCode92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AzizCode92/subscriptions", "organizations_url": "https://api.github.com/users/AzizCode92/orgs", "repos_url": "https://api.github.com/users/AzizCode92/repos", "events_url": "https://api.github.com/users/AzizCode92/events{/privacy}", "received_events_url": "https://api.github.com/users/AzizCode92/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-04T14:07:12Z", "updated_at": "2018-10-05T17:08:35Z", "closed_at": "2018-10-05T17:08:35Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: VERSION=\"16.04.4 LTS (Xenial Xerus)\"<br>\nVERSION_ID=\"16.04\"<br>\nVERSION_CODENAME=xenial</p>\n</li>\n<li>\n<p><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:<br>\nNo</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>: source</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>: 1.9.0</p>\n</li>\n<li>\n<p><strong>Python version</strong>: 2.7</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>: 0.11.1</p>\n</li>\n<li>\n<p><strong>GCC/Compiler version (if compiling from source)</strong>: c++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>: 9.1</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:  Tesla K80</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>: no command to reproduce</p>\n</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I'm implementing layer_normalization in an LSTM cell. My input has the following shape<br>\n<strong>[batch,time,features]</strong>.<br>\nIn tensorflow, we have the <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/LayerNormBasicLSTMCell\" rel=\"nofollow\">LayerNormBasicLsmtCell</a>.<br>\nReading the code of this class, and in line <a href=\"https://github.com/tensorflow/tensorflow/blob/c19e29306ce1777456b2dbb3a14f511edf7883a8/tensorflow/contrib/rnn/python/ops/rnn_cell.py#L1417\">1417</a>, the authors used the layer_norm function to apply the shift/scale of the inputs.<br>\nGoing to the implementation of the layer_norm and in line <a href=\"https://github.com/tensorflow/tensorflow/blob/c19e29306ce1777456b2dbb3a14f511edf7883a8/tensorflow/contrib/layers/python/layers/layers.py#L2311\">2311</a>, tensorflow specified the axes where to compute the mean/variance. Knowing that <code>begin_param_axis=1</code> and the <code>inputs_rank=3</code> in my case.<br>\nThe <code>norm_axes = list(range(1,3)) = [1,2]</code> so the mean/variance will be calculated on both axis time and features.<br>\n<strong>My question is</strong> :<br>\nwhy do we need to compute the mean and variance of both axis=time and axis=Features?<br>\nIsn't okay to just do the nn.moments of the feature axis only?<br>\nHow can we set up the axes correctly in case of LSTM cells?</p>", "body_text": "System information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): VERSION=\"16.04.4 LTS (Xenial Xerus)\"\nVERSION_ID=\"16.04\"\nVERSION_CODENAME=xenial\n\n\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nNo\n\n\nTensorFlow installed from (source or binary): source\n\n\nTensorFlow version (use command below): 1.9.0\n\n\nPython version: 2.7\n\n\nBazel version (if compiling from source): 0.11.1\n\n\nGCC/Compiler version (if compiling from source): c++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\n\n\nCUDA/cuDNN version: 9.1\n\n\nGPU model and memory:  Tesla K80\n\n\nExact command to reproduce: no command to reproduce\n\n\nDescribe the problem\nI'm implementing layer_normalization in an LSTM cell. My input has the following shape\n[batch,time,features].\nIn tensorflow, we have the LayerNormBasicLsmtCell.\nReading the code of this class, and in line 1417, the authors used the layer_norm function to apply the shift/scale of the inputs.\nGoing to the implementation of the layer_norm and in line 2311, tensorflow specified the axes where to compute the mean/variance. Knowing that begin_param_axis=1 and the inputs_rank=3 in my case.\nThe norm_axes = list(range(1,3)) = [1,2] so the mean/variance will be calculated on both axis time and features.\nMy question is :\nwhy do we need to compute the mean and variance of both axis=time and axis=Features?\nIsn't okay to just do the nn.moments of the feature axis only?\nHow can we set up the axes correctly in case of LSTM cells?", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: VERSION=\"16.04.4 LTS (Xenial Xerus)\"\r\nVERSION_ID=\"16.04\"\r\nVERSION_CODENAME=xenial\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n   No\r\n\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.9.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 0.11.1\r\n- **GCC/Compiler version (if compiling from source)**: c++ (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\n\r\n\r\n- **CUDA/cuDNN version**: 9.1\r\n- **GPU model and memory**:  Tesla K80\r\n\r\n- **Exact command to reproduce**: no command to reproduce\r\n\r\n### Describe the problem\r\nI'm implementing layer_normalization in an LSTM cell. My input has the following shape                           \r\n**[batch,time,features]**.\r\nIn tensorflow, we have the [LayerNormBasicLsmtCell](https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/LayerNormBasicLSTMCell).\r\nReading the code of this class, and in line [1417](https://github.com/tensorflow/tensorflow/blob/c19e29306ce1777456b2dbb3a14f511edf7883a8/tensorflow/contrib/rnn/python/ops/rnn_cell.py#L1417), the authors used the layer_norm function to apply the shift/scale of the inputs. \r\nGoing to the implementation of the layer_norm and in line [2311](https://github.com/tensorflow/tensorflow/blob/c19e29306ce1777456b2dbb3a14f511edf7883a8/tensorflow/contrib/layers/python/layers/layers.py#L2311), tensorflow specified the axes where to compute the mean/variance. Knowing that `begin_param_axis=1` and the `inputs_rank=3` in my case.\r\nThe `norm_axes = list(range(1,3)) = [1,2]` so the mean/variance will be calculated on both axis time and features.\r\n**My question is** : \r\nwhy do we need to compute the mean and variance of both axis=time and axis=Features?\r\nIsn't okay to just do the nn.moments of the feature axis only? \r\nHow can we set up the axes correctly in case of LSTM cells?\r\n\r\n"}