{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/296", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/296/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/296/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/296", "id": 117862712, "node_id": "MDU6SXNzdWUxMTc4NjI3MTI=", "number": 296, "title": "Better support for composite dataflow variables and time series", "user": {"login": "sirinath", "id": 637415, "node_id": "MDQ6VXNlcjYzNzQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/637415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirinath", "html_url": "https://github.com/sirinath", "followers_url": "https://api.github.com/users/sirinath/followers", "following_url": "https://api.github.com/users/sirinath/following{/other_user}", "gists_url": "https://api.github.com/users/sirinath/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirinath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirinath/subscriptions", "organizations_url": "https://api.github.com/users/sirinath/orgs", "repos_url": "https://api.github.com/users/sirinath/repos", "events_url": "https://api.github.com/users/sirinath/events{/privacy}", "received_events_url": "https://api.github.com/users/sirinath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-19T17:20:58Z", "updated_at": "2016-03-08T18:58:16Z", "closed_at": "2016-03-08T18:58:16Z", "author_association": "NONE", "body_html": "<p>Perhaps you can have better support for composite data flow variables. E.g. modelling a moving window multivariate time-series, where you have a series of vectors and as new vectors are added calculations are triggered only for values which need re calculation. Also if a calculation is dependent on a slice updates are propagated in the most optimal way that only the needed data is recalculated.</p>\n<p>The composite values can be:</p>\n<ul>\n<li>Same type:\n<ul>\n<li>Vectors</li>\n<li>Matrices</li>\n<li>Arrays</li>\n<li>Series</li>\n<li>Data frames</li>\n<li>Slices</li>\n</ul>\n</li>\n<li>Different types:\n<ul>\n<li>Tuples (also series with different types)</li>\n<li>Tables (also Data Frames with different types)</li>\n<li>Views (slices with different types)</li>\n</ul>\n</li>\n</ul>", "body_text": "Perhaps you can have better support for composite data flow variables. E.g. modelling a moving window multivariate time-series, where you have a series of vectors and as new vectors are added calculations are triggered only for values which need re calculation. Also if a calculation is dependent on a slice updates are propagated in the most optimal way that only the needed data is recalculated.\nThe composite values can be:\n\nSame type:\n\nVectors\nMatrices\nArrays\nSeries\nData frames\nSlices\n\n\nDifferent types:\n\nTuples (also series with different types)\nTables (also Data Frames with different types)\nViews (slices with different types)", "body": "Perhaps you can have better support for composite data flow variables. E.g. modelling a moving window multivariate time-series, where you have a series of vectors and as new vectors are added calculations are triggered only for values which need re calculation. Also if a calculation is dependent on a slice updates are propagated in the most optimal way that only the needed data is recalculated.\n\nThe composite values can be:\n- Same type:\n  - Vectors\n  - Matrices\n  - Arrays\n  - Series\n  - Data frames\n  - Slices\n- Different types:\n  - Tuples (also series with different types)\n  - Tables (also Data Frames with different types)\n  - Views (slices with different types)\n"}