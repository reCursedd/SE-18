{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/258701123", "html_url": "https://github.com/tensorflow/tensorflow/issues/4705#issuecomment-258701123", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4705", "id": 258701123, "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODcwMTEyMw==", "user": {"login": "darrengarvey", "id": 260360, "node_id": "MDQ6VXNlcjI2MDM2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/260360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrengarvey", "html_url": "https://github.com/darrengarvey", "followers_url": "https://api.github.com/users/darrengarvey/followers", "following_url": "https://api.github.com/users/darrengarvey/following{/other_user}", "gists_url": "https://api.github.com/users/darrengarvey/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrengarvey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrengarvey/subscriptions", "organizations_url": "https://api.github.com/users/darrengarvey/orgs", "repos_url": "https://api.github.com/users/darrengarvey/repos", "events_url": "https://api.github.com/users/darrengarvey/events{/privacy}", "received_events_url": "https://api.github.com/users/darrengarvey/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-06T18:46:14Z", "updated_at": "2016-11-06T18:46:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22860949\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/firolino\">@firolino</a> - You're right that it seems like <code>TF_NEED_CUDA</code> needs to be exported in the environment for building with cuda to work. I don't quite see where bazel is picking this environment variable up.</p>\n<p>Seems it's just in at <code>third_party/gpus/cuda_configure.bzl:118:</code> which is loaded via <code>tf_workspace()</code> in <code>WORKSPACE</code>. I guess while the bazel server is alive it's doing some caching of the workspace which is why this doesn't show up all of the time.</p>\n<p>So it looks a bit like a user (like me) actually needs to export this environment variable in order to build reliably, which isn't mentioned in any docs that I can see. I see <code>TF_NEED_CUDA=1</code> is manually put into the environment in <code>tensorflow/tools/ci_build/Dockerfile.gpu</code></p>\n<p>An alternative could be to store these variables in a local config file and reference them when loading <code>tf_workspace()</code>.</p>\n<p>This doesn't look like it's needed for the other variables like <code>TF_NEED_GCP</code> or <code>TF_NEED_HDFS</code> because those values are written to <code>tensorflow/core/platform/default/build_config.bzl</code>. Following the pattern there is a one easy way to fix this, but the disadvantage of doing that is you end up with changes to files that are part of the source tree (a minor inconvenience).</p>", "body_text": "@firolino - You're right that it seems like TF_NEED_CUDA needs to be exported in the environment for building with cuda to work. I don't quite see where bazel is picking this environment variable up.\nSeems it's just in at third_party/gpus/cuda_configure.bzl:118: which is loaded via tf_workspace() in WORKSPACE. I guess while the bazel server is alive it's doing some caching of the workspace which is why this doesn't show up all of the time.\nSo it looks a bit like a user (like me) actually needs to export this environment variable in order to build reliably, which isn't mentioned in any docs that I can see. I see TF_NEED_CUDA=1 is manually put into the environment in tensorflow/tools/ci_build/Dockerfile.gpu\nAn alternative could be to store these variables in a local config file and reference them when loading tf_workspace().\nThis doesn't look like it's needed for the other variables like TF_NEED_GCP or TF_NEED_HDFS because those values are written to tensorflow/core/platform/default/build_config.bzl. Following the pattern there is a one easy way to fix this, but the disadvantage of doing that is you end up with changes to files that are part of the source tree (a minor inconvenience).", "body": "@firolino - You're right that it seems like `TF_NEED_CUDA` needs to be exported in the environment for building with cuda to work. I don't quite see where bazel is picking this environment variable up. \n\nSeems it's just in at `third_party/gpus/cuda_configure.bzl:118:` which is loaded via `tf_workspace()` in `WORKSPACE`. I guess while the bazel server is alive it's doing some caching of the workspace which is why this doesn't show up all of the time.\n\nSo it looks a bit like a user (like me) actually needs to export this environment variable in order to build reliably, which isn't mentioned in any docs that I can see. I see `TF_NEED_CUDA=1` is manually put into the environment in `tensorflow/tools/ci_build/Dockerfile.gpu`\n\nAn alternative could be to store these variables in a local config file and reference them when loading `tf_workspace()`.\n\nThis doesn't look like it's needed for the other variables like `TF_NEED_GCP` or `TF_NEED_HDFS` because those values are written to `tensorflow/core/platform/default/build_config.bzl`. Following the pattern there is a one easy way to fix this, but the disadvantage of doing that is you end up with changes to files that are part of the source tree (a minor inconvenience).\n"}