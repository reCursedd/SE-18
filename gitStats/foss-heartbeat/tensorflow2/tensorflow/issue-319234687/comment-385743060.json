{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/385743060", "html_url": "https://github.com/tensorflow/tensorflow/issues/19002#issuecomment-385743060", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19002", "id": 385743060, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTc0MzA2MA==", "user": {"login": "glhfgg1024", "id": 30264480, "node_id": "MDQ6VXNlcjMwMjY0NDgw", "avatar_url": "https://avatars3.githubusercontent.com/u/30264480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glhfgg1024", "html_url": "https://github.com/glhfgg1024", "followers_url": "https://api.github.com/users/glhfgg1024/followers", "following_url": "https://api.github.com/users/glhfgg1024/following{/other_user}", "gists_url": "https://api.github.com/users/glhfgg1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/glhfgg1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glhfgg1024/subscriptions", "organizations_url": "https://api.github.com/users/glhfgg1024/orgs", "repos_url": "https://api.github.com/users/glhfgg1024/repos", "events_url": "https://api.github.com/users/glhfgg1024/events{/privacy}", "received_events_url": "https://api.github.com/users/glhfgg1024/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-01T18:06:10Z", "updated_at": "2018-05-01T18:06:29Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> , if I use the ordinary version without randomly use the python <code>list</code> to save the ops (feature_op, label_op), and use the following:</p>\n<pre><code>trn_filenames = trn0_filenames +trn1_filenames\nfeatures_op, labels_op = dataset_input_from_tfrecords(trn_filenames, batch_size=4, num_epochs=50000, shuffle=True, image_mean=None)\n</code></pre>\n<p>Then everything works fine, which means the <code>dataset_input_from_tfrecords</code> is fine. But in my case I want to make the class distribution balanced and just one sample from one tfrecords file. I'm not sure if the <code>Dataset</code> API has this functionality, thus I generated many Datasets operations and did the work like that described above.</p>", "body_text": "Hi @mrry , if I use the ordinary version without randomly use the python list to save the ops (feature_op, label_op), and use the following:\ntrn_filenames = trn0_filenames +trn1_filenames\nfeatures_op, labels_op = dataset_input_from_tfrecords(trn_filenames, batch_size=4, num_epochs=50000, shuffle=True, image_mean=None)\n\nThen everything works fine, which means the dataset_input_from_tfrecords is fine. But in my case I want to make the class distribution balanced and just one sample from one tfrecords file. I'm not sure if the Dataset API has this functionality, thus I generated many Datasets operations and did the work like that described above.", "body": "Hi @mrry , if I use the ordinary version without randomly use the python `list` to save the ops (feature_op, label_op), and use the following:\r\n\r\n    trn_filenames = trn0_filenames +trn1_filenames\r\n    features_op, labels_op = dataset_input_from_tfrecords(trn_filenames, batch_size=4, num_epochs=50000, shuffle=True, image_mean=None)\r\n\r\nThen everything works fine, which means the `dataset_input_from_tfrecords` is fine. But in my case I want to make the class distribution balanced and just one sample from one tfrecords file. I'm not sure if the `Dataset` API has this functionality, thus I generated many Datasets operations and did the work like that described above."}