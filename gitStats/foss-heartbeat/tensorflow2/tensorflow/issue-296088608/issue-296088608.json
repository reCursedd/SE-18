{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16909", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16909/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16909/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16909/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/16909", "id": 296088608, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4Mzk0OTQy", "number": 16909, "title": "Add doc on the order of eigenvalues returned by tf.self_adjoint_eig", "user": {"login": "qmick", "id": 6958746, "node_id": "MDQ6VXNlcjY5NTg3NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6958746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmick", "html_url": "https://github.com/qmick", "followers_url": "https://api.github.com/users/qmick/followers", "following_url": "https://api.github.com/users/qmick/following{/other_user}", "gists_url": "https://api.github.com/users/qmick/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmick/subscriptions", "organizations_url": "https://api.github.com/users/qmick/orgs", "repos_url": "https://api.github.com/users/qmick/repos", "events_url": "https://api.github.com/users/qmick/events{/privacy}", "received_events_url": "https://api.github.com/users/qmick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-02-10T09:47:29Z", "updated_at": "2018-03-16T22:33:46Z", "closed_at": "2018-03-16T22:33:45Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16909", "html_url": "https://github.com/tensorflow/tensorflow/pull/16909", "diff_url": "https://github.com/tensorflow/tensorflow/pull/16909.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/16909.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #16747.\">Resolves</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"294175308\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16747\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/16747/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/16747\">#16747</a><br>\nAs discussed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"294175308\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16747\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/16747/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/16747\">#16747</a>, I think we can add doc on the order of eigenvalues returned by tf.self_adjoint_eig. But further discussion may be required. Any opinions will be appreciated.</p>\n<p>Eigen doc says:</p>\n<blockquote>\n<p>The eigenvalues are repeated according to their algebraic multiplicity, so there are as many eigenvalues as rows in the matrix. The eigenvalues are sorted in increasing order.<br>\n<a href=\"https://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html#a3df8721abcc71132f7f02bf9dfe78e41\" rel=\"nofollow\">https://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html#a3df8721abcc71132f7f02bf9dfe78e41</a></p>\n</blockquote>\n<p>And CUDA doc says:</p>\n<blockquote>\n<p>a real array of dimension n. The eigenvalue values of A, in ascending order ie, sorted so that W(i) &lt;= W(i+1).<br>\n<a href=\"http://docs.nvidia.com/cuda/cusolver/#cuds-lt-t-gt-syevd\" rel=\"nofollow\">http://docs.nvidia.com/cuda/cusolver/#cuds-lt-t-gt-syevd</a></p>\n</blockquote>\n<p>The key point is whether we should add this order constraint to TensorFlow itself. Will tf.self_adjoint_eig move to other implementation that does not guarantee ascending order one day?</p>", "body_text": "Resolves #16747\nAs discussed in #16747, I think we can add doc on the order of eigenvalues returned by tf.self_adjoint_eig. But further discussion may be required. Any opinions will be appreciated.\nEigen doc says:\n\nThe eigenvalues are repeated according to their algebraic multiplicity, so there are as many eigenvalues as rows in the matrix. The eigenvalues are sorted in increasing order.\nhttps://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html#a3df8721abcc71132f7f02bf9dfe78e41\n\nAnd CUDA doc says:\n\na real array of dimension n. The eigenvalue values of A, in ascending order ie, sorted so that W(i) <= W(i+1).\nhttp://docs.nvidia.com/cuda/cusolver/#cuds-lt-t-gt-syevd\n\nThe key point is whether we should add this order constraint to TensorFlow itself. Will tf.self_adjoint_eig move to other implementation that does not guarantee ascending order one day?", "body": "Resolves #16747 \r\nAs discussed in #16747, I think we can add doc on the order of eigenvalues returned by tf.self_adjoint_eig. But further discussion may be required. Any opinions will be appreciated.\r\n\r\nEigen doc says:\r\n> The eigenvalues are repeated according to their algebraic multiplicity, so there are as many eigenvalues as rows in the matrix. The eigenvalues are sorted in increasing order.\r\n> https://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html#a3df8721abcc71132f7f02bf9dfe78e41\r\n\r\nAnd CUDA doc says:\r\n> a real array of dimension n. The eigenvalue values of A, in ascending order ie, sorted so that W(i) <= W(i+1).\r\n> http://docs.nvidia.com/cuda/cusolver/#cuds-lt-t-gt-syevd\r\n\r\nThe key point is whether we should add this order constraint to TensorFlow itself. Will tf.self_adjoint_eig move to other implementation that does not guarantee ascending order one day?"}