{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/328626768", "html_url": "https://github.com/tensorflow/tensorflow/issues/12851#issuecomment-328626768", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12851", "id": 328626768, "node_id": "MDEyOklzc3VlQ29tbWVudDMyODYyNjc2OA==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-11T19:01:58Z", "updated_at": "2017-09-11T19:01:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I guess another not-so-pretty solution would be to have an iterator over tuples <code>(I, IT)</code> in my model, always, and then, if a user provides a dataset of <code>I</code>, I map that to one of <code>(I, TI)</code>, with dummy values for the <code>TI</code> elements. Although, I feel that this would be inefficient and also a bit ugly.</p>", "body_text": "I guess another not-so-pretty solution would be to have an iterator over tuples (I, IT) in my model, always, and then, if a user provides a dataset of I, I map that to one of (I, TI), with dummy values for the TI elements. Although, I feel that this would be inefficient and also a bit ugly.", "body": "I guess another not-so-pretty solution would be to have an iterator over tuples `(I, IT)` in my model, always, and then, if a user provides a dataset of `I`, I map that to one of `(I, TI)`, with dummy values for the `TI` elements. Although, I feel that this would be inefficient and also a bit ugly."}