{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/242239077", "html_url": "https://github.com/tensorflow/tensorflow/issues/3624#issuecomment-242239077", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3624", "id": 242239077, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjIzOTA3Nw==", "user": {"login": "sbrodeur", "id": 4322357, "node_id": "MDQ6VXNlcjQzMjIzNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4322357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrodeur", "html_url": "https://github.com/sbrodeur", "followers_url": "https://api.github.com/users/sbrodeur/followers", "following_url": "https://api.github.com/users/sbrodeur/following{/other_user}", "gists_url": "https://api.github.com/users/sbrodeur/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrodeur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrodeur/subscriptions", "organizations_url": "https://api.github.com/users/sbrodeur/orgs", "repos_url": "https://api.github.com/users/sbrodeur/repos", "events_url": "https://api.github.com/users/sbrodeur/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrodeur/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-24T23:26:17Z", "updated_at": "2016-08-24T23:26:17Z", "author_association": "NONE", "body_html": "<p>I can confirm that with the above trick, I can make work a lot of very useful functions for complex numbers on GPU (e.g. square, neg, div, mul, abs) This brings support for complex gradient computation on GPU:</p>\n<pre><code>import tensorflow as tf\n\nif __name__ == '__main__':\n\n    with tf.device('/gpu:0'):\n        N = 100\n        a = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        b = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        c = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n\n        d = c * tf.neg(tf.square(a + b))\n\n        grad = tf.gradients([d], [a])\n\n        with tf.Session() as sess:\n            grad = sess.run(grad)\n</code></pre>\n<p>Should I make a PR or should we investigate further the handling of std::complex by nvcc?</p>", "body_text": "I can confirm that with the above trick, I can make work a lot of very useful functions for complex numbers on GPU (e.g. square, neg, div, mul, abs) This brings support for complex gradient computation on GPU:\nimport tensorflow as tf\n\nif __name__ == '__main__':\n\n    with tf.device('/gpu:0'):\n        N = 100\n        a = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        b = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        c = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n\n        d = c * tf.neg(tf.square(a + b))\n\n        grad = tf.gradients([d], [a])\n\n        with tf.Session() as sess:\n            grad = sess.run(grad)\n\nShould I make a PR or should we investigate further the handling of std::complex by nvcc?", "body": "I can confirm that with the above trick, I can make work a lot of very useful functions for complex numbers on GPU (e.g. square, neg, div, mul, abs) This brings support for complex gradient computation on GPU:\n\n```\nimport tensorflow as tf\n\nif __name__ == '__main__':\n\n    with tf.device('/gpu:0'):\n        N = 100\n        a = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        b = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        c = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n\n        d = c * tf.neg(tf.square(a + b))\n\n        grad = tf.gradients([d], [a])\n\n        with tf.Session() as sess:\n            grad = sess.run(grad)\n```\n\nShould I make a PR or should we investigate further the handling of std::complex by nvcc?\n"}