{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/239497070", "html_url": "https://github.com/tensorflow/tensorflow/issues/3624#issuecomment-239497070", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3624", "id": 239497070, "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQ5NzA3MA==", "user": {"login": "sbrodeur", "id": 4322357, "node_id": "MDQ6VXNlcjQzMjIzNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4322357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrodeur", "html_url": "https://github.com/sbrodeur", "followers_url": "https://api.github.com/users/sbrodeur/followers", "following_url": "https://api.github.com/users/sbrodeur/following{/other_user}", "gists_url": "https://api.github.com/users/sbrodeur/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrodeur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrodeur/subscriptions", "organizations_url": "https://api.github.com/users/sbrodeur/orgs", "repos_url": "https://api.github.com/users/sbrodeur/repos", "events_url": "https://api.github.com/users/sbrodeur/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrodeur/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-12T16:43:15Z", "updated_at": "2016-08-12T16:44:24Z", "author_association": "NONE", "body_html": "<p>So far, I can make it work with some operations (add, sub) by simply adding the complex data types when registering the kernels: e.g. <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/32bd3d024f33e920a67a1081bc0ae0048350fdee/tensorflow/core/kernels/cwise_op_add.cc#L22\">tensorflow/tensorflow/core/kernels/cwise_op_add.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 22\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/32bd3d024f33e920a67a1081bc0ae0048350fdee\">32bd3d0</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L22\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"22\"></td>\n          <td id=\"LC22\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-en\">REGISTER4</span>(BinaryOp, GPU, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Add<span class=\"pl-pds\">\"</span></span>, functor::add, <span class=\"pl-k\">float</span>, Eigen::half, <span class=\"pl-k\">double</span>, </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<pre><code>DEFINE_BINARY6(add, Eigen::half, float, double, int64, complex64, complex128);\n</code></pre>\n<p>Compilation errors however occur for multiplication (and division), as seen below.<br>\nSearching the web, I found here that CUDA may not support std::complex because of STL incompatibilities:<br>\n<a href=\"https://forum.kde.org/viewtopic.php?f=74&amp;t=123919\" rel=\"nofollow\">https://forum.kde.org/viewtopic.php?f=74&amp;t=123919</a></p>\n<p>It seems to solve this problem, people have been using reimplementations of the std:complex type (e.g. from thrust, cuda_complex or cusp) so that it can be used in device code:<br>\n<a href=\"https://github.com/thrust/thrust/blob/2ef13096187b40a35a71451d09e49b14074b0859/thrust/complex.h\">https://github.com/thrust/thrust/blob/2ef13096187b40a35a71451d09e49b14074b0859/thrust/complex.h</a><br>\n<a href=\"https://github.com/jtravs/cuda_complex/blob/master/cuda_complex.hpp\">https://github.com/jtravs/cuda_complex/blob/master/cuda_complex.hpp</a><br>\n<a href=\"https://github.com/cusplibrary/cusplibrary/blob/master/cusp/complex.h\">https://github.com/cusplibrary/cusplibrary/blob/master/cusp/complex.h</a></p>\n<p>Would the Eigen library implementing something similar to what thrust uses solve the issue in Tensorflow?</p>\n<h3>Compilation output</h3>\n<p>INFO: From Compiling tensorflow/core/kernels/cwise_op_gpu_mul.cu.cc:<br>\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.<br>\nIn file included from /usr/local/cuda-7.5/include/host_config.h:161:0,<br>\nfrom /usr/local/cuda-7.5/include/cuda_runtime.h:76,<br>\nfrom :0:<br>\n/usr/include/features.h:330:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]</p>\n<h1>warning _FORTIFY_SOURCE requires compiling with optimization (-O)</h1>\n<pre><code>^\n</code></pre>\n<p>In file included from /usr/local/cuda-7.5/include/host_config.h:161:0,<br>\nfrom /usr/local/cuda-7.5/include/cuda_runtime.h:76,<br>\nfrom :0:<br>\n/usr/include/features.h:330:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]</p>\n<h1>warning _FORTIFY_SOURCE requires compiling with optimization (-O)</h1>\n<pre><code>^\n</code></pre>\n<p>In file included from /usr/local/cuda-7.5/include/host_config.h:161:0,<br>\nfrom /usr/local/cuda-7.5/include/cuda_runtime.h:76,<br>\nfrom :0:<br>\n/usr/include/features.h:330:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]</p>\n<h1>warning _FORTIFY_SOURCE requires compiling with optimization (-O)</h1>\n<pre><code>^\n</code></pre>\n<p>nvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.<br>\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"</p>\n<p>12 errors detected in the compilation of \"/tmp/tmpxft_0000430f_00000000-12_cwise_op_gpu_mul.cu.compute_35.cpp2.i\".</p>", "body_text": "So far, I can make it work with some operations (add, sub) by simply adding the complex data types when registering the kernels: e.g. \n  \n    \n      tensorflow/tensorflow/core/kernels/cwise_op_add.cc\n    \n    \n         Line 22\n      in\n      32bd3d0\n    \n    \n    \n    \n\n        \n          \n           REGISTER4(BinaryOp, GPU, \"Add\", functor::add, float, Eigen::half, double, \n        \n    \n  \n\n\nDEFINE_BINARY6(add, Eigen::half, float, double, int64, complex64, complex128);\n\nCompilation errors however occur for multiplication (and division), as seen below.\nSearching the web, I found here that CUDA may not support std::complex because of STL incompatibilities:\nhttps://forum.kde.org/viewtopic.php?f=74&t=123919\nIt seems to solve this problem, people have been using reimplementations of the std:complex type (e.g. from thrust, cuda_complex or cusp) so that it can be used in device code:\nhttps://github.com/thrust/thrust/blob/2ef13096187b40a35a71451d09e49b14074b0859/thrust/complex.h\nhttps://github.com/jtravs/cuda_complex/blob/master/cuda_complex.hpp\nhttps://github.com/cusplibrary/cusplibrary/blob/master/cusp/complex.h\nWould the Eigen library implementing something similar to what thrust uses solve the issue in Tensorflow?\nCompilation output\nINFO: From Compiling tensorflow/core/kernels/cwise_op_gpu_mul.cu.cc:\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nIn file included from /usr/local/cuda-7.5/include/host_config.h:161:0,\nfrom /usr/local/cuda-7.5/include/cuda_runtime.h:76,\nfrom :0:\n/usr/include/features.h:330:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]\nwarning _FORTIFY_SOURCE requires compiling with optimization (-O)\n^\n\nIn file included from /usr/local/cuda-7.5/include/host_config.h:161:0,\nfrom /usr/local/cuda-7.5/include/cuda_runtime.h:76,\nfrom :0:\n/usr/include/features.h:330:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]\nwarning _FORTIFY_SOURCE requires compiling with optimization (-O)\n^\n\nIn file included from /usr/local/cuda-7.5/include/host_config.h:161:0,\nfrom /usr/local/cuda-7.5/include/cuda_runtime.h:76,\nfrom :0:\n/usr/include/features.h:330:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]\nwarning _FORTIFY_SOURCE requires compiling with optimization (-O)\n^\n\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n12 errors detected in the compilation of \"/tmp/tmpxft_0000430f_00000000-12_cwise_op_gpu_mul.cu.compute_35.cpp2.i\".", "body": "So far, I can make it work with some operations (add, sub) by simply adding the complex data types when registering the kernels: e.g. https://github.com/tensorflow/tensorflow/blob/32bd3d024f33e920a67a1081bc0ae0048350fdee/tensorflow/core/kernels/cwise_op_add.cc#L22\n\n```\nDEFINE_BINARY6(add, Eigen::half, float, double, int64, complex64, complex128);\n```\n\nCompilation errors however occur for multiplication (and division), as seen below.\nSearching the web, I found here that CUDA may not support std::complex because of STL incompatibilities:\nhttps://forum.kde.org/viewtopic.php?f=74&t=123919\n\nIt seems to solve this problem, people have been using reimplementations of the std:complex type (e.g. from thrust, cuda_complex or cusp) so that it can be used in device code:\nhttps://github.com/thrust/thrust/blob/2ef13096187b40a35a71451d09e49b14074b0859/thrust/complex.h\nhttps://github.com/jtravs/cuda_complex/blob/master/cuda_complex.hpp\nhttps://github.com/cusplibrary/cusplibrary/blob/master/cusp/complex.h\n\nWould the Eigen library implementing something similar to what thrust uses solve the issue in Tensorflow?\n\n### Compilation output\n\nINFO: From Compiling tensorflow/core/kernels/cwise_op_gpu_mul.cu.cc:\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nIn file included from /usr/local/cuda-7.5/include/host_config.h:161:0,\n                 from /usr/local/cuda-7.5/include/cuda_runtime.h:76,\n                 from <command-line>:0:\n/usr/include/features.h:330:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]\n #  warning _FORTIFY_SOURCE requires compiling with optimization (-O)\n    ^\nIn file included from /usr/local/cuda-7.5/include/host_config.h:161:0,\n                 from /usr/local/cuda-7.5/include/cuda_runtime.h:76,\n                 from <command-line>:0:\n/usr/include/features.h:330:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]\n #  warning _FORTIFY_SOURCE requires compiling with optimization (-O)\n    ^\nIn file included from /usr/local/cuda-7.5/include/host_config.h:161:0,\n                 from /usr/local/cuda-7.5/include/cuda_runtime.h:76,\n                 from <command-line>:0:\n/usr/include/features.h:330:4: warning: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Wcpp]\n #  warning _FORTIFY_SOURCE requires compiling with optimization (-O)\n    ^\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h(136): error: a value of type \"int\" cannot be assigned to an entity of type \"_ZNSt7complexIfE9_ComplexTE\"\n\n12 errors detected in the compilation of \"/tmp/tmpxft_0000430f_00000000-12_cwise_op_gpu_mul.cu.compute_35.cpp2.i\".\n"}