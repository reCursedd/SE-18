{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/237322718", "html_url": "https://github.com/tensorflow/tensorflow/issues/3624#issuecomment-237322718", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3624", "id": 237322718, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzMyMjcxOA==", "user": {"login": "sbrodeur", "id": 4322357, "node_id": "MDQ6VXNlcjQzMjIzNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4322357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrodeur", "html_url": "https://github.com/sbrodeur", "followers_url": "https://api.github.com/users/sbrodeur/followers", "following_url": "https://api.github.com/users/sbrodeur/following{/other_user}", "gists_url": "https://api.github.com/users/sbrodeur/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrodeur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrodeur/subscriptions", "organizations_url": "https://api.github.com/users/sbrodeur/orgs", "repos_url": "https://api.github.com/users/sbrodeur/repos", "events_url": "https://api.github.com/users/sbrodeur/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrodeur/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-03T18:17:08Z", "updated_at": "2016-08-03T18:17:08Z", "author_association": "NONE", "body_html": "<p>Note: implementations using built-in Tensorflow functions as show above doesn't solve gradient issues caused by the handling of complex numbers:</p>\n<pre><code>import tensorflow as tf\n\ndef complex_mul(x, y):\n    xr, xi = tf.real(x), tf.imag(x)\n    yr, yi = tf.real(y), tf.imag(y)\n    return tf.complex(xr*yr - xi*yi, xr*yi + xi*yr)\n\nif __name__ == '__main__':\n\n    with tf.device('/gpu:0'):\n        N = 100\n        a = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        b = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        c = complex_mul(a, b)\n\n        grad = tf.gradients([c], [a])\n\n        with tf.Session() as sess:\n            grad = sess.run(grad)\n</code></pre>\n<p>This code will fail with the following error:</p>\n<p>E tensorflow/core/client/tensor_c_api.cc:485] Cannot assign a device to node 'gradients/Shape': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.<br>\n[[Node: gradients/Shape = Shape<a href=\"Complex_2\">T=DT_COMPLEX64, _device=\"/device:GPU:0\"</a>]]<br>\nTraceback (most recent call last):<br>\nFile \"test_div_gpu_grad_prob.py\", line 19, in <br>\ngrad = sess.run(grad)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 382, in run<br>\nrun_metadata_ptr)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 655, in _run<br>\nfeed_dict_string, options, run_metadata)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 723, in _do_run<br>\ntarget_list, options, run_metadata)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 743, in _do_call<br>\nraise type(e)(node_def, op, message)<br>\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'gradients/Shape': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.<br>\n[[Node: gradients/Shape = Shape<a href=\"Complex_2\">T=DT_COMPLEX64, _device=\"/device:GPU:0\"</a>]]<br>\nCaused by op u'gradients/Shape', defined at:<br>\nFile \"test_div_gpu_grad_prob.py\", line 16, in <br>\ngrad = tf.gradients([c], [a])<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 367, in gradients<br>\ngrad_ys = _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 230, in _DefaultGradYs<br>\narray_ops.shape(y),<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 131, in shape<br>\nreturn gen_array_ops.shape(input, name=name)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 1922, in shape<br>\nresult = _op_def_lib.apply_op(\"Shape\", input=input, name=name)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 703, in apply_op<br>\nop_def=op_def)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2310, in create_op<br>\noriginal_op=self._default_original_op, op_def=op_def)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1232, in <strong>init</strong><br>\nself._traceback = _extract_stack()</p>", "body_text": "Note: implementations using built-in Tensorflow functions as show above doesn't solve gradient issues caused by the handling of complex numbers:\nimport tensorflow as tf\n\ndef complex_mul(x, y):\n    xr, xi = tf.real(x), tf.imag(x)\n    yr, yi = tf.real(y), tf.imag(y)\n    return tf.complex(xr*yr - xi*yi, xr*yi + xi*yr)\n\nif __name__ == '__main__':\n\n    with tf.device('/gpu:0'):\n        N = 100\n        a = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        b = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        c = complex_mul(a, b)\n\n        grad = tf.gradients([c], [a])\n\n        with tf.Session() as sess:\n            grad = sess.run(grad)\n\nThis code will fail with the following error:\nE tensorflow/core/client/tensor_c_api.cc:485] Cannot assign a device to node 'gradients/Shape': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n[[Node: gradients/Shape = ShapeT=DT_COMPLEX64, _device=\"/device:GPU:0\"]]\nTraceback (most recent call last):\nFile \"test_div_gpu_grad_prob.py\", line 19, in \ngrad = sess.run(grad)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 382, in run\nrun_metadata_ptr)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 655, in _run\nfeed_dict_string, options, run_metadata)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 723, in _do_run\ntarget_list, options, run_metadata)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 743, in _do_call\nraise type(e)(node_def, op, message)\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'gradients/Shape': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n[[Node: gradients/Shape = ShapeT=DT_COMPLEX64, _device=\"/device:GPU:0\"]]\nCaused by op u'gradients/Shape', defined at:\nFile \"test_div_gpu_grad_prob.py\", line 16, in \ngrad = tf.gradients([c], [a])\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 367, in gradients\ngrad_ys = _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 230, in _DefaultGradYs\narray_ops.shape(y),\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 131, in shape\nreturn gen_array_ops.shape(input, name=name)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 1922, in shape\nresult = _op_def_lib.apply_op(\"Shape\", input=input, name=name)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 703, in apply_op\nop_def=op_def)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2310, in create_op\noriginal_op=self._default_original_op, op_def=op_def)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1232, in init\nself._traceback = _extract_stack()", "body": "Note: implementations using built-in Tensorflow functions as show above doesn't solve gradient issues caused by the handling of complex numbers:\n\n```\nimport tensorflow as tf\n\ndef complex_mul(x, y):\n    xr, xi = tf.real(x), tf.imag(x)\n    yr, yi = tf.real(y), tf.imag(y)\n    return tf.complex(xr*yr - xi*yi, xr*yi + xi*yr)\n\nif __name__ == '__main__':\n\n    with tf.device('/gpu:0'):\n        N = 100\n        a = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        b = tf.complex(tf.random_normal((N,)), tf.random_normal((N,)))\n        c = complex_mul(a, b)\n\n        grad = tf.gradients([c], [a])\n\n        with tf.Session() as sess:\n            grad = sess.run(grad)\n```\n\nThis code will fail with the following error:\n\nE tensorflow/core/client/tensor_c_api.cc:485] Cannot assign a device to node 'gradients/Shape': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n     [[Node: gradients/Shape = Shape[T=DT_COMPLEX64, _device=\"/device:GPU:0\"](Complex_2)]]\nTraceback (most recent call last):\n  File \"test_div_gpu_grad_prob.py\", line 19, in <module>\n    grad = sess.run(grad)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 382, in run\n    run_metadata_ptr)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 655, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 723, in _do_run\n    target_list, options, run_metadata)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 743, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'gradients/Shape': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n     [[Node: gradients/Shape = Shape[T=DT_COMPLEX64, _device=\"/device:GPU:0\"](Complex_2)]]\nCaused by op u'gradients/Shape', defined at:\n  File \"test_div_gpu_grad_prob.py\", line 16, in <module>\n    grad = tf.gradients([c], [a])\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 367, in gradients\n    grad_ys = _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 230, in _DefaultGradYs\n    array_ops.shape(y),\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 131, in shape\n    return gen_array_ops.shape(input, name=name)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 1922, in shape\n    result = _op_def_lib.apply_op(\"Shape\", input=input, name=name)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 703, in apply_op\n    op_def=op_def)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2310, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1232, in __init__\n    self._traceback = _extract_stack()\n"}