{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/82313917", "pull_request_review_id": 3231395, "id": 82313917, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyMzEzOTE3", "diff_hunk": "@@ -228,10 +225,15 @@ while true; do\n       cudnn_lib_path=\"${CUDNN_INSTALL_PATH}/lib/libcudnn.dylib\"\n       cudnn_alt_lib_path=\"${CUDNN_INSTALL_PATH}/libcudnn.dylib\"\n     fi\n+    # Resolve to the SONAME of the symlink.  Use readlink without -f\n+    # to resolve exactly once to the SONAME.  E.g, libcudnn.so ->\n+    # libcudnn.so.4.\n+    # If the path is not a symlink, readlink will exit with an error code, so\n+    # in that case, we return the path itself.\n     if [ -f \"$cudnn_lib_path\" ]; then\n-      REALVAL=`readlink -f ${cudnn_lib_path}`\n+      REALVAL=`readlink ${cudnn_lib_path} || echo \"${cudnn_lib_path}\"`", "path": "configure", "position": 21, "original_position": 21, "commit_id": "5396ee3ad3f3f8d5314556a004578d65ea68a07a", "original_commit_id": "5396ee3ad3f3f8d5314556a004578d65ea68a07a", "user": {"login": "davidzchen", "id": 5283042, "node_id": "MDQ6VXNlcjUyODMwNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "Looking into this more, I now understand why the comment says that we only want to resolve one level.\n\nOn my installation, `libcudnn.so` resolves to `libcudnn.so.4`, which then resolves to `libcudnn.so.4.0.7`, and this code extracts the 4 from `libcudnn.so.4`. Though, the regex that we are using would still work if we resolve all the way to `libcudnn.so.4.0.7`.\n\nIn any case, let's merge this since `readlink -f` is invalid on macOS. Once Bazel 0.3.2 (see bazelbuild/bazel#1840) is released, I am planning to move this logic into `cuda_configure` and use the Skylark `realpath()` method, which implements `readlink -f` and works cross-platform.\n", "created_at": "2016-10-07T00:48:12Z", "updated_at": "2016-10-07T00:48:13Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4806#discussion_r82313917", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4806", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/82313917"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4806#discussion_r82313917"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4806"}}, "body_html": "<p>Looking into this more, I now understand why the comment says that we only want to resolve one level.</p>\n<p>On my installation, <code>libcudnn.so</code> resolves to <code>libcudnn.so.4</code>, which then resolves to <code>libcudnn.so.4.0.7</code>, and this code extracts the 4 from <code>libcudnn.so.4</code>. Though, the regex that we are using would still work if we resolve all the way to <code>libcudnn.so.4.0.7</code>.</p>\n<p>In any case, let's merge this since <code>readlink -f</code> is invalid on macOS. Once Bazel 0.3.2 (see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"179532287\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/bazelbuild/bazel/issues/1840\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/1840/hovercard\" href=\"https://github.com/bazelbuild/bazel/issues/1840\">bazelbuild/bazel#1840</a>) is released, I am planning to move this logic into <code>cuda_configure</code> and use the Skylark <code>realpath()</code> method, which implements <code>readlink -f</code> and works cross-platform.</p>", "body_text": "Looking into this more, I now understand why the comment says that we only want to resolve one level.\nOn my installation, libcudnn.so resolves to libcudnn.so.4, which then resolves to libcudnn.so.4.0.7, and this code extracts the 4 from libcudnn.so.4. Though, the regex that we are using would still work if we resolve all the way to libcudnn.so.4.0.7.\nIn any case, let's merge this since readlink -f is invalid on macOS. Once Bazel 0.3.2 (see bazelbuild/bazel#1840) is released, I am planning to move this logic into cuda_configure and use the Skylark realpath() method, which implements readlink -f and works cross-platform.", "in_reply_to_id": 82310117}