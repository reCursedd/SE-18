{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302205945", "html_url": "https://github.com/tensorflow/tensorflow/issues/9742#issuecomment-302205945", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9742", "id": 302205945, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjIwNTk0NQ==", "user": {"login": "sirfz", "id": 4741099, "node_id": "MDQ6VXNlcjQ3NDEwOTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4741099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirfz", "html_url": "https://github.com/sirfz", "followers_url": "https://api.github.com/users/sirfz/followers", "following_url": "https://api.github.com/users/sirfz/following{/other_user}", "gists_url": "https://api.github.com/users/sirfz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirfz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirfz/subscriptions", "organizations_url": "https://api.github.com/users/sirfz/orgs", "repos_url": "https://api.github.com/users/sirfz/repos", "events_url": "https://api.github.com/users/sirfz/events{/privacy}", "received_events_url": "https://api.github.com/users/sirfz/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-17T19:30:58Z", "updated_at": "2017-05-17T19:30:58Z", "author_association": "NONE", "body_html": "<p>After seeing <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"227852962\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9823\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/9823/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/9823\">#9823</a> (not sure if related to this), I tried the memory_util script suggested by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> but the output is pretty much the same for both environments:</p>\n<h3>Binary</h3>\n<pre><code>W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 32\nI tensorflow/core/common_runtime/direct_session.cc:83] Direct session inter op parallelism threads: 32\n        0                Unknown (from Proto)(1-cpu)   569656800   569656800 cpu\n        1                Unknown (from Proto)(1-cpu)  -569656800           0 cpu\n        2               W_1/Initializer/Const(2-cpu)   569656800   569656800 cpu\n        3                Unknown (from Proto)(3-cpu)        3600   569660400 cpu\n        4                Unknown (from Proto)(3-cpu)       -3600   569656800 cpu\n        5               b_1/Initializer/Const(4-cpu)        3600   569660400 cpu\n        6                Unknown (from Proto)(5-cpu)     3600000   573260400 cpu\n        7                Unknown (from Proto)(5-cpu)    -3600000   569660400 cpu\n        8               W_2/Initializer/Const(6-cpu)     3600000   573260400 cpu\n        9                Unknown (from Proto)(7-cpu)        4000   573264400 cpu\n       10                Unknown (from Proto)(7-cpu)       -4000   573260400 cpu\n       11               b_2/Initializer/Const(8-cpu)        4000   573264400 cpu\n       12                Unknown (from Proto)(9-cpu)        4000   573268400 cpu\n       13                Unknown (from Proto)(9-cpu)       -4000   573264400 cpu\n       14              W_3/Initializer/Const(10-cpu)        4000   573268400 cpu\n       25               Unknown (from Proto)(13-cpu)   569656800  1142925200 cpu\n       26               Unknown (from Proto)(13-cpu)  -569656800   573268400 cpu\n       28               Unknown (from Proto)(14-cpu)        3600   573272000 cpu\n       29               Unknown (from Proto)(14-cpu)       -3600   573268400 cpu\n       31                         b_1/Assign(16-cpu)        3600   573272000 cpu\n       32                         W_1/Assign(17-cpu)   569656800  1142928800 cpu\n       34               Unknown (from Proto)(15-cpu)     3600000  1146528800 cpu\n       35               Unknown (from Proto)(15-cpu)    -3600000  1142928800 cpu\n       37               Unknown (from Proto)(18-cpu)        4000  1142932800 cpu\n       38               Unknown (from Proto)(18-cpu)       -4000  1142928800 cpu\n       40               Unknown (from Proto)(19-cpu)        4000  1142932800 cpu\n       41               Unknown (from Proto)(19-cpu)       -4000  1142928800 cpu\n       48                         W_2/Assign(22-cpu)     3600000  1146528800 cpu\n       49                         b_2/Assign(23-cpu)        4000  1146532800 cpu\n       52                         W_3/Assign(24-cpu)        4000  1146536800 cpu\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 2 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 4 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 8 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 10 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 12 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 17 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 16 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 23 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 21 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 22 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 24 allocator_name: \"cpu\" }\n</code></pre>\n<h3>Compiled</h3>\n<pre><code>I tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 32\nI tensorflow/core/common_runtime/direct_session.cc:83] Direct session inter op parallelism threads: 32\n        0                Unknown (from Proto)(1-cpu)   569656800   569656800 cpu\n        1                Unknown (from Proto)(1-cpu)  -569656800           0 cpu\n        2               W_1/Initializer/Const(2-cpu)   569656800   569656800 cpu\n        3                Unknown (from Proto)(3-cpu)        3600   569660400 cpu\n        4                Unknown (from Proto)(3-cpu)       -3600   569656800 cpu\n        5               b_1/Initializer/Const(4-cpu)        3600   569660400 cpu\n        6                Unknown (from Proto)(5-cpu)     3600000   573260400 cpu\n        7                Unknown (from Proto)(5-cpu)    -3600000   569660400 cpu\n        8               W_2/Initializer/Const(6-cpu)     3600000   573260400 cpu\n        9                Unknown (from Proto)(7-cpu)        4000   573264400 cpu\n       10                Unknown (from Proto)(7-cpu)       -4000   573260400 cpu\n       11               b_2/Initializer/Const(8-cpu)        4000   573264400 cpu\n       12                Unknown (from Proto)(9-cpu)        4000   573268400 cpu\n       13                Unknown (from Proto)(9-cpu)       -4000   573264400 cpu\n       14              W_3/Initializer/Const(10-cpu)        4000   573268400 cpu\n       25               Unknown (from Proto)(13-cpu)   569656800  1142925200 cpu\n       26               Unknown (from Proto)(13-cpu)  -569656800   573268400 cpu\n       28               Unknown (from Proto)(14-cpu)        3600   573272000 cpu\n       29               Unknown (from Proto)(14-cpu)       -3600   573268400 cpu\n       31                         b_1/Assign(16-cpu)        3600   573272000 cpu\n       32                         W_1/Assign(17-cpu)   569656800  1142928800 cpu\n       34               Unknown (from Proto)(15-cpu)     3600000  1146528800 cpu\n       35               Unknown (from Proto)(15-cpu)    -3600000  1142928800 cpu\n       37               Unknown (from Proto)(18-cpu)        4000  1142932800 cpu\n       38               Unknown (from Proto)(18-cpu)       -4000  1142928800 cpu\n       40               Unknown (from Proto)(19-cpu)        4000  1142932800 cpu\n       41               Unknown (from Proto)(19-cpu)       -4000  1142928800 cpu\n       48                         W_2/Assign(22-cpu)     3600000  1146528800 cpu\n       49                         b_2/Assign(23-cpu)        4000  1146532800 cpu\n       51                         W_3/Assign(24-cpu)        4000  1146536800 cpu\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 2 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 4 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 8 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 10 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 12 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 21 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 24 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 22 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 17 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 23 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 16 allocator_name: \"cpu\" }\n</code></pre>\n<p>This is the script I used for testing:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> memory_util\nmemory_util.vlog(<span class=\"pl-c1\">1</span>)\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">get_layer</span>(<span class=\"pl-smi\">input_size</span>, <span class=\"pl-smi\">output_size</span>, <span class=\"pl-smi\">name</span>):\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> supposedly loaded from a saved file</span>\n    W_val <span class=\"pl-k\">=</span> np.random.normal(<span class=\"pl-v\">scale</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.1</span>, <span class=\"pl-v\">size</span><span class=\"pl-k\">=</span>(input_size, output_size)).astype(np.float32)\n    W <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>W_<span class=\"pl-c1\">{}</span><span class=\"pl-pds\">'</span></span>.format(name), <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(input_size, output_size),\n                        <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>tf.constant_initializer(<span class=\"pl-v\">value</span><span class=\"pl-k\">=</span>W_val, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32),\n                        <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n    b <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>b_<span class=\"pl-c1\">{}</span><span class=\"pl-pds\">'</span></span>.format(name), <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(output_size,),\n                        <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>tf.constant_initializer(<span class=\"pl-v\">value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.1</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32),\n                        <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n    <span class=\"pl-k\">return</span> W, b\n\n\ng <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> g.as_default():\n    W1, b1 <span class=\"pl-k\">=</span> get_layer(<span class=\"pl-c1\">158238</span>, <span class=\"pl-c1\">900</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1<span class=\"pl-pds\">'</span></span>)\n    W2, b2 <span class=\"pl-k\">=</span> get_layer(<span class=\"pl-c1\">900</span>, <span class=\"pl-c1\">1000</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>2<span class=\"pl-pds\">'</span></span>)\n    W3, b3 <span class=\"pl-k\">=</span> get_layer(<span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>3<span class=\"pl-pds\">'</span></span>)\n\n    init <span class=\"pl-k\">=</span> tf.global_variables_initializer()\nsession <span class=\"pl-k\">=</span> tf.Session(<span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>g)\n<span class=\"pl-k\">with</span> memory_util.capture_stderr() <span class=\"pl-k\">as</span> stderr:\n    session.run(init)\nmemory_util.print_memory_timeline(stderr, <span class=\"pl-v\">ignore_less_than_bytes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1000</span>)</pre></div>\n<p>Are there any updates on this issue? Has anyone been able to reproduce it?</p>", "body_text": "After seeing #9823 (not sure if related to this), I tried the memory_util script suggested by @yaroslavvb but the output is pretty much the same for both environments:\nBinary\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 32\nI tensorflow/core/common_runtime/direct_session.cc:83] Direct session inter op parallelism threads: 32\n        0                Unknown (from Proto)(1-cpu)   569656800   569656800 cpu\n        1                Unknown (from Proto)(1-cpu)  -569656800           0 cpu\n        2               W_1/Initializer/Const(2-cpu)   569656800   569656800 cpu\n        3                Unknown (from Proto)(3-cpu)        3600   569660400 cpu\n        4                Unknown (from Proto)(3-cpu)       -3600   569656800 cpu\n        5               b_1/Initializer/Const(4-cpu)        3600   569660400 cpu\n        6                Unknown (from Proto)(5-cpu)     3600000   573260400 cpu\n        7                Unknown (from Proto)(5-cpu)    -3600000   569660400 cpu\n        8               W_2/Initializer/Const(6-cpu)     3600000   573260400 cpu\n        9                Unknown (from Proto)(7-cpu)        4000   573264400 cpu\n       10                Unknown (from Proto)(7-cpu)       -4000   573260400 cpu\n       11               b_2/Initializer/Const(8-cpu)        4000   573264400 cpu\n       12                Unknown (from Proto)(9-cpu)        4000   573268400 cpu\n       13                Unknown (from Proto)(9-cpu)       -4000   573264400 cpu\n       14              W_3/Initializer/Const(10-cpu)        4000   573268400 cpu\n       25               Unknown (from Proto)(13-cpu)   569656800  1142925200 cpu\n       26               Unknown (from Proto)(13-cpu)  -569656800   573268400 cpu\n       28               Unknown (from Proto)(14-cpu)        3600   573272000 cpu\n       29               Unknown (from Proto)(14-cpu)       -3600   573268400 cpu\n       31                         b_1/Assign(16-cpu)        3600   573272000 cpu\n       32                         W_1/Assign(17-cpu)   569656800  1142928800 cpu\n       34               Unknown (from Proto)(15-cpu)     3600000  1146528800 cpu\n       35               Unknown (from Proto)(15-cpu)    -3600000  1142928800 cpu\n       37               Unknown (from Proto)(18-cpu)        4000  1142932800 cpu\n       38               Unknown (from Proto)(18-cpu)       -4000  1142928800 cpu\n       40               Unknown (from Proto)(19-cpu)        4000  1142932800 cpu\n       41               Unknown (from Proto)(19-cpu)       -4000  1142928800 cpu\n       48                         W_2/Assign(22-cpu)     3600000  1146528800 cpu\n       49                         b_2/Assign(23-cpu)        4000  1146532800 cpu\n       52                         W_3/Assign(24-cpu)        4000  1146536800 cpu\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 2 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 4 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 8 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 10 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 12 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 17 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 16 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 23 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 21 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 22 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 24 allocator_name: \"cpu\" }\n\nCompiled\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 32\nI tensorflow/core/common_runtime/direct_session.cc:83] Direct session inter op parallelism threads: 32\n        0                Unknown (from Proto)(1-cpu)   569656800   569656800 cpu\n        1                Unknown (from Proto)(1-cpu)  -569656800           0 cpu\n        2               W_1/Initializer/Const(2-cpu)   569656800   569656800 cpu\n        3                Unknown (from Proto)(3-cpu)        3600   569660400 cpu\n        4                Unknown (from Proto)(3-cpu)       -3600   569656800 cpu\n        5               b_1/Initializer/Const(4-cpu)        3600   569660400 cpu\n        6                Unknown (from Proto)(5-cpu)     3600000   573260400 cpu\n        7                Unknown (from Proto)(5-cpu)    -3600000   569660400 cpu\n        8               W_2/Initializer/Const(6-cpu)     3600000   573260400 cpu\n        9                Unknown (from Proto)(7-cpu)        4000   573264400 cpu\n       10                Unknown (from Proto)(7-cpu)       -4000   573260400 cpu\n       11               b_2/Initializer/Const(8-cpu)        4000   573264400 cpu\n       12                Unknown (from Proto)(9-cpu)        4000   573268400 cpu\n       13                Unknown (from Proto)(9-cpu)       -4000   573264400 cpu\n       14              W_3/Initializer/Const(10-cpu)        4000   573268400 cpu\n       25               Unknown (from Proto)(13-cpu)   569656800  1142925200 cpu\n       26               Unknown (from Proto)(13-cpu)  -569656800   573268400 cpu\n       28               Unknown (from Proto)(14-cpu)        3600   573272000 cpu\n       29               Unknown (from Proto)(14-cpu)       -3600   573268400 cpu\n       31                         b_1/Assign(16-cpu)        3600   573272000 cpu\n       32                         W_1/Assign(17-cpu)   569656800  1142928800 cpu\n       34               Unknown (from Proto)(15-cpu)     3600000  1146528800 cpu\n       35               Unknown (from Proto)(15-cpu)    -3600000  1142928800 cpu\n       37               Unknown (from Proto)(18-cpu)        4000  1142932800 cpu\n       38               Unknown (from Proto)(18-cpu)       -4000  1142928800 cpu\n       40               Unknown (from Proto)(19-cpu)        4000  1142932800 cpu\n       41               Unknown (from Proto)(19-cpu)       -4000  1142928800 cpu\n       48                         W_2/Assign(22-cpu)     3600000  1146528800 cpu\n       49                         b_2/Assign(23-cpu)        4000  1146532800 cpu\n       51                         W_3/Assign(24-cpu)        4000  1146536800 cpu\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 2 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 4 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 8 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 10 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 12 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 21 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 24 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 22 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 17 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 23 allocator_name: \"cpu\" }\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 16 allocator_name: \"cpu\" }\n\nThis is the script I used for testing:\nimport memory_util\nmemory_util.vlog(1)\nimport numpy as np\nimport tensorflow as tf\n\n\ndef get_layer(input_size, output_size, name):\n    # supposedly loaded from a saved file\n    W_val = np.random.normal(scale=0.1, size=(input_size, output_size)).astype(np.float32)\n    W = tf.get_variable(name='W_{}'.format(name), shape=(input_size, output_size),\n                        initializer=tf.constant_initializer(value=W_val, dtype=tf.float32),\n                        dtype=tf.float32)\n    b = tf.get_variable(name='b_{}'.format(name), shape=(output_size,),\n                        initializer=tf.constant_initializer(value=0.1, dtype=tf.float32),\n                        dtype=tf.float32)\n    return W, b\n\n\ng = tf.Graph()\nwith g.as_default():\n    W1, b1 = get_layer(158238, 900, '1')\n    W2, b2 = get_layer(900, 1000, '2')\n    W3, b3 = get_layer(1000, 1, '3')\n\n    init = tf.global_variables_initializer()\nsession = tf.Session(graph=g)\nwith memory_util.capture_stderr() as stderr:\n    session.run(init)\nmemory_util.print_memory_timeline(stderr, ignore_less_than_bytes=1000)\nAre there any updates on this issue? Has anyone been able to reproduce it?", "body": "After seeing #9823 (not sure if related to this), I tried the memory_util script suggested by @yaroslavvb but the output is pretty much the same for both environments:\r\n\r\n### Binary\r\n```\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 32\r\nI tensorflow/core/common_runtime/direct_session.cc:83] Direct session inter op parallelism threads: 32\r\n        0                Unknown (from Proto)(1-cpu)   569656800   569656800 cpu\r\n        1                Unknown (from Proto)(1-cpu)  -569656800           0 cpu\r\n        2               W_1/Initializer/Const(2-cpu)   569656800   569656800 cpu\r\n        3                Unknown (from Proto)(3-cpu)        3600   569660400 cpu\r\n        4                Unknown (from Proto)(3-cpu)       -3600   569656800 cpu\r\n        5               b_1/Initializer/Const(4-cpu)        3600   569660400 cpu\r\n        6                Unknown (from Proto)(5-cpu)     3600000   573260400 cpu\r\n        7                Unknown (from Proto)(5-cpu)    -3600000   569660400 cpu\r\n        8               W_2/Initializer/Const(6-cpu)     3600000   573260400 cpu\r\n        9                Unknown (from Proto)(7-cpu)        4000   573264400 cpu\r\n       10                Unknown (from Proto)(7-cpu)       -4000   573260400 cpu\r\n       11               b_2/Initializer/Const(8-cpu)        4000   573264400 cpu\r\n       12                Unknown (from Proto)(9-cpu)        4000   573268400 cpu\r\n       13                Unknown (from Proto)(9-cpu)       -4000   573264400 cpu\r\n       14              W_3/Initializer/Const(10-cpu)        4000   573268400 cpu\r\n       25               Unknown (from Proto)(13-cpu)   569656800  1142925200 cpu\r\n       26               Unknown (from Proto)(13-cpu)  -569656800   573268400 cpu\r\n       28               Unknown (from Proto)(14-cpu)        3600   573272000 cpu\r\n       29               Unknown (from Proto)(14-cpu)       -3600   573268400 cpu\r\n       31                         b_1/Assign(16-cpu)        3600   573272000 cpu\r\n       32                         W_1/Assign(17-cpu)   569656800  1142928800 cpu\r\n       34               Unknown (from Proto)(15-cpu)     3600000  1146528800 cpu\r\n       35               Unknown (from Proto)(15-cpu)    -3600000  1142928800 cpu\r\n       37               Unknown (from Proto)(18-cpu)        4000  1142932800 cpu\r\n       38               Unknown (from Proto)(18-cpu)       -4000  1142928800 cpu\r\n       40               Unknown (from Proto)(19-cpu)        4000  1142932800 cpu\r\n       41               Unknown (from Proto)(19-cpu)       -4000  1142928800 cpu\r\n       48                         W_2/Assign(22-cpu)     3600000  1146528800 cpu\r\n       49                         b_2/Assign(23-cpu)        4000  1146532800 cpu\r\n       52                         W_3/Assign(24-cpu)        4000  1146536800 cpu\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 2 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 4 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 8 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 10 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 12 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 17 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 16 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 23 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 21 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 22 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 24 allocator_name: \"cpu\" }\r\n```\r\n\r\n### Compiled\r\n```\r\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 32\r\nI tensorflow/core/common_runtime/direct_session.cc:83] Direct session inter op parallelism threads: 32\r\n        0                Unknown (from Proto)(1-cpu)   569656800   569656800 cpu\r\n        1                Unknown (from Proto)(1-cpu)  -569656800           0 cpu\r\n        2               W_1/Initializer/Const(2-cpu)   569656800   569656800 cpu\r\n        3                Unknown (from Proto)(3-cpu)        3600   569660400 cpu\r\n        4                Unknown (from Proto)(3-cpu)       -3600   569656800 cpu\r\n        5               b_1/Initializer/Const(4-cpu)        3600   569660400 cpu\r\n        6                Unknown (from Proto)(5-cpu)     3600000   573260400 cpu\r\n        7                Unknown (from Proto)(5-cpu)    -3600000   569660400 cpu\r\n        8               W_2/Initializer/Const(6-cpu)     3600000   573260400 cpu\r\n        9                Unknown (from Proto)(7-cpu)        4000   573264400 cpu\r\n       10                Unknown (from Proto)(7-cpu)       -4000   573260400 cpu\r\n       11               b_2/Initializer/Const(8-cpu)        4000   573264400 cpu\r\n       12                Unknown (from Proto)(9-cpu)        4000   573268400 cpu\r\n       13                Unknown (from Proto)(9-cpu)       -4000   573264400 cpu\r\n       14              W_3/Initializer/Const(10-cpu)        4000   573268400 cpu\r\n       25               Unknown (from Proto)(13-cpu)   569656800  1142925200 cpu\r\n       26               Unknown (from Proto)(13-cpu)  -569656800   573268400 cpu\r\n       28               Unknown (from Proto)(14-cpu)        3600   573272000 cpu\r\n       29               Unknown (from Proto)(14-cpu)       -3600   573268400 cpu\r\n       31                         b_1/Assign(16-cpu)        3600   573272000 cpu\r\n       32                         W_1/Assign(17-cpu)   569656800  1142928800 cpu\r\n       34               Unknown (from Proto)(15-cpu)     3600000  1146528800 cpu\r\n       35               Unknown (from Proto)(15-cpu)    -3600000  1142928800 cpu\r\n       37               Unknown (from Proto)(18-cpu)        4000  1142932800 cpu\r\n       38               Unknown (from Proto)(18-cpu)       -4000  1142928800 cpu\r\n       40               Unknown (from Proto)(19-cpu)        4000  1142932800 cpu\r\n       41               Unknown (from Proto)(19-cpu)       -4000  1142928800 cpu\r\n       48                         W_2/Assign(22-cpu)     3600000  1146528800 cpu\r\n       49                         b_2/Assign(23-cpu)        4000  1146532800 cpu\r\n       51                         W_3/Assign(24-cpu)        4000  1146536800 cpu\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 2 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 4 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 8 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 10 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 12 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 21 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 24 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 22 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 17 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 23 allocator_name: \"cpu\" }\r\nI tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 16 allocator_name: \"cpu\" }\r\n```\r\nThis is the script I used for testing:\r\n```python\r\nimport memory_util\r\nmemory_util.vlog(1)\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\n\r\ndef get_layer(input_size, output_size, name):\r\n    # supposedly loaded from a saved file\r\n    W_val = np.random.normal(scale=0.1, size=(input_size, output_size)).astype(np.float32)\r\n    W = tf.get_variable(name='W_{}'.format(name), shape=(input_size, output_size),\r\n                        initializer=tf.constant_initializer(value=W_val, dtype=tf.float32),\r\n                        dtype=tf.float32)\r\n    b = tf.get_variable(name='b_{}'.format(name), shape=(output_size,),\r\n                        initializer=tf.constant_initializer(value=0.1, dtype=tf.float32),\r\n                        dtype=tf.float32)\r\n    return W, b\r\n\r\n\r\ng = tf.Graph()\r\nwith g.as_default():\r\n    W1, b1 = get_layer(158238, 900, '1')\r\n    W2, b2 = get_layer(900, 1000, '2')\r\n    W3, b3 = get_layer(1000, 1, '3')\r\n\r\n    init = tf.global_variables_initializer()\r\nsession = tf.Session(graph=g)\r\nwith memory_util.capture_stderr() as stderr:\r\n    session.run(init)\r\nmemory_util.print_memory_timeline(stderr, ignore_less_than_bytes=1000)\r\n```\r\n\r\nAre there any updates on this issue? Has anyone been able to reproduce it?"}