{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21437", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21437/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21437/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21437/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21437", "id": 348247309, "node_id": "MDU6SXNzdWUzNDgyNDczMDk=", "number": 21437, "title": "Resnet50 applying last pooling layer regardless pooling parameter", "user": {"login": "weishi258", "id": 869593, "node_id": "MDQ6VXNlcjg2OTU5Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/869593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weishi258", "html_url": "https://github.com/weishi258", "followers_url": "https://api.github.com/users/weishi258/followers", "following_url": "https://api.github.com/users/weishi258/following{/other_user}", "gists_url": "https://api.github.com/users/weishi258/gists{/gist_id}", "starred_url": "https://api.github.com/users/weishi258/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weishi258/subscriptions", "organizations_url": "https://api.github.com/users/weishi258/orgs", "repos_url": "https://api.github.com/users/weishi258/repos", "events_url": "https://api.github.com/users/weishi258/events{/privacy}", "received_events_url": "https://api.github.com/users/weishi258/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-07T09:48:35Z", "updated_at": "2018-08-07T09:54:29Z", "closed_at": "2018-08-07T09:54:29Z", "author_association": "NONE", "body_html": "<h3>Describe the problem</h3>\n<p>Resnet50.py apply pooling at last layer regardless pooling parameter.</p>\n<h3>Source code / logs</h3>\n<p>Current:<br>\nx = AveragePooling2D((7, 7), name='avg_pool')(x)<br>\nif include_top:<br>\nx = Flatten()(x)<br>\nx = Dense(classes, activation='softmax', name='fc1000')(x)<br>\nelse:<br>\nif pooling == 'avg':<br>\nx = GlobalAveragePooling2D()(x)<br>\nelif pooling == 'max':<br>\nx = GlobalMaxPooling2D()(x)<br>\nFix:<br>\nif include_top:<br>\nx = AveragePooling2D((7, 7), name='avg_pool')(x)<br>\nx = Flatten()(x)<br>\nx = Dense(classes, activation='softmax', name='fc1000')(x)<br>\nelse:<br>\nif pooling == 'avg':<br>\nx = GlobalAveragePooling2D()(x)<br>\nelif pooling == 'max':<br>\nx = GlobalMaxPooling2D()(x)</p>", "body_text": "Describe the problem\nResnet50.py apply pooling at last layer regardless pooling parameter.\nSource code / logs\nCurrent:\nx = AveragePooling2D((7, 7), name='avg_pool')(x)\nif include_top:\nx = Flatten()(x)\nx = Dense(classes, activation='softmax', name='fc1000')(x)\nelse:\nif pooling == 'avg':\nx = GlobalAveragePooling2D()(x)\nelif pooling == 'max':\nx = GlobalMaxPooling2D()(x)\nFix:\nif include_top:\nx = AveragePooling2D((7, 7), name='avg_pool')(x)\nx = Flatten()(x)\nx = Dense(classes, activation='softmax', name='fc1000')(x)\nelse:\nif pooling == 'avg':\nx = GlobalAveragePooling2D()(x)\nelif pooling == 'max':\nx = GlobalMaxPooling2D()(x)", "body": "### Describe the problem\r\nResnet50.py apply pooling at last layer regardless pooling parameter.\r\n\r\n### Source code / logs\r\nCurrent:\r\n  x = AveragePooling2D((7, 7), name='avg_pool')(x)\r\n  if include_top:\r\n    x = Flatten()(x)\r\n    x = Dense(classes, activation='softmax', name='fc1000')(x)\r\n  else:\r\n    if pooling == 'avg':\r\n      x = GlobalAveragePooling2D()(x)\r\n    elif pooling == 'max':\r\n      x = GlobalMaxPooling2D()(x)\r\nFix:\r\n  if include_top:\r\n    x = AveragePooling2D((7, 7), name='avg_pool')(x)\r\n    x = Flatten()(x)\r\n    x = Dense(classes, activation='softmax', name='fc1000')(x)\r\n  else:\r\n    if pooling == 'avg':\r\n      x = GlobalAveragePooling2D()(x)\r\n    elif pooling == 'max':\r\n      x = GlobalMaxPooling2D()(x)"}