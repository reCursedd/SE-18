{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/293105519", "html_url": "https://github.com/tensorflow/tensorflow/pull/8906#issuecomment-293105519", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8906", "id": 293105519, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzEwNTUxOQ==", "user": {"login": "vincentvanhoucke", "id": 15737127, "node_id": "MDQ6VXNlcjE1NzM3MTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/15737127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentvanhoucke", "html_url": "https://github.com/vincentvanhoucke", "followers_url": "https://api.github.com/users/vincentvanhoucke/followers", "following_url": "https://api.github.com/users/vincentvanhoucke/following{/other_user}", "gists_url": "https://api.github.com/users/vincentvanhoucke/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentvanhoucke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentvanhoucke/subscriptions", "organizations_url": "https://api.github.com/users/vincentvanhoucke/orgs", "repos_url": "https://api.github.com/users/vincentvanhoucke/repos", "events_url": "https://api.github.com/users/vincentvanhoucke/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentvanhoucke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-10T23:16:10Z", "updated_at": "2017-04-10T23:16:10Z", "author_association": "MEMBER", "body_html": "<p>This seems sane given the lack of GPU implementation of <code>reduce_prod</code>. On cursory inspection it doesn't seem that it would cause a memory increase. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a> back when this code was conceived, using <code>reduce_mean</code> was way slower than <code>reduce_sum</code> followed by a normalization step. No longer an issue?</p>", "body_text": "This seems sane given the lack of GPU implementation of reduce_prod. On cursory inspection it doesn't seem that it would cause a memory increase. @benoitsteiner back when this code was conceived, using reduce_mean was way slower than reduce_sum followed by a normalization step. No longer an issue?", "body": "This seems sane given the lack of GPU implementation of `reduce_prod`. On cursory inspection it doesn't seem that it would cause a memory increase. @benoitsteiner back when this code was conceived, using `reduce_mean` was way slower than `reduce_sum` followed by a normalization step. No longer an issue?"}