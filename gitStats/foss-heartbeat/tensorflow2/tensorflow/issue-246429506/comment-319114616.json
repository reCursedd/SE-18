{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/319114616", "html_url": "https://github.com/tensorflow/tensorflow/issues/11856#issuecomment-319114616", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11856", "id": 319114616, "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTExNDYxNg==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-31T16:00:29Z", "updated_at": "2017-07-31T16:00:29Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">I think it should be safe to always call read_value when you reference the\nvariable. Indeed I do this in resource variables which do not have this bug\nand for which a scatter_add operation exists (resource_scatter_add). I do\nnot understand what's the remaining issue here.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Sun, Jul 30, 2017 at 9:12 AM, Yaroslav Bulatov ***@***.***&gt; wrote:\n <a class=\"user-mention\" href=\"https://github.com/chihuahua\">@chihuahua</a> &lt;<a href=\"https://github.com/chihuahua\">https://github.com/chihuahua</a>&gt; replacing the line with tf.assign(v,\n v.read_value() + 1) will refer to the proper read node.\n\n The issue is that the tensor is retrieved from _snapshot in AsTensor\n &lt;<a href=\"https://github.com/tensorflow/tensorflow/blob/faf7c32ab27dad24d2d806a16d1371ecb4671fc8/tensorflow/python/ops/variables.py#L367\">https://github.com/tensorflow/tensorflow/blob/faf7c32ab27dad24d2d806a16d1371ecb4671fc8/tensorflow/python/ops/variables.py#L367</a>&gt;\n which is initialized during variable construction. One might modify\n AsTensor to check whether you are inside any active context managers for\n control dependencies, and if so, create a new read node read_value rather\n than referring to the snapshot. That might get complicated (ie, what if\n someone is inside control dependency context referring to variable in a\n long loop? That explodes the graph)\n\n \u2014\n You are receiving this because you were assigned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"246429506\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11856\" href=\"https://github.com/tensorflow/tensorflow/issues/11856#issuecomment-318911787\">#11856 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxf0HNbhFj4pMoZpNRxDLTJTDa_Kzks5sTKtjgaJpZM4Om9Cy\">https://github.com/notifications/unsubscribe-auth/AAATxf0HNbhFj4pMoZpNRxDLTJTDa_Kzks5sTKtjgaJpZM4Om9Cy</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "I think it should be safe to always call read_value when you reference the\nvariable. Indeed I do this in resource variables which do not have this bug\nand for which a scatter_add operation exists (resource_scatter_add). I do\nnot understand what's the remaining issue here.\n\u2026\nOn Sun, Jul 30, 2017 at 9:12 AM, Yaroslav Bulatov ***@***.***> wrote:\n @chihuahua <https://github.com/chihuahua> replacing the line with tf.assign(v,\n v.read_value() + 1) will refer to the proper read node.\n\n The issue is that the tensor is retrieved from _snapshot in AsTensor\n <https://github.com/tensorflow/tensorflow/blob/faf7c32ab27dad24d2d806a16d1371ecb4671fc8/tensorflow/python/ops/variables.py#L367>\n which is initialized during variable construction. One might modify\n AsTensor to check whether you are inside any active context managers for\n control dependencies, and if so, create a new read node read_value rather\n than referring to the snapshot. That might get complicated (ie, what if\n someone is inside control dependency context referring to variable in a\n long loop? That explodes the graph)\n\n \u2014\n You are receiving this because you were assigned.\n Reply to this email directly, view it on GitHub\n <#11856 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxf0HNbhFj4pMoZpNRxDLTJTDa_Kzks5sTKtjgaJpZM4Om9Cy>\n .\n\n\n-- \n - Alex", "body": "I think it should be safe to always call read_value when you reference the\nvariable. Indeed I do this in resource variables which do not have this bug\nand for which a scatter_add operation exists (resource_scatter_add). I do\nnot understand what's the remaining issue here.\n\nOn Sun, Jul 30, 2017 at 9:12 AM, Yaroslav Bulatov <notifications@github.com>\nwrote:\n\n> @chihuahua <https://github.com/chihuahua> replacing the line with tf.assign(v,\n> v.read_value() + 1) will refer to the proper read node.\n>\n> The issue is that the tensor is retrieved from _snapshot in AsTensor\n> <https://github.com/tensorflow/tensorflow/blob/faf7c32ab27dad24d2d806a16d1371ecb4671fc8/tensorflow/python/ops/variables.py#L367>\n> which is initialized during variable construction. One might modify\n> AsTensor to check whether you are inside any active context managers for\n> control dependencies, and if so, create a new read node read_value rather\n> than referring to the snapshot. That might get complicated (ie, what if\n> someone is inside control dependency context referring to variable in a\n> long loop? That explodes the graph)\n>\n> \u2014\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/11856#issuecomment-318911787>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxf0HNbhFj4pMoZpNRxDLTJTDa_Kzks5sTKtjgaJpZM4Om9Cy>\n> .\n>\n\n\n\n-- \n - Alex\n"}