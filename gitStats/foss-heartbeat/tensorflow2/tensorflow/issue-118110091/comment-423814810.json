{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/423814810", "html_url": "https://github.com/tensorflow/tensorflow/issues/312#issuecomment-423814810", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/312", "id": 423814810, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzgxNDgxMA==", "user": {"login": "BoyuanJiang", "id": 16739780, "node_id": "MDQ6VXNlcjE2NzM5Nzgw", "avatar_url": "https://avatars0.githubusercontent.com/u/16739780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoyuanJiang", "html_url": "https://github.com/BoyuanJiang", "followers_url": "https://api.github.com/users/BoyuanJiang/followers", "following_url": "https://api.github.com/users/BoyuanJiang/following{/other_user}", "gists_url": "https://api.github.com/users/BoyuanJiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoyuanJiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoyuanJiang/subscriptions", "organizations_url": "https://api.github.com/users/BoyuanJiang/orgs", "repos_url": "https://api.github.com/users/BoyuanJiang/repos", "events_url": "https://api.github.com/users/BoyuanJiang/events{/privacy}", "received_events_url": "https://api.github.com/users/BoyuanJiang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-23T12:58:52Z", "updated_at": "2018-09-23T12:58:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The following codes work for me:</p>\n<pre><code>init_assign_op, init_feed_dict = slim.assign_from_checkpoint(\n            checkpoint_path, slim.get_variables_to_restore(), ignore_missing_vars=True)\nsess.run(init_assign_op, feed_dict=init_feed_dict)\n</code></pre>", "body_text": "The following codes work for me:\ninit_assign_op, init_feed_dict = slim.assign_from_checkpoint(\n            checkpoint_path, slim.get_variables_to_restore(), ignore_missing_vars=True)\nsess.run(init_assign_op, feed_dict=init_feed_dict)", "body": "The following codes work for me:\r\n```\r\ninit_assign_op, init_feed_dict = slim.assign_from_checkpoint(\r\n            checkpoint_path, slim.get_variables_to_restore(), ignore_missing_vars=True)\r\nsess.run(init_assign_op, feed_dict=init_feed_dict)\r\n```"}