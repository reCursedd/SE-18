{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14633", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14633/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14633/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14633/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14633", "id": 274632898, "node_id": "MDU6SXNzdWUyNzQ2MzI4OTg=", "number": 14633, "title": "[FEATURE REQUEST] Report uninitialized data iterators.", "user": {"login": "awav", "id": 24483645, "node_id": "MDQ6VXNlcjI0NDgzNjQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/24483645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awav", "html_url": "https://github.com/awav", "followers_url": "https://api.github.com/users/awav/followers", "following_url": "https://api.github.com/users/awav/following{/other_user}", "gists_url": "https://api.github.com/users/awav/gists{/gist_id}", "starred_url": "https://api.github.com/users/awav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awav/subscriptions", "organizations_url": "https://api.github.com/users/awav/orgs", "repos_url": "https://api.github.com/users/awav/repos", "events_url": "https://api.github.com/users/awav/events{/privacy}", "received_events_url": "https://api.github.com/users/awav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-16T19:20:00Z", "updated_at": "2017-12-13T14:46:41Z", "closed_at": "2017-12-12T21:35:16Z", "author_association": "NONE", "body_html": "<p>At <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"274601469\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/GPflow/GPflow/issues/561\" data-hovercard-type=\"issue\" data-hovercard-url=\"/GPflow/GPflow/issues/561/hovercard\" href=\"https://github.com/GPflow/GPflow/issues/561\">GPflow/GPflow#561</a> we found that, iterators are not variables :), therefore <code>report_uninitalized_variables</code> fails with:</p>\n<pre><code>...\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/state_ops.py in is_variable_initialized(ref, name)\n    182     A `Tensor` of type `bool`.\n    183   \"\"\"\n--&gt; 184   if ref.dtype._is_ref_dtype:\n    185     return gen_state_ops.is_variable_initialized(ref=ref, name=name)\n    186   # Handle resource variables.\n\nAttributeError: 'Iterator' object has no attribute 'dtype'\n</code></pre>\n<pre><code>import numpy as np\nfrom tensorflow import data\nDataset = data.Dataset\npl = tf.placeholder(tf.float32)\ndata = Dataset.from_tensor_slices(pl)\niterator = data.make_initializable_iterator()\nbatch = iterator.get_next()\n\n## In fact it fails for TensorFlow 1.3 and 1.4\nsess.run(tf.report_uninitialized_variables([iterator]))\n</code></pre>\n<p>Frankly, it must be very easy to adapt <code>report_unitialized_variables</code> to report data's unitialized iterators. This would be helpful to avoid re-initializing datasets each time when we call <code>session.run</code> in GPflow. Right now, it provides initializing by demand feature.</p>\n<p>Best,<br>\nArtem Artemev</p>", "body_text": "At GPflow/GPflow#561 we found that, iterators are not variables :), therefore report_uninitalized_variables fails with:\n...\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/state_ops.py in is_variable_initialized(ref, name)\n    182     A `Tensor` of type `bool`.\n    183   \"\"\"\n--> 184   if ref.dtype._is_ref_dtype:\n    185     return gen_state_ops.is_variable_initialized(ref=ref, name=name)\n    186   # Handle resource variables.\n\nAttributeError: 'Iterator' object has no attribute 'dtype'\n\nimport numpy as np\nfrom tensorflow import data\nDataset = data.Dataset\npl = tf.placeholder(tf.float32)\ndata = Dataset.from_tensor_slices(pl)\niterator = data.make_initializable_iterator()\nbatch = iterator.get_next()\n\n## In fact it fails for TensorFlow 1.3 and 1.4\nsess.run(tf.report_uninitialized_variables([iterator]))\n\nFrankly, it must be very easy to adapt report_unitialized_variables to report data's unitialized iterators. This would be helpful to avoid re-initializing datasets each time when we call session.run in GPflow. Right now, it provides initializing by demand feature.\nBest,\nArtem Artemev", "body": "At https://github.com/GPflow/GPflow/issues/561 we found that, iterators are not variables :), therefore `report_uninitalized_variables` fails with:\r\n\r\n```\r\n...\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/state_ops.py in is_variable_initialized(ref, name)\r\n    182     A `Tensor` of type `bool`.\r\n    183   \"\"\"\r\n--> 184   if ref.dtype._is_ref_dtype:\r\n    185     return gen_state_ops.is_variable_initialized(ref=ref, name=name)\r\n    186   # Handle resource variables.\r\n\r\nAttributeError: 'Iterator' object has no attribute 'dtype'\r\n```\r\n\r\n```\r\nimport numpy as np\r\nfrom tensorflow import data\r\nDataset = data.Dataset\r\npl = tf.placeholder(tf.float32)\r\ndata = Dataset.from_tensor_slices(pl)\r\niterator = data.make_initializable_iterator()\r\nbatch = iterator.get_next()\r\n\r\n## In fact it fails for TensorFlow 1.3 and 1.4\r\nsess.run(tf.report_uninitialized_variables([iterator]))\r\n```\r\n\r\nFrankly, it must be very easy to adapt `report_unitialized_variables` to report data's unitialized iterators. This would be helpful to avoid re-initializing datasets each time when we call `session.run` in GPflow. Right now, it provides initializing by demand feature.\r\n\r\nBest,\r\nArtem Artemev"}