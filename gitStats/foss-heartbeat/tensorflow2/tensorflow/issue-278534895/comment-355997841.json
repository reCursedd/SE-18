{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/355997841", "html_url": "https://github.com/tensorflow/tensorflow/issues/15044#issuecomment-355997841", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15044", "id": 355997841, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTk5Nzg0MQ==", "user": {"login": "carlthome", "id": 1595907, "node_id": "MDQ6VXNlcjE1OTU5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1595907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlthome", "html_url": "https://github.com/carlthome", "followers_url": "https://api.github.com/users/carlthome/followers", "following_url": "https://api.github.com/users/carlthome/following{/other_user}", "gists_url": "https://api.github.com/users/carlthome/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlthome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlthome/subscriptions", "organizations_url": "https://api.github.com/users/carlthome/orgs", "repos_url": "https://api.github.com/users/carlthome/repos", "events_url": "https://api.github.com/users/carlthome/events{/privacy}", "received_events_url": "https://api.github.com/users/carlthome/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-08T15:28:25Z", "updated_at": "2018-03-14T01:43:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Status?</p>\n<p>I did something like this via <code>tf.contrib.signal</code> for flat_map but it would be nice to have sliding windows builtin in <code>tf.data</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">window</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">width</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">16</span>, <span class=\"pl-smi\">step</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">4</span>, <span class=\"pl-smi\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>):\n    x <span class=\"pl-k\">=</span> tf.contrib.signal.frame(x, width, step, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span>axis)\n    n <span class=\"pl-k\">=</span> tf.shape(x, <span class=\"pl-v\">out_type</span><span class=\"pl-k\">=</span>tf.int64)[axis <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>]\n    <span class=\"pl-k\">return</span> tf.data.Dataset.range(n).map(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">i</span>: tf.gather(x, i, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span>axis <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>))</pre></div>", "body_text": "Status?\nI did something like this via tf.contrib.signal for flat_map but it would be nice to have sliding windows builtin in tf.data:\ndef window(x, width=16, step=4, axis=-1):\n    x = tf.contrib.signal.frame(x, width, step, axis=axis)\n    n = tf.shape(x, out_type=tf.int64)[axis - 1]\n    return tf.data.Dataset.range(n).map(lambda i: tf.gather(x, i, axis=axis - 1))", "body": "Status?\r\n\r\nI did something like this via `tf.contrib.signal` for flat_map but it would be nice to have sliding windows builtin in `tf.data`:\r\n```python\r\ndef window(x, width=16, step=4, axis=-1):\r\n    x = tf.contrib.signal.frame(x, width, step, axis=axis)\r\n    n = tf.shape(x, out_type=tf.int64)[axis - 1]\r\n    return tf.data.Dataset.range(n).map(lambda i: tf.gather(x, i, axis=axis - 1))\r\n```\r\n  "}