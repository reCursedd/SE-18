{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288812075", "html_url": "https://github.com/tensorflow/tensorflow/issues/6184#issuecomment-288812075", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6184", "id": 288812075, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODgxMjA3NQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-23T18:09:43Z", "updated_at": "2017-03-23T18:09:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16323903\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tomwanzek\">@tomwanzek</a> I think the changes are fairly modest. There are two options:</p>\n<ol>\n<li>\n<p>(More principled.) Convert the Wide&amp;Deep-related ops to using <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22941064\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/guschmue\">@guschmue</a>'s newly-added <code>tf.load_library()</code> support, which will require some additions to the CMake build, similar to the ones Guenther did for <code>tf.contrib.rnn</code> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"212861464\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/8217\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/8217/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/8217\">#8217</a>.</p>\n</li>\n<li>\n<p>(Easier.) Convert the Python code in the Wide&amp;Deep libraries to use statically generated Python wrappers, rather than getting them from the return value of <code>tf.load_op_library()</code>. We've already done this for several libraries (e.g. <code>tf.contrib.tensor_forest</code> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"201366214\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6908\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/6908/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/6908\">#6908</a>).</p>\n</li>\n</ol>", "body_text": "@tomwanzek I think the changes are fairly modest. There are two options:\n\n\n(More principled.) Convert the Wide&Deep-related ops to using @guschmue's newly-added tf.load_library() support, which will require some additions to the CMake build, similar to the ones Guenther did for tf.contrib.rnn in #8217.\n\n\n(Easier.) Convert the Python code in the Wide&Deep libraries to use statically generated Python wrappers, rather than getting them from the return value of tf.load_op_library(). We've already done this for several libraries (e.g. tf.contrib.tensor_forest in #6908).", "body": "@tomwanzek I think the changes are fairly modest. There are two options:\r\n\r\n1. (More principled.) Convert the Wide&Deep-related ops to using @guschmue's newly-added `tf.load_library()` support, which will require some additions to the CMake build, similar to the ones Guenther did for `tf.contrib.rnn` in #8217.\r\n\r\n2. (Easier.) Convert the Python code in the Wide&Deep libraries to use statically generated Python wrappers, rather than getting them from the return value of `tf.load_op_library()`. We've already done this for several libraries (e.g. `tf.contrib.tensor_forest` in #6908)."}