{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/307962623", "html_url": "https://github.com/tensorflow/tensorflow/issues/10624#issuecomment-307962623", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10624", "id": 307962623, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzk2MjYyMw==", "user": {"login": "waleedka", "id": 106472, "node_id": "MDQ6VXNlcjEwNjQ3Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/106472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waleedka", "html_url": "https://github.com/waleedka", "followers_url": "https://api.github.com/users/waleedka/followers", "following_url": "https://api.github.com/users/waleedka/following{/other_user}", "gists_url": "https://api.github.com/users/waleedka/gists{/gist_id}", "starred_url": "https://api.github.com/users/waleedka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waleedka/subscriptions", "organizations_url": "https://api.github.com/users/waleedka/orgs", "repos_url": "https://api.github.com/users/waleedka/repos", "events_url": "https://api.github.com/users/waleedka/events{/privacy}", "received_events_url": "https://api.github.com/users/waleedka/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-12T23:23:27Z", "updated_at": "2017-06-12T23:23:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3530212\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sjperkins\">@sjperkins</a> Thanks for the links. If I understand the discussion there correctly, in Python 3.4+ using <code>multiprocessing.set_start_method('spawn') </code> gets around the <code>fork</code> issues. I don't know if there is a way to get the same effect on 2.7, but even if not, having it working on Python 3 is still a big win.</p>", "body_text": "@sjperkins Thanks for the links. If I understand the discussion there correctly, in Python 3.4+ using multiprocessing.set_start_method('spawn')  gets around the fork issues. I don't know if there is a way to get the same effect on 2.7, but even if not, having it working on Python 3 is still a big win.", "body": "@sjperkins Thanks for the links. If I understand the discussion there correctly, in Python 3.4+ using ```multiprocessing.set_start_method('spawn') ``` gets around the ```fork``` issues. I don't know if there is a way to get the same effect on 2.7, but even if not, having it working on Python 3 is still a big win. "}