{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/356458004", "html_url": "https://github.com/tensorflow/tensorflow/issues/15974#issuecomment-356458004", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15974", "id": 356458004, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ1ODAwNA==", "user": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-10T00:21:20Z", "updated_at": "2018-01-10T00:21:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9267365\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andreas-eberle\">@andreas-eberle</a><br>\nYou can create your graph partially based on params. something like:</p>\n<pre><code>def model_fn(..., params):\n  if params['model'] == 'all':\n   create all graph\n  elif params['model'] == 'small':\n   create small graph\n\nparams = {'model': 'all'}\nmain_estimator = tf.estimator.Estimator(model_fn, params=params)\nmain_estimator.train(...)\n\nparams = {'model': 'small'}\nsmall_estimator = tf.estimator.Estimator(model_fn, model_dir=main_estimator.model_dir, params=params)\nsmall_estimator.predict(...)\n</code></pre>\n<p>Having said that, making your prediction graph different then the graph you trained looks error prone to me.</p>", "body_text": "Hi @andreas-eberle\nYou can create your graph partially based on params. something like:\ndef model_fn(..., params):\n  if params['model'] == 'all':\n   create all graph\n  elif params['model'] == 'small':\n   create small graph\n\nparams = {'model': 'all'}\nmain_estimator = tf.estimator.Estimator(model_fn, params=params)\nmain_estimator.train(...)\n\nparams = {'model': 'small'}\nsmall_estimator = tf.estimator.Estimator(model_fn, model_dir=main_estimator.model_dir, params=params)\nsmall_estimator.predict(...)\n\nHaving said that, making your prediction graph different then the graph you trained looks error prone to me.", "body": "Hi @andreas-eberle \r\nYou can create your graph partially based on params. something like:\r\n```\r\ndef model_fn(..., params):\r\n  if params['model'] == 'all':\r\n   create all graph\r\n  elif params['model'] == 'small':\r\n   create small graph\r\n\r\nparams = {'model': 'all'}\r\nmain_estimator = tf.estimator.Estimator(model_fn, params=params)\r\nmain_estimator.train(...)\r\n\r\nparams = {'model': 'small'}\r\nsmall_estimator = tf.estimator.Estimator(model_fn, model_dir=main_estimator.model_dir, params=params)\r\nsmall_estimator.predict(...)\r\n```\r\nHaving said that, making your prediction graph different then the graph you trained looks error prone to me."}