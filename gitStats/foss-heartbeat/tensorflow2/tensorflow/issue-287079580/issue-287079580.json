{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15974", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15974/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15974/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15974/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15974", "id": 287079580, "node_id": "MDU6SXNzdWUyODcwNzk1ODA=", "number": 15974, "title": "Estimator.predict always loads model checkpoint preventing partially loading checkpoints", "user": {"login": "andreas-eberle", "id": 9267365, "node_id": "MDQ6VXNlcjkyNjczNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9267365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-eberle", "html_url": "https://github.com/andreas-eberle", "followers_url": "https://api.github.com/users/andreas-eberle/followers", "following_url": "https://api.github.com/users/andreas-eberle/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-eberle/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-eberle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-eberle/subscriptions", "organizations_url": "https://api.github.com/users/andreas-eberle/orgs", "repos_url": "https://api.github.com/users/andreas-eberle/repos", "events_url": "https://api.github.com/users/andreas-eberle/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-eberle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-09T12:56:34Z", "updated_at": "2018-11-20T09:23:17Z", "closed_at": "2018-01-10T00:21:25Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\npip</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.4</li>\n<li><strong>Python version</strong>:<br>\n3.5</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When using Tensorflow's Estimator to do predictions, the Estimator always loads the checkpoint in the model_dir. As this is done after the model_fn is called, there is no way to partially load a checkpoint for predictions. For training, I partially load the initial checkpoint in the model_fn which works fine.</p>\n<p>I also tried not specifying the model_dir for the Estimator. As the <a href=\"https://www.tensorflow.org/api_docs/python/tf/estimator/Estimator#__init__\" rel=\"nofollow\">documentation states</a>, this results in the Estimator using a temporary folder. However, as the temporary folder does not contain a checkpoint, I get the error <code>Could not find trained model in model_dir</code>.</p>\n<p>It looks like there is no way to only partially load a checkpoint for prediction. If so, please provide a way to do this. For me, this is important, because I have a large model with several outputs. For different datasets, some of the outputs have different sizes. However, some of them are the same for all datasets. That's why I want to load them with the same code and only partially, because I don't need to load and run the whole network for this prediction.</p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 10\nTensorFlow installed from (source or binary):\npip\nTensorFlow version (use command below):\n1.4\nPython version:\n3.5\n\nDescribe the problem\nWhen using Tensorflow's Estimator to do predictions, the Estimator always loads the checkpoint in the model_dir. As this is done after the model_fn is called, there is no way to partially load a checkpoint for predictions. For training, I partially load the initial checkpoint in the model_fn which works fine.\nI also tried not specifying the model_dir for the Estimator. As the documentation states, this results in the Estimator using a temporary folder. However, as the temporary folder does not contain a checkpoint, I get the error Could not find trained model in model_dir.\nIt looks like there is no way to only partially load a checkpoint for prediction. If so, please provide a way to do this. For me, this is important, because I have a large model with several outputs. For different datasets, some of the outputs have different sizes. However, some of them are the same for all datasets. That's why I want to load them with the same code and only partially, because I don't need to load and run the whole network for this prediction.", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 10\r\n- **TensorFlow installed from (source or binary)**:\r\npip\r\n- **TensorFlow version (use command below)**:\r\n1.4\r\n- **Python version**: \r\n3.5\r\n\r\n### Describe the problem\r\nWhen using Tensorflow's Estimator to do predictions, the Estimator always loads the checkpoint in the model_dir. As this is done after the model_fn is called, there is no way to partially load a checkpoint for predictions. For training, I partially load the initial checkpoint in the model_fn which works fine.\r\n\r\nI also tried not specifying the model_dir for the Estimator. As the [documentation states](https://www.tensorflow.org/api_docs/python/tf/estimator/Estimator#__init__), this results in the Estimator using a temporary folder. However, as the temporary folder does not contain a checkpoint, I get the error `Could not find trained model in model_dir`.\r\n\r\nIt looks like there is no way to only partially load a checkpoint for prediction. If so, please provide a way to do this. For me, this is important, because I have a large model with several outputs. For different datasets, some of the outputs have different sizes. However, some of them are the same for all datasets. That's why I want to load them with the same code and only partially, because I don't need to load and run the whole network for this prediction. "}