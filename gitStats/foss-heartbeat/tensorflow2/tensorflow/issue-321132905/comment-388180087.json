{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/388180087", "html_url": "https://github.com/tensorflow/tensorflow/issues/19142#issuecomment-388180087", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19142", "id": 388180087, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODE4MDA4Nw==", "user": {"login": "kahkeng", "id": 141746, "node_id": "MDQ6VXNlcjE0MTc0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/141746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kahkeng", "html_url": "https://github.com/kahkeng", "followers_url": "https://api.github.com/users/kahkeng/followers", "following_url": "https://api.github.com/users/kahkeng/following{/other_user}", "gists_url": "https://api.github.com/users/kahkeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kahkeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kahkeng/subscriptions", "organizations_url": "https://api.github.com/users/kahkeng/orgs", "repos_url": "https://api.github.com/users/kahkeng/repos", "events_url": "https://api.github.com/users/kahkeng/events{/privacy}", "received_events_url": "https://api.github.com/users/kahkeng/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-10T20:45:06Z", "updated_at": "2018-05-10T20:45:06Z", "author_association": "NONE", "body_html": "<p>I'm also seeing this for Ubuntu 16.04 on GTX 1080 or TitanX Pascal GPUs.</p>\n<pre><code>2018-05-10 19:11:35.252280: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so return\ning NUMA node zero\n2018-05-10 19:11:35.394301: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so return\ning NUMA node zero\n2018-05-10 19:11:35.517305: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so return\ning NUMA node zero\n2018-05-10 19:11:35.661768: I tensorflow/core/grappler/devices.cc:51] Number of eligible GPUs (core count &gt;= 8): 3\n2018-05-10 19:11:36.218467: I tensorflow/contrib/tensorrt/convert/convert_nodes.cc:2660] Max batch size= 100 max workspace size= 33554432\n2018-05-10 19:11:36.218532: I tensorflow/contrib/tensorrt/convert/convert_nodes.cc:2666] starting build engine\n*** Error in `python': munmap_chunk(): invalid pointer: 0x00007ffc19df4fe0 ***\n</code></pre>\n<p>Here's the Dockerfile I used to reproduce the issue:</p>\n<pre><code># Commands ran:\n# docker build -t cuda9.0_tf1.8_trt4 .\n# nvidia-docker run -it cuda9.0_tf1.8_trt4 bash\n# python /install/test_tftrt.py\n\nFROM nvidia/cuda:9.0-base-ubuntu16.04\n\nRUN apt-get update &amp;&amp; apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-9-0 \\\n        cuda-cublas-9-0 \\\n        cuda-cufft-9-0 \\\n        cuda-curand-9-0 \\\n        cuda-cusolver-9-0 \\\n        cuda-cusparse-9-0 \\\n        cuda-libraries-dev-9-0 \\\n        curl \\\n        libcudnn7=7.0.5.15-1+cuda9.0 \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python \\\n        python-dev \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        &amp;&amp; \\\n    apt-get clean &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -O https://bootstrap.pypa.io/get-pip.py &amp;&amp; \\\n    python get-pip.py &amp;&amp; \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n        Pillow \\\n        h5py \\\n        ipykernel \\\n        jupyter \\\n        matplotlib \\\n        numpy \\\n        pandas \\\n        scipy \\\n        sklearn \\\n        &amp;&amp; \\\n    python -m ipykernel.kernelspec\n\nENV LD_LIBRARY_PATH=/TensorRT-4.0.0.3/lib:$LD_LIBRARY_PATH\n\nCOPY test_tftrt.py /install/\nCOPY TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-9.0.cudnn7.0.tar.gz /install/\n\nRUN tar xzvf /install/TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-9.0.cudnn7.0.tar.gz &amp;&amp; rm /install/TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-9.0.cudnn7.0.tar.gz\n\nRUN cd /TensorRT-4.0.0.3/python &amp;&amp; pip2 install tensorrt-4.0.0.3-cp27-cp27mu-linux_x86_64.whl\nRUN pip2 install tensorflow-gpu==1.8\n</code></pre>\n<p>FWIW I also tried TensorRT-3.0.4 and got the same error. Relevant changes to Dockerfile:</p>\n<pre><code>COPY TensorRT-3.0.4.Ubuntu-16.04.3.x86_64.cuda-9.0.cudnn7.0.tar.gz /install/\n\nRUN tar xzvf /install/TensorRT-3.0.4.Ubuntu-16.04.3.x86_64.cuda-9.0.cudnn7.0.tar.gz &amp;&amp; rm /install/TensorRT-3.0.4.Ubuntu-16.04.3.x86_64.cuda-9.0.cudnn7.0.tar.gz\n\nRUN cd /TensorRT-3.0.4/python &amp;&amp; pip2 install tensorrt-3.0.4-cp27-cp27mu-linux_x86_64.whl\nRUN pip2 install tensorflow-gpu==1.8\n</code></pre>\n<p>Interestingly, I'm able to get the test_tftrt.py script to run fine in docker on a PX2 (with TensorRT 3.02 installed by the DriveWorks SDK, and Tensorflow 1.8 binary installed from <a href=\"https://github.com/peterlee0127/tensorflow-nvJetson\">https://github.com/peterlee0127/tensorflow-nvJetson</a>).</p>", "body_text": "I'm also seeing this for Ubuntu 16.04 on GTX 1080 or TitanX Pascal GPUs.\n2018-05-10 19:11:35.252280: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so return\ning NUMA node zero\n2018-05-10 19:11:35.394301: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so return\ning NUMA node zero\n2018-05-10 19:11:35.517305: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so return\ning NUMA node zero\n2018-05-10 19:11:35.661768: I tensorflow/core/grappler/devices.cc:51] Number of eligible GPUs (core count >= 8): 3\n2018-05-10 19:11:36.218467: I tensorflow/contrib/tensorrt/convert/convert_nodes.cc:2660] Max batch size= 100 max workspace size= 33554432\n2018-05-10 19:11:36.218532: I tensorflow/contrib/tensorrt/convert/convert_nodes.cc:2666] starting build engine\n*** Error in `python': munmap_chunk(): invalid pointer: 0x00007ffc19df4fe0 ***\n\nHere's the Dockerfile I used to reproduce the issue:\n# Commands ran:\n# docker build -t cuda9.0_tf1.8_trt4 .\n# nvidia-docker run -it cuda9.0_tf1.8_trt4 bash\n# python /install/test_tftrt.py\n\nFROM nvidia/cuda:9.0-base-ubuntu16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-9-0 \\\n        cuda-cublas-9-0 \\\n        cuda-cufft-9-0 \\\n        cuda-curand-9-0 \\\n        cuda-cusolver-9-0 \\\n        cuda-cusparse-9-0 \\\n        cuda-libraries-dev-9-0 \\\n        curl \\\n        libcudnn7=7.0.5.15-1+cuda9.0 \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python \\\n        python-dev \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n        Pillow \\\n        h5py \\\n        ipykernel \\\n        jupyter \\\n        matplotlib \\\n        numpy \\\n        pandas \\\n        scipy \\\n        sklearn \\\n        && \\\n    python -m ipykernel.kernelspec\n\nENV LD_LIBRARY_PATH=/TensorRT-4.0.0.3/lib:$LD_LIBRARY_PATH\n\nCOPY test_tftrt.py /install/\nCOPY TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-9.0.cudnn7.0.tar.gz /install/\n\nRUN tar xzvf /install/TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-9.0.cudnn7.0.tar.gz && rm /install/TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-9.0.cudnn7.0.tar.gz\n\nRUN cd /TensorRT-4.0.0.3/python && pip2 install tensorrt-4.0.0.3-cp27-cp27mu-linux_x86_64.whl\nRUN pip2 install tensorflow-gpu==1.8\n\nFWIW I also tried TensorRT-3.0.4 and got the same error. Relevant changes to Dockerfile:\nCOPY TensorRT-3.0.4.Ubuntu-16.04.3.x86_64.cuda-9.0.cudnn7.0.tar.gz /install/\n\nRUN tar xzvf /install/TensorRT-3.0.4.Ubuntu-16.04.3.x86_64.cuda-9.0.cudnn7.0.tar.gz && rm /install/TensorRT-3.0.4.Ubuntu-16.04.3.x86_64.cuda-9.0.cudnn7.0.tar.gz\n\nRUN cd /TensorRT-3.0.4/python && pip2 install tensorrt-3.0.4-cp27-cp27mu-linux_x86_64.whl\nRUN pip2 install tensorflow-gpu==1.8\n\nInterestingly, I'm able to get the test_tftrt.py script to run fine in docker on a PX2 (with TensorRT 3.02 installed by the DriveWorks SDK, and Tensorflow 1.8 binary installed from https://github.com/peterlee0127/tensorflow-nvJetson).", "body": "I'm also seeing this for Ubuntu 16.04 on GTX 1080 or TitanX Pascal GPUs.\r\n```\r\n2018-05-10 19:11:35.252280: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so return\r\ning NUMA node zero\r\n2018-05-10 19:11:35.394301: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so return\r\ning NUMA node zero\r\n2018-05-10 19:11:35.517305: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so return\r\ning NUMA node zero\r\n2018-05-10 19:11:35.661768: I tensorflow/core/grappler/devices.cc:51] Number of eligible GPUs (core count >= 8): 3\r\n2018-05-10 19:11:36.218467: I tensorflow/contrib/tensorrt/convert/convert_nodes.cc:2660] Max batch size= 100 max workspace size= 33554432\r\n2018-05-10 19:11:36.218532: I tensorflow/contrib/tensorrt/convert/convert_nodes.cc:2666] starting build engine\r\n*** Error in `python': munmap_chunk(): invalid pointer: 0x00007ffc19df4fe0 ***\r\n```\r\n\r\nHere's the Dockerfile I used to reproduce the issue:\r\n\r\n```\r\n# Commands ran:\r\n# docker build -t cuda9.0_tf1.8_trt4 .\r\n# nvidia-docker run -it cuda9.0_tf1.8_trt4 bash\r\n# python /install/test_tftrt.py\r\n\r\nFROM nvidia/cuda:9.0-base-ubuntu16.04\r\n\r\nRUN apt-get update && apt-get install -y --no-install-recommends \\\r\n        build-essential \\\r\n        cuda-command-line-tools-9-0 \\\r\n        cuda-cublas-9-0 \\\r\n        cuda-cufft-9-0 \\\r\n        cuda-curand-9-0 \\\r\n        cuda-cusolver-9-0 \\\r\n        cuda-cusparse-9-0 \\\r\n        cuda-libraries-dev-9-0 \\\r\n        curl \\\r\n        libcudnn7=7.0.5.15-1+cuda9.0 \\\r\n        libfreetype6-dev \\\r\n        libhdf5-serial-dev \\\r\n        libpng12-dev \\\r\n        libzmq3-dev \\\r\n        pkg-config \\\r\n        python \\\r\n        python-dev \\\r\n        rsync \\\r\n        software-properties-common \\\r\n        unzip \\\r\n        && \\\r\n    apt-get clean && \\\r\n    rm -rf /var/lib/apt/lists/*\r\n\r\nRUN curl -O https://bootstrap.pypa.io/get-pip.py && \\\r\n    python get-pip.py && \\\r\n    rm get-pip.py\r\n\r\nRUN pip --no-cache-dir install \\\r\n        Pillow \\\r\n        h5py \\\r\n        ipykernel \\\r\n        jupyter \\\r\n        matplotlib \\\r\n        numpy \\\r\n        pandas \\\r\n        scipy \\\r\n        sklearn \\\r\n        && \\\r\n    python -m ipykernel.kernelspec\r\n\r\nENV LD_LIBRARY_PATH=/TensorRT-4.0.0.3/lib:$LD_LIBRARY_PATH\r\n\r\nCOPY test_tftrt.py /install/\r\nCOPY TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-9.0.cudnn7.0.tar.gz /install/\r\n\r\nRUN tar xzvf /install/TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-9.0.cudnn7.0.tar.gz && rm /install/TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-9.0.cudnn7.0.tar.gz\r\n\r\nRUN cd /TensorRT-4.0.0.3/python && pip2 install tensorrt-4.0.0.3-cp27-cp27mu-linux_x86_64.whl\r\nRUN pip2 install tensorflow-gpu==1.8\r\n```\r\n\r\nFWIW I also tried TensorRT-3.0.4 and got the same error. Relevant changes to Dockerfile:\r\n```\r\nCOPY TensorRT-3.0.4.Ubuntu-16.04.3.x86_64.cuda-9.0.cudnn7.0.tar.gz /install/\r\n\r\nRUN tar xzvf /install/TensorRT-3.0.4.Ubuntu-16.04.3.x86_64.cuda-9.0.cudnn7.0.tar.gz && rm /install/TensorRT-3.0.4.Ubuntu-16.04.3.x86_64.cuda-9.0.cudnn7.0.tar.gz\r\n\r\nRUN cd /TensorRT-3.0.4/python && pip2 install tensorrt-3.0.4-cp27-cp27mu-linux_x86_64.whl\r\nRUN pip2 install tensorflow-gpu==1.8\r\n```\r\n\r\nInterestingly, I'm able to get the test_tftrt.py script to run fine in docker on a PX2 (with TensorRT 3.02 installed by the DriveWorks SDK, and Tensorflow 1.8 binary installed from https://github.com/peterlee0127/tensorflow-nvJetson)."}