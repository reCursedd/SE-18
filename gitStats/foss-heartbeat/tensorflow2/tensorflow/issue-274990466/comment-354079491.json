{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354079491", "html_url": "https://github.com/tensorflow/tensorflow/pull/14667#issuecomment-354079491", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14667", "id": 354079491, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDA3OTQ5MQ==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-27T09:00:31Z", "updated_at": "2017-12-27T09:00:31Z", "author_association": "MEMBER", "body_html": "<p>It seems that <code>safe_div</code> has been implemented in C++ side, however it only supports integer now.</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/ac7387b48674fdeb11e7a4fa595c88b5e2afe16e/tensorflow/core/kernels/cwise_ops.h#L702-L705\">tensorflow/tensorflow/core/kernels/cwise_ops.h</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 702 to 705\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/ac7387b48674fdeb11e7a4fa595c88b5e2afe16e\">ac7387b</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L702\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"702\"></td>\n          <td id=\"LC702\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">template </span>&lt;<span class=\"pl-k\">typename</span> T&gt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L703\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"703\"></td>\n          <td id=\"LC703\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">struct</span> <span class=\"pl-en\">safe_div</span> : base&lt;T, Eigen::internal::safe_div_or_mod_op&lt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L704\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"704\"></td>\n          <td id=\"LC704\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                               T, Eigen::internal::scalar_quotient_op&lt;T&gt;&gt;&gt; { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L705\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"705\"></td>\n          <td id=\"LC705\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">static</span> <span class=\"pl-k\">const</span> <span class=\"pl-k\">bool</span> has_errors = <span class=\"pl-c1\">true</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/ac7387b48674fdeb11e7a4fa595c88b5e2afe16e/tensorflow/core/kernels/cwise_ops.h#L119-L137\">tensorflow/tensorflow/core/kernels/cwise_ops.h</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 119 to 137\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/ac7387b48674fdeb11e7a4fa595c88b5e2afe16e\">ac7387b</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L119\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"119\"></td>\n          <td id=\"LC119\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">struct</span> <span class=\"pl-en\">safe_div_or_mod_op</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L120\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"120\"></td>\n          <td id=\"LC120\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-en\">static_assert</span>(std::is_integral&lt;T&gt;::value, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Integer type expected<span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L121\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"121\"></td>\n          <td id=\"LC121\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L122\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"122\"></td>\n          <td id=\"LC122\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">bool</span>* <span class=\"pl-k\">const</span> error; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L123\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"123\"></td>\n          <td id=\"LC123\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L124\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"124\"></td>\n          <td id=\"LC124\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE <span class=\"pl-en\">safe_div_or_mod_op</span>(<span class=\"pl-k\">bool</span>* error) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L125\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"125\"></td>\n          <td id=\"LC125\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       : error(error) {} </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L126\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"126\"></td>\n          <td id=\"LC126\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L127\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"127\"></td>\n          <td id=\"LC127\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE <span class=\"pl-k\">const</span> T <span class=\"pl-en\">operator</span>()(<span class=\"pl-k\">const</span> T&amp; a, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L128\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"128\"></td>\n          <td id=\"LC128\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                                                            <span class=\"pl-k\">const</span> T&amp; b) <span class=\"pl-k\">const</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L129\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"129\"></td>\n          <td id=\"LC129\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">const</span> T safe_b = <span class=\"pl-c1\">tensorflow::internal::SubtleMustCopy</span>(b); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L130\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"130\"></td>\n          <td id=\"LC130\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">TF_PREDICT_TRUE</span>(safe_b != <span class=\"pl-c1\">0</span>)) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L131\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"131\"></td>\n          <td id=\"LC131\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-k\">return</span> <span class=\"pl-c1\">DivOrMod</span>()(a, safe_b); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L132\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"132\"></td>\n          <td id=\"LC132\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L133\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"133\"></td>\n          <td id=\"LC133\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       *error = <span class=\"pl-c1\">true</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L134\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"134\"></td>\n          <td id=\"LC134\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-k\">return</span> <span class=\"pl-c1\">0</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L135\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"135\"></td>\n          <td id=\"LC135\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L136\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"136\"></td>\n          <td id=\"LC136\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L137\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"137\"></td>\n          <td id=\"LC137\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> }; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "It seems that safe_div has been implemented in C++ side, however it only supports integer now.\n\n  \n    \n      tensorflow/tensorflow/core/kernels/cwise_ops.h\n    \n    \n        Lines 702 to 705\n      in\n      ac7387b\n    \n    \n    \n    \n\n        \n          \n           template <typename T> \n        \n\n        \n          \n           struct safe_div : base<T, Eigen::internal::safe_div_or_mod_op< \n        \n\n        \n          \n                                         T, Eigen::internal::scalar_quotient_op<T>>> { \n        \n\n        \n          \n             static const bool has_errors = true; \n        \n    \n  \n\n\n\n  \n    \n      tensorflow/tensorflow/core/kernels/cwise_ops.h\n    \n    \n        Lines 119 to 137\n      in\n      ac7387b\n    \n    \n    \n    \n\n        \n          \n           struct safe_div_or_mod_op { \n        \n\n        \n          \n             static_assert(std::is_integral<T>::value, \"Integer type expected\"); \n        \n\n        \n          \n            \n        \n\n        \n          \n             bool* const error; \n        \n\n        \n          \n            \n        \n\n        \n          \n             EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE safe_div_or_mod_op(bool* error) \n        \n\n        \n          \n                 : error(error) {} \n        \n\n        \n          \n            \n        \n\n        \n          \n             EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const T operator()(const T& a, \n        \n\n        \n          \n                                                                      const T& b) const { \n        \n\n        \n          \n               const T safe_b = tensorflow::internal::SubtleMustCopy(b); \n        \n\n        \n          \n               if (TF_PREDICT_TRUE(safe_b != 0)) { \n        \n\n        \n          \n                 return DivOrMod()(a, safe_b); \n        \n\n        \n          \n               } else { \n        \n\n        \n          \n                 *error = true; \n        \n\n        \n          \n                 return 0; \n        \n\n        \n          \n               } \n        \n\n        \n          \n             } \n        \n\n        \n          \n           };", "body": "It seems that `safe_div` has been implemented in C++ side, however it only supports integer now.  \r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/ac7387b48674fdeb11e7a4fa595c88b5e2afe16e/tensorflow/core/kernels/cwise_ops.h#L702-L705\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/ac7387b48674fdeb11e7a4fa595c88b5e2afe16e/tensorflow/core/kernels/cwise_ops.h#L119-L137"}