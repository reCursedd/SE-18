{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/128904470", "pull_request_review_id": 51630310, "id": 128904470, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyODkwNDQ3MA==", "diff_hunk": "@@ -83,6 +84,49 @@ temp_workaround_http_archive = repository_rule(\n )\n \n \n+def _run_cmd(repo_ctx, cmd, check=True):\n+  if _is_windows(repo_ctx):\n+    bazel_sh = _get_env_var(repo_ctx, \"BAZEL_SH\")\n+    if not bazel_sh:\n+      fail(\"BAZEL_SH environment variable is not set\")\n+    cmd = [bazel_sh, \"-c\", \" \".join(cmd)]\n+  if check:\n+    _execute_and_check_ret_code(repo_ctx, cmd)\n+  else:\n+    return repo_ctx.execute(cmd, timeout=10)\n+\n+def _unzip(repo_ctx, zip_file, strip_prefix):\n+  _run_cmd(repo_ctx,\n+           [\"unzip\", repo_ctx.path(zip_file),\n+            \"-d\", repo_ctx.path(\"_archive\")])\n+  if strip_prefix:\n+    p = repo_ctx.path(\"_archive/\" + strip_prefix)\n+    for f in p.readdir():\n+      _run_cmd(repo_ctx, [\"mv\", f, repo_ctx.path(\".\")])\n+    _run_cmd(repo_ctx, [\"rm\", \"-rf\", repo_ctx.path(\"_archive\")])\n+\n+def _unsafe_unzip_http_archive_impl(repo_ctx):\n+  repo_ctx.symlink(repo_ctx.attr.build_file, \"BUILD\")\n+  repo_ctx.download(repo_ctx.attr.urls, \"_archive.zip\", repo_ctx.attr.sha256)\n+  _unzip(repo_ctx, \"_archive.zip\", repo_ctx.attr.strip_prefix)\n+  _run_cmd(repo_ctx, [\"rm\", repo_ctx.path(\"_archive.zip\")])\n+  repo_ctx.symlink(\"/usr/include\", \"local_include/\")\n+\n+\n+# This performs an unsafe unzip operation - since zip files may have\n+# relative and absolute paths, it should only be executed on trusted files.", "path": "tensorflow/workspace.bzl", "position": null, "original_position": 42, "commit_id": "f1bb14ddd97639187b17578bcf88f2a6028ade3d", "original_commit_id": "0e673f4bb2f83e07960d7a711e2921a4b5ea8d25", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "body": "@meteorcloudy Can bazel handle zip files with symlinks in windows now?\r\nWould this break windows bazel build (not currently run in presubmits)", "created_at": "2017-07-22T20:29:02Z", "updated_at": "2017-07-25T22:47:07Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11675#discussion_r128904470", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11675", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/128904470"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11675#discussion_r128904470"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11675"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4171702\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/meteorcloudy\">@meteorcloudy</a> Can bazel handle zip files with symlinks in windows now?<br>\nWould this break windows bazel build (not currently run in presubmits)</p>", "body_text": "@meteorcloudy Can bazel handle zip files with symlinks in windows now?\nWould this break windows bazel build (not currently run in presubmits)"}