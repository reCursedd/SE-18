{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3464", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3464/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3464/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3464/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3464", "id": 167083774, "node_id": "MDU6SXNzdWUxNjcwODM3NzQ=", "number": 3464, "title": "Extract the element from the output list of tf.py_func when length 1", "user": {"login": "omoindrot", "id": 13662086, "node_id": "MDQ6VXNlcjEzNjYyMDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/13662086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omoindrot", "html_url": "https://github.com/omoindrot", "followers_url": "https://api.github.com/users/omoindrot/followers", "following_url": "https://api.github.com/users/omoindrot/following{/other_user}", "gists_url": "https://api.github.com/users/omoindrot/gists{/gist_id}", "starred_url": "https://api.github.com/users/omoindrot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omoindrot/subscriptions", "organizations_url": "https://api.github.com/users/omoindrot/orgs", "repos_url": "https://api.github.com/users/omoindrot/repos", "events_url": "https://api.github.com/users/omoindrot/events{/privacy}", "received_events_url": "https://api.github.com/users/omoindrot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-07-22T16:32:49Z", "updated_at": "2016-09-27T15:57:19Z", "closed_at": "2016-09-27T15:57:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>tf.py_func</code> could extract the element from the list when the length is 1.</p>\n<p>In this example:</p>\n<pre><code>def func(x):\n    return 2*x\n\nx = tf.constant(1.)\nres = tf.py_func(func, [x], [tf.float32])\n</code></pre>\n<p><code>res</code> is a list containing 1 Tensor. This can be confusing, because users expect to get only one tensor as output.</p>\n<p><code>tf.cond</code> handles this case well:</p>\n<blockquote>\n<p><strong>Returns:</strong><br>\nTensors returned by the call to either fn1 or fn2. If the callables return a singleton list, the element is extracted from the list.</p>\n</blockquote>", "body_text": "tf.py_func could extract the element from the list when the length is 1.\nIn this example:\ndef func(x):\n    return 2*x\n\nx = tf.constant(1.)\nres = tf.py_func(func, [x], [tf.float32])\n\nres is a list containing 1 Tensor. This can be confusing, because users expect to get only one tensor as output.\ntf.cond handles this case well:\n\nReturns:\nTensors returned by the call to either fn1 or fn2. If the callables return a singleton list, the element is extracted from the list.", "body": "`tf.py_func` could extract the element from the list when the length is 1.\n\nIn this example:\n\n```\ndef func(x):\n    return 2*x\n\nx = tf.constant(1.)\nres = tf.py_func(func, [x], [tf.float32])\n```\n\n`res` is a list containing 1 Tensor. This can be confusing, because users expect to get only one tensor as output.\n\n`tf.cond` handles this case well:\n\n> **Returns:**\n> Tensors returned by the call to either fn1 or fn2. If the callables return a singleton list, the element is extracted from the list.\n"}