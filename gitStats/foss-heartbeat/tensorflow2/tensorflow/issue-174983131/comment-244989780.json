{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/244989780", "html_url": "https://github.com/tensorflow/tensorflow/pull/4198#issuecomment-244989780", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4198", "id": 244989780, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDk4OTc4MA==", "user": {"login": "thuyen", "id": 4015328, "node_id": "MDQ6VXNlcjQwMTUzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4015328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thuyen", "html_url": "https://github.com/thuyen", "followers_url": "https://api.github.com/users/thuyen/followers", "following_url": "https://api.github.com/users/thuyen/following{/other_user}", "gists_url": "https://api.github.com/users/thuyen/gists{/gist_id}", "starred_url": "https://api.github.com/users/thuyen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thuyen/subscriptions", "organizations_url": "https://api.github.com/users/thuyen/orgs", "repos_url": "https://api.github.com/users/thuyen/repos", "events_url": "https://api.github.com/users/thuyen/events{/privacy}", "received_events_url": "https://api.github.com/users/thuyen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-06T15:31:27Z", "updated_at": "2016-09-06T15:31:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks Vincent. But am still a little bit confused. Isn't <code>x-shift</code> currently needed to backpropagate through reduce_sum as well?<br>\nCurrently:<br>\n<code>m_ss = math_ops.sub(x, shift)</code><br>\n<code>m_ss = math_ops.reduce_sum(m_ss, axes, keep_dims=keep_dims, name=\"mean_ss\")</code></p>", "body_text": "Thanks Vincent. But am still a little bit confused. Isn't x-shift currently needed to backpropagate through reduce_sum as well?\nCurrently:\nm_ss = math_ops.sub(x, shift)\nm_ss = math_ops.reduce_sum(m_ss, axes, keep_dims=keep_dims, name=\"mean_ss\")", "body": "Thanks Vincent. But am still a little bit confused. Isn't `x-shift` currently needed to backpropagate through reduce_sum as well? \nCurrently:\n`m_ss = math_ops.sub(x, shift)`\n`m_ss = math_ops.reduce_sum(m_ss, axes, keep_dims=keep_dims, name=\"mean_ss\")`\n"}