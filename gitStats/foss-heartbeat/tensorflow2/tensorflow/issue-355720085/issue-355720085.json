{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21979", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21979/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21979/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21979/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21979", "id": 355720085, "node_id": "MDU6SXNzdWUzNTU3MjAwODU=", "number": 21979, "title": "[Feature Request] Keeping Keras Callback functionality in Estimators created from `keras.model_to_estimator`", "user": {"login": "zmjjmz", "id": 1694612, "node_id": "MDQ6VXNlcjE2OTQ2MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1694612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmjjmz", "html_url": "https://github.com/zmjjmz", "followers_url": "https://api.github.com/users/zmjjmz/followers", "following_url": "https://api.github.com/users/zmjjmz/following{/other_user}", "gists_url": "https://api.github.com/users/zmjjmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmjjmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmjjmz/subscriptions", "organizations_url": "https://api.github.com/users/zmjjmz/orgs", "repos_url": "https://api.github.com/users/zmjjmz/repos", "events_url": "https://api.github.com/users/zmjjmz/events{/privacy}", "received_events_url": "https://api.github.com/users/zmjjmz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-30T19:20:26Z", "updated_at": "2018-11-23T18:39:12Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: n/a</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: n/a</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: n/a</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.9</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: n/a</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: n/a</li>\n<li><strong>CUDA/cuDNN version</strong>: n/a</li>\n<li><strong>GPU model and memory</strong>: n/a</li>\n<li><strong>Exact command to reproduce</strong>: n/a</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Currently if I want to define a model in Keras and train it in a distributed fashion, the easiest/most-apparent method is to convert it into an Estimator using <a href=\"https://www.tensorflow.org/api_docs/python/tf/keras/estimator/model_to_estimator\" rel=\"nofollow\">model_to_estimator</a>. Unfortunately this has a few issues, and one of them is that any <a href=\"https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/Callback\" rel=\"nofollow\">Keras Callbacks</a> go unpreserved.</p>\n<p>Theoretically these callbacks could be converted into some form of <a href=\"https://www.tensorflow.org/api_docs/python/tf/train/SessionRunHook\" rel=\"nofollow\"><code>SessionRunHook</code></a> although the SessionRunHook doesn't know things that the Callback does (e.g. epoch information). However, this does not happen at all -- the <code>EstimatorSpec</code> that's returned out of the <code>model_fn</code> from <code>_create_keras_model_fn</code> <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/estimator/keras.py#L400\">does not specify any sort of <code>training_hooks</code></a> regardless of whether or not the Keras model has Callbacks defined.</p>\n<p>I'm sure this is a non-trivial problem to solve, however it is frustrating that <code>model_to_estimator</code> causes a loss in functionality like this.</p>\n<p>Are there any plans to remedy this going forward?</p>\n<p>Thanks!</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): n/a\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a\nTensorFlow installed from (source or binary): n/a\nTensorFlow version (use command below): 1.9\nPython version: 2.7\nBazel version (if compiling from source): n/a\nGCC/Compiler version (if compiling from source): n/a\nCUDA/cuDNN version: n/a\nGPU model and memory: n/a\nExact command to reproduce: n/a\n\nDescribe the problem\nCurrently if I want to define a model in Keras and train it in a distributed fashion, the easiest/most-apparent method is to convert it into an Estimator using model_to_estimator. Unfortunately this has a few issues, and one of them is that any Keras Callbacks go unpreserved.\nTheoretically these callbacks could be converted into some form of SessionRunHook although the SessionRunHook doesn't know things that the Callback does (e.g. epoch information). However, this does not happen at all -- the EstimatorSpec that's returned out of the model_fn from _create_keras_model_fn does not specify any sort of training_hooks regardless of whether or not the Keras model has Callbacks defined.\nI'm sure this is a non-trivial problem to solve, however it is frustrating that model_to_estimator causes a loss in functionality like this.\nAre there any plans to remedy this going forward?\nThanks!", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: n/a\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: n/a\r\n- **TensorFlow installed from (source or binary)**: n/a\r\n- **TensorFlow version (use command below)**: 1.9\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: n/a\r\n\r\n### Describe the problem\r\n\r\nCurrently if I want to define a model in Keras and train it in a distributed fashion, the easiest/most-apparent method is to convert it into an Estimator using [model_to_estimator](https://www.tensorflow.org/api_docs/python/tf/keras/estimator/model_to_estimator). Unfortunately this has a few issues, and one of them is that any [Keras Callbacks](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/Callback) go unpreserved.\r\n\r\nTheoretically these callbacks could be converted into some form of [`SessionRunHook`](https://www.tensorflow.org/api_docs/python/tf/train/SessionRunHook) although the SessionRunHook doesn't know things that the Callback does (e.g. epoch information). However, this does not happen at all -- the `EstimatorSpec` that's returned out of the `model_fn` from `_create_keras_model_fn` [does not specify any sort of `training_hooks`](https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/estimator/keras.py#L400) regardless of whether or not the Keras model has Callbacks defined.\r\n\r\nI'm sure this is a non-trivial problem to solve, however it is frustrating that `model_to_estimator` causes a loss in functionality like this.\r\n\r\nAre there any plans to remedy this going forward?\r\n\r\nThanks!"}