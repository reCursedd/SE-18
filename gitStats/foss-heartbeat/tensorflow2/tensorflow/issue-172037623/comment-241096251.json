{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/241096251", "html_url": "https://github.com/tensorflow/tensorflow/issues/3912#issuecomment-241096251", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3912", "id": 241096251, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTA5NjI1MQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-19T18:23:44Z", "updated_at": "2016-08-19T18:23:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>One way to get \"random data\" is an uninitialized memory read. However, such bugs are quickly fixed and the thing to ask is what you are doing that is unusual so that it wouldn't get caught in the gazillion hours of training on Google computers. Some ideas to isolate:</p>\n<ol>\n<li>If this happens with CPU training, does it also reoccur in GPU training? And vica versa</li>\n<li>If you make your data order deterministic, does it happen after the same number of steps, ie on the same example?</li>\n</ol>\n<p>It's also possible that it's some kind of weird interaction with your drivers and hardware. For instance, on my MacBook GPU I've encountered weird behavior at some point. I tracked it down to \"tf.add(1, 1)\" producing -10. It had something to do with CUDA/VideoCard interaction/OS because once I disabled Chrome hardware acceleration, the behavior disappeared, so one thing to try is upgrading your drivers/trying different hardware setup</p>", "body_text": "One way to get \"random data\" is an uninitialized memory read. However, such bugs are quickly fixed and the thing to ask is what you are doing that is unusual so that it wouldn't get caught in the gazillion hours of training on Google computers. Some ideas to isolate:\n\nIf this happens with CPU training, does it also reoccur in GPU training? And vica versa\nIf you make your data order deterministic, does it happen after the same number of steps, ie on the same example?\n\nIt's also possible that it's some kind of weird interaction with your drivers and hardware. For instance, on my MacBook GPU I've encountered weird behavior at some point. I tracked it down to \"tf.add(1, 1)\" producing -10. It had something to do with CUDA/VideoCard interaction/OS because once I disabled Chrome hardware acceleration, the behavior disappeared, so one thing to try is upgrading your drivers/trying different hardware setup", "body": "One way to get \"random data\" is an uninitialized memory read. However, such bugs are quickly fixed and the thing to ask is what you are doing that is unusual so that it wouldn't get caught in the gazillion hours of training on Google computers. Some ideas to isolate:\n1. If this happens with CPU training, does it also reoccur in GPU training? And vica versa \n2. If you make your data order deterministic, does it happen after the same number of steps, ie on the same example?\n\nIt's also possible that it's some kind of weird interaction with your drivers and hardware. For instance, on my MacBook GPU I've encountered weird behavior at some point. I tracked it down to \"tf.add(1, 1)\" producing -10. It had something to do with CUDA/VideoCard interaction/OS because once I disabled Chrome hardware acceleration, the behavior disappeared, so one thing to try is upgrading your drivers/trying different hardware setup\n"}