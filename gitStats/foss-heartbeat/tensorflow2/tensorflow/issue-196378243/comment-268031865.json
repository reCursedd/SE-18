{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/268031865", "html_url": "https://github.com/tensorflow/tensorflow/issues/6396#issuecomment-268031865", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6396", "id": 268031865, "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODAzMTg2NQ==", "user": {"login": "vit-stepanovs", "id": 22799507, "node_id": "MDQ6VXNlcjIyNzk5NTA3", "avatar_url": "https://avatars0.githubusercontent.com/u/22799507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vit-stepanovs", "html_url": "https://github.com/vit-stepanovs", "followers_url": "https://api.github.com/users/vit-stepanovs/followers", "following_url": "https://api.github.com/users/vit-stepanovs/following{/other_user}", "gists_url": "https://api.github.com/users/vit-stepanovs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vit-stepanovs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vit-stepanovs/subscriptions", "organizations_url": "https://api.github.com/users/vit-stepanovs/orgs", "repos_url": "https://api.github.com/users/vit-stepanovs/repos", "events_url": "https://api.github.com/users/vit-stepanovs/events{/privacy}", "received_events_url": "https://api.github.com/users/vit-stepanovs/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-19T17:55:51Z", "updated_at": "2016-12-19T17:58:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2685014\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shakith\">@shakith</a> This is caused by MSVC throwing out object files in static libraries during link time if no symbols from them are referenced from anywhere else (which is in most cases a desirable behavior). Many TF objects (ops, kernels, sessions) are not used directly by other code, but through accessing them via global 'registry' collections, hence this behavior.</p>\n<p>You have two options - either link the object files directly into executables/dlls (without putting them in static libraries), or (starting with VS 2015 Update 2) use <a href=\"https://msdn.microsoft.com/en-us/library/mt732963.aspx?f=255&amp;MSPPError=-2147217396\" rel=\"nofollow\">/WHOLEARCHIVE</a> option to force the linker to include all objects from your static library. You would use that option when linking the DLL/executable, not when building your static libraries.</p>", "body_text": "@shakith This is caused by MSVC throwing out object files in static libraries during link time if no symbols from them are referenced from anywhere else (which is in most cases a desirable behavior). Many TF objects (ops, kernels, sessions) are not used directly by other code, but through accessing them via global 'registry' collections, hence this behavior.\nYou have two options - either link the object files directly into executables/dlls (without putting them in static libraries), or (starting with VS 2015 Update 2) use /WHOLEARCHIVE option to force the linker to include all objects from your static library. You would use that option when linking the DLL/executable, not when building your static libraries.", "body": "@shakith This is caused by MSVC throwing out object files in static libraries during link time if no symbols from them are referenced from anywhere else (which is in most cases a desirable behavior). Many TF objects (ops, kernels, sessions) are not used directly by other code, but through accessing them via global 'registry' collections, hence this behavior.\r\n\r\nYou have two options - either link the object files directly into executables/dlls (without putting them in static libraries), or (starting with VS 2015 Update 2) use [/WHOLEARCHIVE](https://msdn.microsoft.com/en-us/library/mt732963.aspx?f=255&MSPPError=-2147217396) option to force the linker to include all objects from your static library. You would use that option when linking the DLL/executable, not when building your static libraries."}