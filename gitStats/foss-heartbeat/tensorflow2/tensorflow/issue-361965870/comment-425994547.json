{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/425994547", "html_url": "https://github.com/tensorflow/tensorflow/issues/22398#issuecomment-425994547", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22398", "id": 425994547, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTk5NDU0Nw==", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-01T17:33:05Z", "updated_at": "2018-10-01T17:33:05Z", "author_association": "NONE", "body_html": "<p>This problem is a non-determinism issue, but is separate from non-determinism issues with cuDNN.</p>\n<p>The solution to cuDNN non-determinism is to pass the correct flags into the library specifying which algorithm to use. See <a href=\"https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#reproducibility\" rel=\"nofollow\">https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#reproducibility</a></p>\n<p>The solution of \"set the right cudDNN flags\" cannot be transferred to non-cuDNN issues such as this. Resolving this issue involves modifying CUDA kernels in the TF source. Resolving <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"309853231\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/18096\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/18096/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/18096\">#18096</a> probably does not.</p>\n<p>Additionally, this issue affects more users than <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"309853231\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/18096\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/18096/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/18096\">#18096</a> as <code>bias_add</code> is used for fully connected layers (including through Keras) while cuDNN primarily affects CNNs.</p>\n<p>An appropriate \"remove non-deterministic behavior\" parent issue should not be solely about cuDNN in my opinion. It should include mention of removing all uses of atomic floating point instructions in the TF source.</p>", "body_text": "This problem is a non-determinism issue, but is separate from non-determinism issues with cuDNN.\nThe solution to cuDNN non-determinism is to pass the correct flags into the library specifying which algorithm to use. See https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#reproducibility\nThe solution of \"set the right cudDNN flags\" cannot be transferred to non-cuDNN issues such as this. Resolving this issue involves modifying CUDA kernels in the TF source. Resolving #18096 probably does not.\nAdditionally, this issue affects more users than #18096 as bias_add is used for fully connected layers (including through Keras) while cuDNN primarily affects CNNs.\nAn appropriate \"remove non-deterministic behavior\" parent issue should not be solely about cuDNN in my opinion. It should include mention of removing all uses of atomic floating point instructions in the TF source.", "body": "This problem is a non-determinism issue, but is separate from non-determinism issues with cuDNN.\r\n\r\nThe solution to cuDNN non-determinism is to pass the correct flags into the library specifying which algorithm to use. See https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#reproducibility\r\n\r\nThe solution of \"set the right cudDNN flags\" cannot be transferred to non-cuDNN issues such as this. Resolving this issue involves modifying CUDA kernels in the TF source. Resolving https://github.com/tensorflow/tensorflow/issues/18096 probably does not.\r\n\r\nAdditionally, this issue affects more users than https://github.com/tensorflow/tensorflow/issues/18096 as `bias_add` is used for fully connected layers (including through Keras) while cuDNN primarily affects CNNs.\r\n\r\nAn appropriate \"remove non-deterministic behavior\" parent issue should not be solely about cuDNN in my opinion. It should include mention of removing all uses of atomic floating point instructions in the TF source."}