{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23076", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23076/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23076/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23076/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23076", "id": 371556447, "node_id": "MDU6SXNzdWUzNzE1NTY0NDc=", "number": 23076, "title": "prediction from tensorflow differs on broadwell and on SkyLake", "user": {"login": "ziky90", "id": 1810839, "node_id": "MDQ6VXNlcjE4MTA4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1810839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziky90", "html_url": "https://github.com/ziky90", "followers_url": "https://api.github.com/users/ziky90/followers", "following_url": "https://api.github.com/users/ziky90/following{/other_user}", "gists_url": "https://api.github.com/users/ziky90/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziky90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziky90/subscriptions", "organizations_url": "https://api.github.com/users/ziky90/orgs", "repos_url": "https://api.github.com/users/ziky90/repos", "events_url": "https://api.github.com/users/ziky90/events{/privacy}", "received_events_url": "https://api.github.com/users/ziky90/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1105108936, "node_id": "MDU6TGFiZWwxMTA1MTA4OTM2", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:model", "name": "comp:model", "color": "0052cc", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-18T14:23:58Z", "updated_at": "2018-11-08T15:22:25Z", "closed_at": "2018-11-08T15:22:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A</li>\n<li>TensorFlow installed from (source or binary): source</li>\n<li>TensorFlow version: 1.11.0</li>\n<li>Python version: 3.6</li>\n<li>Installed using virtualenv? pip? conda?: N/A</li>\n<li>Bazel version (if compiling from source): 0.18.0</li>\n<li>GCC/Compiler version (if compiling from source): 7.3</li>\n<li>CUDA/cuDNN version: N/A</li>\n<li>GPU model and memory: N/A</li>\n</ul>\n<p><strong>Describe the problem</strong><br>\nI have experimented a bit with CNNs for semantic segmentation and it's predictions and I have noticed that for exactly the same network predictions are different regarding the architecture where I deploy the network. I currently see the following state:</p>\n<p><code>pip install tensorflow</code> - correct result<br>\n<code>pip install tensorflow-gpu</code> - correct result (P100)<br>\n<code>bazel build -c opt --copt=-march=broadwell --copt=-mfpmath=both -k //tensorflow/tools/pip_package:build_pip_package</code> - correct result<br>\n<code>bazel build -c opt --copt=-march=native --copt=-mfpmath=both -k //tensorflow/tools/pip_package:build_pip_package</code> - different (1-2% mismatch on my tested images) result on SkyLake (but faster prediction than with <code>--copt=-march=broadwell</code>)</p>\n<p><strong>NOTE:</strong><br>\nI'm using 32core Google Cloud machines in the us-central1-f zone with CPU option SkyLake.</p>\n<p><strong>Question:</strong><br>\nIs expected the prediction on SkyLake to be different from the prediction on broadwell and GPU on purpose, or should it be exactly the same and I'm just very unlucky here regarding rounding in some libraries underneath the tensorflow?</p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): source\nTensorFlow version: 1.11.0\nPython version: 3.6\nInstalled using virtualenv? pip? conda?: N/A\nBazel version (if compiling from source): 0.18.0\nGCC/Compiler version (if compiling from source): 7.3\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\n\nDescribe the problem\nI have experimented a bit with CNNs for semantic segmentation and it's predictions and I have noticed that for exactly the same network predictions are different regarding the architecture where I deploy the network. I currently see the following state:\npip install tensorflow - correct result\npip install tensorflow-gpu - correct result (P100)\nbazel build -c opt --copt=-march=broadwell --copt=-mfpmath=both -k //tensorflow/tools/pip_package:build_pip_package - correct result\nbazel build -c opt --copt=-march=native --copt=-mfpmath=both -k //tensorflow/tools/pip_package:build_pip_package - different (1-2% mismatch on my tested images) result on SkyLake (but faster prediction than with --copt=-march=broadwell)\nNOTE:\nI'm using 32core Google Cloud machines in the us-central1-f zone with CPU option SkyLake.\nQuestion:\nIs expected the prediction on SkyLake to be different from the prediction on broadwell and GPU on purpose, or should it be exactly the same and I'm just very unlucky here regarding rounding in some libraries underneath the tensorflow?", "body": "**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\r\n- TensorFlow installed from (source or binary): source\r\n- TensorFlow version: 1.11.0\r\n- Python version: 3.6\r\n- Installed using virtualenv? pip? conda?: N/A\r\n- Bazel version (if compiling from source): 0.18.0\r\n- GCC/Compiler version (if compiling from source): 7.3\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: N/A\r\n\r\n\r\n\r\n**Describe the problem**\r\nI have experimented a bit with CNNs for semantic segmentation and it's predictions and I have noticed that for exactly the same network predictions are different regarding the architecture where I deploy the network. I currently see the following state:\r\n\r\n`pip install tensorflow` - correct result\r\n`pip install tensorflow-gpu` - correct result (P100)\r\n`bazel build -c opt --copt=-march=broadwell --copt=-mfpmath=both -k //tensorflow/tools/pip_package:build_pip_package` - correct result\r\n`bazel build -c opt --copt=-march=native --copt=-mfpmath=both -k //tensorflow/tools/pip_package:build_pip_package` - different (1-2% mismatch on my tested images) result on SkyLake (but faster prediction than with `--copt=-march=broadwell`)\r\n\r\n**NOTE:**\r\nI'm using 32core Google Cloud machines in the us-central1-f zone with CPU option SkyLake.\r\n\r\n**Question:**\r\nIs expected the prediction on SkyLake to be different from the prediction on broadwell and GPU on purpose, or should it be exactly the same and I'm just very unlucky here regarding rounding in some libraries underneath the tensorflow?"}