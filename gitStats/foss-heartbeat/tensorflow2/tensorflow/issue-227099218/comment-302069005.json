{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302069005", "html_url": "https://github.com/tensorflow/tensorflow/pull/9762#issuecomment-302069005", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9762", "id": 302069005, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjA2OTAwNQ==", "user": {"login": "meteorcloudy", "id": 4171702, "node_id": "MDQ6VXNlcjQxNzE3MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4171702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meteorcloudy", "html_url": "https://github.com/meteorcloudy", "followers_url": "https://api.github.com/users/meteorcloudy/followers", "following_url": "https://api.github.com/users/meteorcloudy/following{/other_user}", "gists_url": "https://api.github.com/users/meteorcloudy/gists{/gist_id}", "starred_url": "https://api.github.com/users/meteorcloudy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meteorcloudy/subscriptions", "organizations_url": "https://api.github.com/users/meteorcloudy/orgs", "repos_url": "https://api.github.com/users/meteorcloudy/repos", "events_url": "https://api.github.com/users/meteorcloudy/events{/privacy}", "received_events_url": "https://api.github.com/users/meteorcloudy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-17T12:02:03Z", "updated_at": "2017-05-17T12:02:03Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10532244\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/laszlocsomor\">@laszlocsomor</a> I tested your change on my local machine and found a few bugs.<br>\nFirst, dest_dir is not the complete output path, we need to add <code>$(@D)</code> as prefix.<br>\nSecond, we cannot just create a junction to the include directory. Because Bazel cleans up all the output files which means all the files in the original directory will be deleted. So I think the safest way is to copy all the headers on Windows. Can you apply the following patch?</p>\n<pre><code>$ git diff third_party/py/python_configure.bzl\ndiff --git a/third_party/py/python_configure.bzl b/third_party/py/python_configure.bzl\nindex ed576a25d..525f4acc6 100644\n--- a/third_party/py/python_configure.bzl\n+++ b/third_party/py/python_configure.bzl\n@@ -122,8 +122,10 @@ def _symlink_genrule_for_dir(repository_ctx, src_dir, dest_dir, genrule_name):\n         executable = True,\n         content = \"\\n\".join([\n             '@rem Auto-generated by //third_party/py/python_configure.bzl',\n-            '@mklink /J \"%s\" \"%s\"' % (dest_dir, src_dir)]))\n-    cmd = \"cmd.exe /c $$(echo $(location %s) | sed 's,/,\\\\\\\\,g')\" % cmd_script\n+           'set DEST_DIR=%%1\\\\%s\\\\' % dest_dir,\n+           'rmdir /s /q %DEST_DIR%',\n+            'xcopy /e /q /y \"%s\" \"%%DEST_DIR%%\"' % src_dir]))\n+    cmd = \"cmd.exe /c \\\\\\\"$$(echo $(location %s) $(@D) | sed 's/\\//\\\\\\\\\\\\\\\\/g')\\\\\\\"\" % cmd_script\n   else:\n     cmd_script = \"%s-cmd.sh\" % genrule_name\n     repository_ctx.file(\n</code></pre>", "body_text": "@laszlocsomor I tested your change on my local machine and found a few bugs.\nFirst, dest_dir is not the complete output path, we need to add $(@D) as prefix.\nSecond, we cannot just create a junction to the include directory. Because Bazel cleans up all the output files which means all the files in the original directory will be deleted. So I think the safest way is to copy all the headers on Windows. Can you apply the following patch?\n$ git diff third_party/py/python_configure.bzl\ndiff --git a/third_party/py/python_configure.bzl b/third_party/py/python_configure.bzl\nindex ed576a25d..525f4acc6 100644\n--- a/third_party/py/python_configure.bzl\n+++ b/third_party/py/python_configure.bzl\n@@ -122,8 +122,10 @@ def _symlink_genrule_for_dir(repository_ctx, src_dir, dest_dir, genrule_name):\n         executable = True,\n         content = \"\\n\".join([\n             '@rem Auto-generated by //third_party/py/python_configure.bzl',\n-            '@mklink /J \"%s\" \"%s\"' % (dest_dir, src_dir)]))\n-    cmd = \"cmd.exe /c $$(echo $(location %s) | sed 's,/,\\\\\\\\,g')\" % cmd_script\n+           'set DEST_DIR=%%1\\\\%s\\\\' % dest_dir,\n+           'rmdir /s /q %DEST_DIR%',\n+            'xcopy /e /q /y \"%s\" \"%%DEST_DIR%%\"' % src_dir]))\n+    cmd = \"cmd.exe /c \\\\\\\"$$(echo $(location %s) $(@D) | sed 's/\\//\\\\\\\\\\\\\\\\/g')\\\\\\\"\" % cmd_script\n   else:\n     cmd_script = \"%s-cmd.sh\" % genrule_name\n     repository_ctx.file(", "body": "@laszlocsomor I tested your change on my local machine and found a few bugs.\r\nFirst, dest_dir is not the complete output path, we need to add `$(@D)` as prefix.\r\nSecond, we cannot just create a junction to the include directory. Because Bazel cleans up all the output files which means all the files in the original directory will be deleted. So I think the safest way is to copy all the headers on Windows. Can you apply the following patch?\r\n\r\n```\r\n$ git diff third_party/py/python_configure.bzl\r\ndiff --git a/third_party/py/python_configure.bzl b/third_party/py/python_configure.bzl\r\nindex ed576a25d..525f4acc6 100644\r\n--- a/third_party/py/python_configure.bzl\r\n+++ b/third_party/py/python_configure.bzl\r\n@@ -122,8 +122,10 @@ def _symlink_genrule_for_dir(repository_ctx, src_dir, dest_dir, genrule_name):\r\n         executable = True,\r\n         content = \"\\n\".join([\r\n             '@rem Auto-generated by //third_party/py/python_configure.bzl',\r\n-            '@mklink /J \"%s\" \"%s\"' % (dest_dir, src_dir)]))\r\n-    cmd = \"cmd.exe /c $$(echo $(location %s) | sed 's,/,\\\\\\\\,g')\" % cmd_script\r\n+           'set DEST_DIR=%%1\\\\%s\\\\' % dest_dir,\r\n+           'rmdir /s /q %DEST_DIR%',\r\n+            'xcopy /e /q /y \"%s\" \"%%DEST_DIR%%\"' % src_dir]))\r\n+    cmd = \"cmd.exe /c \\\\\\\"$$(echo $(location %s) $(@D) | sed 's/\\//\\\\\\\\\\\\\\\\/g')\\\\\\\"\" % cmd_script\r\n   else:\r\n     cmd_script = \"%s-cmd.sh\" % genrule_name\r\n     repository_ctx.file(\r\n```"}