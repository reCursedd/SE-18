{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9762", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9762/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9762/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9762/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/9762", "id": 227099218, "node_id": "MDExOlB1bGxSZXF1ZXN0MTE5NDgzNjA3", "number": 9762, "title": "Bazel CI / TensorFlow: fix more errors", "user": {"login": "laszlocsomor", "id": 10532244, "node_id": "MDQ6VXNlcjEwNTMyMjQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/10532244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laszlocsomor", "html_url": "https://github.com/laszlocsomor", "followers_url": "https://api.github.com/users/laszlocsomor/followers", "following_url": "https://api.github.com/users/laszlocsomor/following{/other_user}", "gists_url": "https://api.github.com/users/laszlocsomor/gists{/gist_id}", "starred_url": "https://api.github.com/users/laszlocsomor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laszlocsomor/subscriptions", "organizations_url": "https://api.github.com/users/laszlocsomor/orgs", "repos_url": "https://api.github.com/users/laszlocsomor/repos", "events_url": "https://api.github.com/users/laszlocsomor/events{/privacy}", "received_events_url": "https://api.github.com/users/laszlocsomor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2017-05-08T16:20:30Z", "updated_at": "2017-05-19T16:20:17Z", "closed_at": "2017-05-19T16:20:17Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9762", "html_url": "https://github.com/tensorflow/tensorflow/pull/9762", "diff_url": "https://github.com/tensorflow/tensorflow/pull/9762.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/9762.patch"}, "body_html": "<p>In this commit:</p>\n<ol>\n<li>\n<p>Keep just the first character of the python<br>\nversion checker script's output. This is a simple<br>\nway to strip \\n and \\r and we only need the major<br>\nversion anyway. The string is later used in<br>\nwriting the .bazelrc file where these characters<br>\nwould cause problems.</p>\n</li>\n<li>\n<p>Export environment variables in<br>\nrun_configure_for_cpu_build, use their default<br>\nvalues</p>\n</li>\n<li>\n<p>Allow a user-defined value for BAZEL_SH</p>\n</li>\n<li>\n<p>Fix python_configure.bzl:</p>\n</li>\n</ol>\n<p>4.a. Fix the symlink creation on Windows: create a<br>\nsingle junction pointing to the src_dir. This is a<br>\ntrick to get around the problem that on Windows we<br>\ncan't create symlinks. By creating this symlink<br>\nand declaring the same outputs as on Linux/Darwin,<br>\nwe make it look like that the genrule successfully<br>\nproduced these files. This only works in a<br>\nsingle-machine execution environment.</p>\n<p>4.b. Get rid of the \"select\" in<br>\n@local_config_python//:numpy_include and<br>\npython_include. The results of <code>find</code> and <code>dir</code><br>\nonly make sense on Linux/Darwin and Windows<br>\nrespectively, so there's no point in generating<br>\nthe non-Windows genrule on Windows and the<br>\nWindows-specific one on non-Windows, because all<br>\nthe paths would be wrong. So instead of that,<br>\ngenerate just the genrule corresponding to the<br>\nplatform.</p>\n<p>4.c. Write the genrule.cmd's commands to scripts<br>\nand execute those instead. This avoids the<br>\ndifficulties with escaping backslashes and quotes.<br>\nBackslashes are necessary on Windows because paths<br>\nwith forward slashes aren't generally accepted,<br>\ne.g. \"cmd.exe /c foo/bar\" doesn't work because<br>\nWindows believes foo is an executable and /bar is<br>\nits switch:</p>\n<pre><code>c:\\tempdir&gt;type bar.cmd\n@echo this is bar.cmd, %%1=(%1)\n\nc:\\tempdir&gt;cmd.exe /c bar/baz\nthis is bar.cmd, %1=(/baz)\n</code></pre>\n<ol start=\"5\">\n<li>simplify the \"is_windows\" function in<br>\n./configure</li>\n</ol>\n<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #2892.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"224477265\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/bazelbuild/bazel/issues/2892\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/2892/hovercard\" href=\"https://github.com/bazelbuild/bazel/issues/2892\">bazelbuild/bazel#2892</a></p>", "body_text": "In this commit:\n\n\nKeep just the first character of the python\nversion checker script's output. This is a simple\nway to strip \\n and \\r and we only need the major\nversion anyway. The string is later used in\nwriting the .bazelrc file where these characters\nwould cause problems.\n\n\nExport environment variables in\nrun_configure_for_cpu_build, use their default\nvalues\n\n\nAllow a user-defined value for BAZEL_SH\n\n\nFix python_configure.bzl:\n\n\n4.a. Fix the symlink creation on Windows: create a\nsingle junction pointing to the src_dir. This is a\ntrick to get around the problem that on Windows we\ncan't create symlinks. By creating this symlink\nand declaring the same outputs as on Linux/Darwin,\nwe make it look like that the genrule successfully\nproduced these files. This only works in a\nsingle-machine execution environment.\n4.b. Get rid of the \"select\" in\n@local_config_python//:numpy_include and\npython_include. The results of find and dir\nonly make sense on Linux/Darwin and Windows\nrespectively, so there's no point in generating\nthe non-Windows genrule on Windows and the\nWindows-specific one on non-Windows, because all\nthe paths would be wrong. So instead of that,\ngenerate just the genrule corresponding to the\nplatform.\n4.c. Write the genrule.cmd's commands to scripts\nand execute those instead. This avoids the\ndifficulties with escaping backslashes and quotes.\nBackslashes are necessary on Windows because paths\nwith forward slashes aren't generally accepted,\ne.g. \"cmd.exe /c foo/bar\" doesn't work because\nWindows believes foo is an executable and /bar is\nits switch:\nc:\\tempdir>type bar.cmd\n@echo this is bar.cmd, %%1=(%1)\n\nc:\\tempdir>cmd.exe /c bar/baz\nthis is bar.cmd, %1=(/baz)\n\n\nsimplify the \"is_windows\" function in\n./configure\n\nFixes bazelbuild/bazel#2892", "body": "In this commit:\r\n\r\n1. Keep just the first character of the python\r\nversion checker script's output. This is a simple\r\nway to strip \\n and \\r and we only need the major\r\nversion anyway. The string is later used in\r\nwriting the .bazelrc file where these characters\r\nwould cause problems.\r\n\r\n2. Export environment variables in\r\nrun_configure_for_cpu_build, use their default\r\nvalues\r\n\r\n3. Allow a user-defined value for BAZEL_SH\r\n\r\n4. Fix python_configure.bzl:\r\n\r\n4.a. Fix the symlink creation on Windows: create a\r\nsingle junction pointing to the src_dir. This is a\r\ntrick to get around the problem that on Windows we\r\ncan't create symlinks. By creating this symlink\r\nand declaring the same outputs as on Linux/Darwin,\r\nwe make it look like that the genrule successfully\r\nproduced these files. This only works in a\r\nsingle-machine execution environment.\r\n\r\n4.b. Get rid of the \"select\" in\r\n@local_config_python//:numpy_include and\r\npython_include. The results of `find` and `dir`\r\nonly make sense on Linux/Darwin and Windows\r\nrespectively, so there's no point in generating\r\nthe non-Windows genrule on Windows and the\r\nWindows-specific one on non-Windows, because all\r\nthe paths would be wrong. So instead of that,\r\ngenerate just the genrule corresponding to the\r\nplatform.\r\n\r\n4.c. Write the genrule.cmd's commands to scripts\r\nand execute those instead. This avoids the\r\ndifficulties with escaping backslashes and quotes.\r\nBackslashes are necessary on Windows because paths\r\nwith forward slashes aren't generally accepted,\r\ne.g. \"cmd.exe /c foo/bar\" doesn't work because\r\nWindows believes foo is an executable and /bar is\r\nits switch:\r\n\r\n    c:\\tempdir>type bar.cmd\r\n    @echo this is bar.cmd, %%1=(%1)\r\n\r\n    c:\\tempdir>cmd.exe /c bar/baz\r\n    this is bar.cmd, %1=(/baz)\r\n\r\n5. simplify the \"is_windows\" function in\r\n./configure\r\n\r\nFixes https://github.com/bazelbuild/bazel/issues/2892"}