{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/293464092", "html_url": "https://github.com/tensorflow/tensorflow/issues/9132#issuecomment-293464092", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9132", "id": 293464092, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzQ2NDA5Mg==", "user": {"login": "qazmichaelgw", "id": 8761378, "node_id": "MDQ6VXNlcjg3NjEzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/8761378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qazmichaelgw", "html_url": "https://github.com/qazmichaelgw", "followers_url": "https://api.github.com/users/qazmichaelgw/followers", "following_url": "https://api.github.com/users/qazmichaelgw/following{/other_user}", "gists_url": "https://api.github.com/users/qazmichaelgw/gists{/gist_id}", "starred_url": "https://api.github.com/users/qazmichaelgw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qazmichaelgw/subscriptions", "organizations_url": "https://api.github.com/users/qazmichaelgw/orgs", "repos_url": "https://api.github.com/users/qazmichaelgw/repos", "events_url": "https://api.github.com/users/qazmichaelgw/events{/privacy}", "received_events_url": "https://api.github.com/users/qazmichaelgw/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-12T03:35:05Z", "updated_at": "2017-04-12T03:37:08Z", "author_association": "NONE", "body_html": "<p>It seems that the problem comes from the conflicts with cv2 package. I used the deep learning models from <a href=\"https://github.com/fchollet/deep-learning-models\">https://github.com/fchollet/deep-learning-models</a>.</p>\n<pre><code>def preprocess_input(x, dim_ordering='default'):\n     if dim_ordering == 'default':\n         dim_ordering = K.image_dim_ordering()\n     assert dim_ordering in {'tf', 'th'}\n \n     if dim_ordering == 'th':\n         x[0, :, :] -= 103.939\n         x[1, :, :] -= 116.779\n         x[2, :, :] -= 123.68\n         # 'RGB'-&gt;'BGR'\n         x = x[::-1, :, :]\n     else:\n         x[:, :, 0] -= 103.939\n         x[:, :, 1] -= 116.779\n         x[:, :, 2] -= 123.68\n         # 'RGB'-&gt;'BGR'\n         x = x[:, :, ::-1]\n     return x\n\ndef preprocess_image(im):\n     im = cv2.resize(im, (224, 224)).astype(np.float32)\n     im = preprocess_input(im)\n \n     dim_ordering = K.image_dim_ordering()\n     print dim_ordering\n     assert dim_ordering in {'tf', 'th'}\n \n     if dim_ordering == 'th':\n         im = im.transpose((2,0,1))\n     return im\n\ndef eval(self):\n         img_path = 'elephant.jpg'\n         img = image.load_img(img_path, target_size=(224, 224))\n         x = image.img_to_array(img)\n         #x = preprocess_input(x)\n         #x = np.expand_dims(x, axis=0)\n         x = preprocess_image(x)\n         x = np.expand_dims(x, axis=0)\n         print('Input image shape:', x.shape)\n         intention = np.expand_dims(config.transform_intention(config.FORWARD),      axis=0)\n \n         print x.shape, intention.shape\n         pred = self.model.predict([x, intention])\n         print 'pred', pred\n\n</code></pre>\n<p>When I call preprocess_image() in the eval() function, I got the error:<br>\n2017-04-12 11:29:55.861593: E tensorflow/stream_executor/cuda/cuda_dnn.cc:359] could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR<br>\n2017-04-12 11:29:55.861630: E tensorflow/stream_executor/cuda/cuda_dnn.cc:326] could not destroy cudnn handle: CUDNN_STATUS_BAD_PARAM<br>\n2017-04-12 11:29:55.861639: F tensorflow/core/kernels/conv_ops.cc:665] Check failed: stream-&gt;parent()-&gt;GetConvolveAlgorithms(&amp;algorithms)<br>\nAborted (core dumped)<br>\nBut If I call preprocess_input(), there is no error. It's very weired.<br>\nThanks a lot.</p>", "body_text": "It seems that the problem comes from the conflicts with cv2 package. I used the deep learning models from https://github.com/fchollet/deep-learning-models.\ndef preprocess_input(x, dim_ordering='default'):\n     if dim_ordering == 'default':\n         dim_ordering = K.image_dim_ordering()\n     assert dim_ordering in {'tf', 'th'}\n \n     if dim_ordering == 'th':\n         x[0, :, :] -= 103.939\n         x[1, :, :] -= 116.779\n         x[2, :, :] -= 123.68\n         # 'RGB'->'BGR'\n         x = x[::-1, :, :]\n     else:\n         x[:, :, 0] -= 103.939\n         x[:, :, 1] -= 116.779\n         x[:, :, 2] -= 123.68\n         # 'RGB'->'BGR'\n         x = x[:, :, ::-1]\n     return x\n\ndef preprocess_image(im):\n     im = cv2.resize(im, (224, 224)).astype(np.float32)\n     im = preprocess_input(im)\n \n     dim_ordering = K.image_dim_ordering()\n     print dim_ordering\n     assert dim_ordering in {'tf', 'th'}\n \n     if dim_ordering == 'th':\n         im = im.transpose((2,0,1))\n     return im\n\ndef eval(self):\n         img_path = 'elephant.jpg'\n         img = image.load_img(img_path, target_size=(224, 224))\n         x = image.img_to_array(img)\n         #x = preprocess_input(x)\n         #x = np.expand_dims(x, axis=0)\n         x = preprocess_image(x)\n         x = np.expand_dims(x, axis=0)\n         print('Input image shape:', x.shape)\n         intention = np.expand_dims(config.transform_intention(config.FORWARD),      axis=0)\n \n         print x.shape, intention.shape\n         pred = self.model.predict([x, intention])\n         print 'pred', pred\n\n\nWhen I call preprocess_image() in the eval() function, I got the error:\n2017-04-12 11:29:55.861593: E tensorflow/stream_executor/cuda/cuda_dnn.cc:359] could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR\n2017-04-12 11:29:55.861630: E tensorflow/stream_executor/cuda/cuda_dnn.cc:326] could not destroy cudnn handle: CUDNN_STATUS_BAD_PARAM\n2017-04-12 11:29:55.861639: F tensorflow/core/kernels/conv_ops.cc:665] Check failed: stream->parent()->GetConvolveAlgorithms(&algorithms)\nAborted (core dumped)\nBut If I call preprocess_input(), there is no error. It's very weired.\nThanks a lot.", "body": "It seems that the problem comes from the conflicts with cv2 package. I used the deep learning models from https://github.com/fchollet/deep-learning-models. \r\n~~~~\r\ndef preprocess_input(x, dim_ordering='default'):\r\n     if dim_ordering == 'default':\r\n         dim_ordering = K.image_dim_ordering()\r\n     assert dim_ordering in {'tf', 'th'}\r\n \r\n     if dim_ordering == 'th':\r\n         x[0, :, :] -= 103.939\r\n         x[1, :, :] -= 116.779\r\n         x[2, :, :] -= 123.68\r\n         # 'RGB'->'BGR'\r\n         x = x[::-1, :, :]\r\n     else:\r\n         x[:, :, 0] -= 103.939\r\n         x[:, :, 1] -= 116.779\r\n         x[:, :, 2] -= 123.68\r\n         # 'RGB'->'BGR'\r\n         x = x[:, :, ::-1]\r\n     return x\r\n\r\ndef preprocess_image(im):\r\n     im = cv2.resize(im, (224, 224)).astype(np.float32)\r\n     im = preprocess_input(im)\r\n \r\n     dim_ordering = K.image_dim_ordering()\r\n     print dim_ordering\r\n     assert dim_ordering in {'tf', 'th'}\r\n \r\n     if dim_ordering == 'th':\r\n         im = im.transpose((2,0,1))\r\n     return im\r\n\r\ndef eval(self):\r\n         img_path = 'elephant.jpg'\r\n         img = image.load_img(img_path, target_size=(224, 224))\r\n         x = image.img_to_array(img)\r\n         #x = preprocess_input(x)\r\n         #x = np.expand_dims(x, axis=0)\r\n         x = preprocess_image(x)\r\n         x = np.expand_dims(x, axis=0)\r\n         print('Input image shape:', x.shape)\r\n         intention = np.expand_dims(config.transform_intention(config.FORWARD),      axis=0)\r\n \r\n         print x.shape, intention.shape\r\n         pred = self.model.predict([x, intention])\r\n         print 'pred', pred\r\n\r\n~~~~\r\nWhen I call preprocess_image() in the eval() function, I got the error:\r\n2017-04-12 11:29:55.861593: E tensorflow/stream_executor/cuda/cuda_dnn.cc:359] could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR\r\n2017-04-12 11:29:55.861630: E tensorflow/stream_executor/cuda/cuda_dnn.cc:326] could not destroy cudnn handle: CUDNN_STATUS_BAD_PARAM\r\n2017-04-12 11:29:55.861639: F tensorflow/core/kernels/conv_ops.cc:665] Check failed: stream->parent()->GetConvolveAlgorithms(&algorithms) \r\nAborted (core dumped)\r\nBut If I call preprocess_input(), there is no error. It's very weired.\r\nThanks a lot."}