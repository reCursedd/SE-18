{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23514", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23514/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23514/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23514/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23514", "id": 377293815, "node_id": "MDU6SXNzdWUzNzcyOTM4MTU=", "number": 23514, "title": "poor performance on conv2d with ow=1", "user": {"login": "lxn179208", "id": 811605, "node_id": "MDQ6VXNlcjgxMTYwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/811605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lxn179208", "html_url": "https://github.com/lxn179208", "followers_url": "https://api.github.com/users/lxn179208/followers", "following_url": "https://api.github.com/users/lxn179208/following{/other_user}", "gists_url": "https://api.github.com/users/lxn179208/gists{/gist_id}", "starred_url": "https://api.github.com/users/lxn179208/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lxn179208/subscriptions", "organizations_url": "https://api.github.com/users/lxn179208/orgs", "repos_url": "https://api.github.com/users/lxn179208/repos", "events_url": "https://api.github.com/users/lxn179208/events{/privacy}", "received_events_url": "https://api.github.com/users/lxn179208/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1104829434, "node_id": "MDU6TGFiZWwxMTA0ODI5NDM0", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:mkl", "name": "comp:mkl", "color": "0052cc", "default": false}], "state": "open", "locked": false, "assignee": {"login": "TensorFlow-MKL", "id": 44416303, "node_id": "MDQ6VXNlcjQ0NDE2MzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/44416303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TensorFlow-MKL", "html_url": "https://github.com/TensorFlow-MKL", "followers_url": "https://api.github.com/users/TensorFlow-MKL/followers", "following_url": "https://api.github.com/users/TensorFlow-MKL/following{/other_user}", "gists_url": "https://api.github.com/users/TensorFlow-MKL/gists{/gist_id}", "starred_url": "https://api.github.com/users/TensorFlow-MKL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TensorFlow-MKL/subscriptions", "organizations_url": "https://api.github.com/users/TensorFlow-MKL/orgs", "repos_url": "https://api.github.com/users/TensorFlow-MKL/repos", "events_url": "https://api.github.com/users/TensorFlow-MKL/events{/privacy}", "received_events_url": "https://api.github.com/users/TensorFlow-MKL/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TensorFlow-MKL", "id": 44416303, "node_id": "MDQ6VXNlcjQ0NDE2MzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/44416303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TensorFlow-MKL", "html_url": "https://github.com/TensorFlow-MKL", "followers_url": "https://api.github.com/users/TensorFlow-MKL/followers", "following_url": "https://api.github.com/users/TensorFlow-MKL/following{/other_user}", "gists_url": "https://api.github.com/users/TensorFlow-MKL/gists{/gist_id}", "starred_url": "https://api.github.com/users/TensorFlow-MKL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TensorFlow-MKL/subscriptions", "organizations_url": "https://api.github.com/users/TensorFlow-MKL/orgs", "repos_url": "https://api.github.com/users/TensorFlow-MKL/repos", "events_url": "https://api.github.com/users/TensorFlow-MKL/events{/privacy}", "received_events_url": "https://api.github.com/users/TensorFlow-MKL/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-05T08:25:16Z", "updated_at": "2018-11-21T18:58:58Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><em>Please make sure that this is a bug. As per our <a href=\"https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md\">GitHub Policy</a>, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template</em></p>\n<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow):yes</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04):linux</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:no</li>\n<li>TensorFlow installed from (source or binary):binary</li>\n<li>TensorFlow version (use command below):'v1.11.0-0-gc19e293', '1.11.0'</li>\n<li>Python version:2.7.5</li>\n<li>Bazel version (if compiling from source):no</li>\n<li>GCC/Compiler version (if compiling from source):no</li>\n<li>CUDA/cuDNN version:no</li>\n<li>GPU model and memory:no</li>\n</ul>\n<p>I try to optimize the voice synthesize model, with a lot of conv1d invoke fllowing the steps of <a href=\"https://www.tensorflow.org/guide/performance/overview#optimizing_for_cpu\" rel=\"nofollow\">https://www.tensorflow.org/guide/performance/overview#optimizing_for_cpu</a>, I found the results on tensorflow v1.11.0 with mkl version is slower 50% than the same tensorflow without mkl.</p>\n<p>First of all, based on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"343521538\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/intel/mkl-dnn/issues/285\" data-hovercard-type=\"issue\" data-hovercard-url=\"/intel/mkl-dnn/issues/285/hovercard\" href=\"https://github.com/intel/mkl-dnn/issues/285\">intel/mkl-dnn#285</a>,  I test conv2d NCHW with respectively oh=1 or ow=1. I found ow=1 slower slower than oh=1.</p>\n<p>So I doubt how to optimize cpu performance on conv1d ???</p>\n<hr>\n<h3>Environment</h3>\n<p>Intel MKL-DNN includes hardware-specific optimizations and may behave<br>\ndifferently on depending on the compiler and build environment. Include<br>\nthe following information to help reproduce the issue:</p>\n<ul>\n<li>Intel(R) Xeon(R) CPU E5-2682 v4 @ 2.50GHz</li>\n<li>company internal version based on centos</li>\n<li>4.9.2</li>\n<li>empty value</li>\n<li>no cmake</li>\n<li>tensorflow 1.11</li>\n</ul>\n<h3>Steps to reproduce</h3>\n<pre><code>isntall fllowing https://software.intel.com/en-us/articles/intel-optimization-for-tensorflow-installation-guide\n# Python 2.7\npip install https://storage.googleapis.com/intel-optimized-tensorflow/tensorflow-1.11.0-cp27-cp27mu-linux_x86_64.whl \n\n</code></pre>\n<p>ow =1  cmd</p>\n<pre><code>MKLDNN_VERBOSE=1 KMP_BLOCKTIME=0 CUDA_VISIBLE_DEVICES=-1  OMP_NUM_THREADS=32 python conv2d.py  ow\n\now=1\n2018-11-05 15:42:35.614687: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\nstart\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nchw out:f32_nChw8c,num:1,32x128x102400x1,85.6531\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_hwio out:f32_OIhw8i8o,num:1,128x128x3x1,0.134766\nmkldnn_verbose,exec,convolution,jit:avx2,forward_training,fsrc:nChw8c fwei:OIhw8i8o fbia:undef fdst:nChw8c,alg:convolution_direct,mb32_g1ic128oc128_ih102400oh102398kh3sh1dh0ph0_iw1ow1kw1sw1dw0pw0,991.858\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nChw8c out:f32_nchw,num:1,32x128x102398x1,174.348\ndata_format_2d=NCHW 100 epoch cost 2.131751\n</code></pre>\n<p>oh =1  cmd</p>\n<pre><code>MKLDNN_VERBOSE=1 KMP_BLOCKTIME=0 CUDA_VISIBLE_DEVICES=-1  OMP_NUM_THREADS=32 python conv2d.py  oh\noh=1\n2018-11-05 15:42:05.224622: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\nstart\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nchw out:f32_nChw8c,num:1,32x128x1x102400,91.1848\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_hwio out:f32_OIhw8i8o,num:1,128x128x1x3,0.152832\nmkldnn_verbose,exec,convolution,jit:avx2,forward_training,fsrc:nChw8c fwei:OIhw8i8o fbia:undef fdst:nChw8c,alg:convolution_direct,mb32_g1ic128oc128_ih1oh1kh1sh1dh0ph0_iw102400ow102398kw3sw1dw0pw0,835.947\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nChw8c out:f32_nchw,num:1,32x128x1x102398,199.113\ndata_format_2d=NCHW 100 epoch cost 1.990710\n\n</code></pre>\n<h3>the code shows</h3>\n<pre><code>import os\nimport sys\nimport tensorflow as tf\nimport numpy as np\nimport time\n\n\"\"\"\ndefault NWC\ninput=[batch, in_width, in_channels]  filter=[ filter_width, in_channels, out_channels]\n=&gt;tf.nn.conv2d  [batch,1,in_width, in_channels]  [1, filter_width, in_channels, out_channels]\n\nmkl NCW\ninput=[batch, in_channels, in_width] filter=[filter_width, in_channels, out_channels]\n=&gt;tf.nn.conv2d []\n\"\"\"\n\nbatch = 32\nin_width = 102400\nin_height = 1\nin_channels = 128\nfilter_width = 3\nfilter_height = 1\nout_channels = 128\ndata_format_2d = 'NCHW'\nn = 100\nstart = 99\ninput_2d = {}\n\nif len(sys.argv) == 2 and sys.argv[1] == \"ow\":\n    print(\"ow=1\")\n    in_width,in_height = in_height, in_width\n    filter_width,filter_height = filter_height, filter_width\nelse:\n    print(\"oh=1\")\nif data_format_2d == \"NCHW\":\n    input_ = np.array(np.arange(1, 1 + batch*in_width*in_height*in_channels).reshape([batch, in_channels, in_height,in_width]), dtype=np.float32)\nelse:\n    input_ = np.array(np.arange(1, 1 + batch*in_width*in_height*in_channels).reshape([batch, in_height,in_width,in_channels]), dtype=np.float32)\nfor i in range(start,n):\n    input_2d[i] = input_ + i*n*i*1.0\nkernel_2d = np.array(np.arange(1, 1 + filter_width*filter_height*in_channels*out_channels), dtype=np.float32).reshape([filter_height, filter_width, in_channels, out_channels])\na = tf.placeholder(dtype=tf.float32)\nconv2d = tf.nn.conv2d(a, kernel_2d, [1,1,1,1], 'VALID', data_format=data_format_2d)\n\nconfig = tf.ConfigProto()\nconfig.intra_op_parallelism_threads = 32\nconfig.inter_op_parallelism_threads = 2\nsess = tf.Session(config=config)\n\nprint(\"start\")\nsess.run(tf.global_variables_initializer())\nstart_ts = time.time()\nfor i in range(start,n):\n    sess.run(conv2d, feed_dict={a:input_2d[i]})\nprint(\"data_format_2d=%s %d epoch cost %f\" % (data_format_2d,n, (time.time()) - start_ts))\n</code></pre>", "body_text": "Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):linux\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:no\nTensorFlow installed from (source or binary):binary\nTensorFlow version (use command below):'v1.11.0-0-gc19e293', '1.11.0'\nPython version:2.7.5\nBazel version (if compiling from source):no\nGCC/Compiler version (if compiling from source):no\nCUDA/cuDNN version:no\nGPU model and memory:no\n\nI try to optimize the voice synthesize model, with a lot of conv1d invoke fllowing the steps of https://www.tensorflow.org/guide/performance/overview#optimizing_for_cpu, I found the results on tensorflow v1.11.0 with mkl version is slower 50% than the same tensorflow without mkl.\nFirst of all, based on intel/mkl-dnn#285,  I test conv2d NCHW with respectively oh=1 or ow=1. I found ow=1 slower slower than oh=1.\nSo I doubt how to optimize cpu performance on conv1d ???\n\nEnvironment\nIntel MKL-DNN includes hardware-specific optimizations and may behave\ndifferently on depending on the compiler and build environment. Include\nthe following information to help reproduce the issue:\n\nIntel(R) Xeon(R) CPU E5-2682 v4 @ 2.50GHz\ncompany internal version based on centos\n4.9.2\nempty value\nno cmake\ntensorflow 1.11\n\nSteps to reproduce\nisntall fllowing https://software.intel.com/en-us/articles/intel-optimization-for-tensorflow-installation-guide\n# Python 2.7\npip install https://storage.googleapis.com/intel-optimized-tensorflow/tensorflow-1.11.0-cp27-cp27mu-linux_x86_64.whl \n\n\now =1  cmd\nMKLDNN_VERBOSE=1 KMP_BLOCKTIME=0 CUDA_VISIBLE_DEVICES=-1  OMP_NUM_THREADS=32 python conv2d.py  ow\n\now=1\n2018-11-05 15:42:35.614687: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\nstart\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nchw out:f32_nChw8c,num:1,32x128x102400x1,85.6531\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_hwio out:f32_OIhw8i8o,num:1,128x128x3x1,0.134766\nmkldnn_verbose,exec,convolution,jit:avx2,forward_training,fsrc:nChw8c fwei:OIhw8i8o fbia:undef fdst:nChw8c,alg:convolution_direct,mb32_g1ic128oc128_ih102400oh102398kh3sh1dh0ph0_iw1ow1kw1sw1dw0pw0,991.858\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nChw8c out:f32_nchw,num:1,32x128x102398x1,174.348\ndata_format_2d=NCHW 100 epoch cost 2.131751\n\noh =1  cmd\nMKLDNN_VERBOSE=1 KMP_BLOCKTIME=0 CUDA_VISIBLE_DEVICES=-1  OMP_NUM_THREADS=32 python conv2d.py  oh\noh=1\n2018-11-05 15:42:05.224622: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\nstart\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nchw out:f32_nChw8c,num:1,32x128x1x102400,91.1848\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_hwio out:f32_OIhw8i8o,num:1,128x128x1x3,0.152832\nmkldnn_verbose,exec,convolution,jit:avx2,forward_training,fsrc:nChw8c fwei:OIhw8i8o fbia:undef fdst:nChw8c,alg:convolution_direct,mb32_g1ic128oc128_ih1oh1kh1sh1dh0ph0_iw102400ow102398kw3sw1dw0pw0,835.947\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nChw8c out:f32_nchw,num:1,32x128x1x102398,199.113\ndata_format_2d=NCHW 100 epoch cost 1.990710\n\n\nthe code shows\nimport os\nimport sys\nimport tensorflow as tf\nimport numpy as np\nimport time\n\n\"\"\"\ndefault NWC\ninput=[batch, in_width, in_channels]  filter=[ filter_width, in_channels, out_channels]\n=>tf.nn.conv2d  [batch,1,in_width, in_channels]  [1, filter_width, in_channels, out_channels]\n\nmkl NCW\ninput=[batch, in_channels, in_width] filter=[filter_width, in_channels, out_channels]\n=>tf.nn.conv2d []\n\"\"\"\n\nbatch = 32\nin_width = 102400\nin_height = 1\nin_channels = 128\nfilter_width = 3\nfilter_height = 1\nout_channels = 128\ndata_format_2d = 'NCHW'\nn = 100\nstart = 99\ninput_2d = {}\n\nif len(sys.argv) == 2 and sys.argv[1] == \"ow\":\n    print(\"ow=1\")\n    in_width,in_height = in_height, in_width\n    filter_width,filter_height = filter_height, filter_width\nelse:\n    print(\"oh=1\")\nif data_format_2d == \"NCHW\":\n    input_ = np.array(np.arange(1, 1 + batch*in_width*in_height*in_channels).reshape([batch, in_channels, in_height,in_width]), dtype=np.float32)\nelse:\n    input_ = np.array(np.arange(1, 1 + batch*in_width*in_height*in_channels).reshape([batch, in_height,in_width,in_channels]), dtype=np.float32)\nfor i in range(start,n):\n    input_2d[i] = input_ + i*n*i*1.0\nkernel_2d = np.array(np.arange(1, 1 + filter_width*filter_height*in_channels*out_channels), dtype=np.float32).reshape([filter_height, filter_width, in_channels, out_channels])\na = tf.placeholder(dtype=tf.float32)\nconv2d = tf.nn.conv2d(a, kernel_2d, [1,1,1,1], 'VALID', data_format=data_format_2d)\n\nconfig = tf.ConfigProto()\nconfig.intra_op_parallelism_threads = 32\nconfig.inter_op_parallelism_threads = 2\nsess = tf.Session(config=config)\n\nprint(\"start\")\nsess.run(tf.global_variables_initializer())\nstart_ts = time.time()\nfor i in range(start,n):\n    sess.run(conv2d, feed_dict={a:input_2d[i]})\nprint(\"data_format_2d=%s %d epoch cost %f\" % (data_format_2d,n, (time.time()) - start_ts))", "body": "<em>Please make sure that this is a bug. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template</em>\r\n\r\n**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):linux\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:no\r\n- TensorFlow installed from (source or binary):binary\r\n- TensorFlow version (use command below):'v1.11.0-0-gc19e293', '1.11.0'\r\n- Python version:2.7.5\r\n- Bazel version (if compiling from source):no\r\n- GCC/Compiler version (if compiling from source):no\r\n- CUDA/cuDNN version:no\r\n- GPU model and memory:no\r\n\r\n\r\nI try to optimize the voice synthesize model, with a lot of conv1d invoke fllowing the steps of https://www.tensorflow.org/guide/performance/overview#optimizing_for_cpu, I found the results on tensorflow v1.11.0 with mkl version is slower 50% than the same tensorflow without mkl.\r\n\r\nFirst of all, based on https://github.com/intel/mkl-dnn/issues/285,  I test conv2d NCHW with respectively oh=1 or ow=1. I found ow=1 slower slower than oh=1.\r\n\r\nSo I doubt how to optimize cpu performance on conv1d ???\r\n\r\n\r\n-----------------------------------------------------------------------------\r\n\r\n### Environment\r\nIntel MKL-DNN includes hardware-specific optimizations and may behave\r\ndifferently on depending on the compiler and build environment. Include\r\nthe following information to help reproduce the issue:\r\n* Intel(R) Xeon(R) CPU E5-2682 v4 @ 2.50GHz\r\n* company internal version based on centos\r\n* 4.9.2\r\n* empty value\r\n* no cmake\r\n* tensorflow 1.11\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nisntall fllowing https://software.intel.com/en-us/articles/intel-optimization-for-tensorflow-installation-guide\r\n# Python 2.7\r\npip install https://storage.googleapis.com/intel-optimized-tensorflow/tensorflow-1.11.0-cp27-cp27mu-linux_x86_64.whl \r\n\r\n```\r\now =1  cmd\r\n\r\n```\r\nMKLDNN_VERBOSE=1 KMP_BLOCKTIME=0 CUDA_VISIBLE_DEVICES=-1  OMP_NUM_THREADS=32 python conv2d.py  ow\r\n\r\now=1\r\n2018-11-05 15:42:35.614687: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\nstart\r\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nchw out:f32_nChw8c,num:1,32x128x102400x1,85.6531\r\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_hwio out:f32_OIhw8i8o,num:1,128x128x3x1,0.134766\r\nmkldnn_verbose,exec,convolution,jit:avx2,forward_training,fsrc:nChw8c fwei:OIhw8i8o fbia:undef fdst:nChw8c,alg:convolution_direct,mb32_g1ic128oc128_ih102400oh102398kh3sh1dh0ph0_iw1ow1kw1sw1dw0pw0,991.858\r\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nChw8c out:f32_nchw,num:1,32x128x102398x1,174.348\r\ndata_format_2d=NCHW 100 epoch cost 2.131751\r\n```\r\noh =1  cmd\r\n\r\n```\r\nMKLDNN_VERBOSE=1 KMP_BLOCKTIME=0 CUDA_VISIBLE_DEVICES=-1  OMP_NUM_THREADS=32 python conv2d.py  oh\r\noh=1\r\n2018-11-05 15:42:05.224622: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\nstart\r\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nchw out:f32_nChw8c,num:1,32x128x1x102400,91.1848\r\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_hwio out:f32_OIhw8i8o,num:1,128x128x1x3,0.152832\r\nmkldnn_verbose,exec,convolution,jit:avx2,forward_training,fsrc:nChw8c fwei:OIhw8i8o fbia:undef fdst:nChw8c,alg:convolution_direct,mb32_g1ic128oc128_ih1oh1kh1sh1dh0ph0_iw102400ow102398kw3sw1dw0pw0,835.947\r\nmkldnn_verbose,exec,reorder,jit:uni,undef,in:f32_nChw8c out:f32_nchw,num:1,32x128x1x102398,199.113\r\ndata_format_2d=NCHW 100 epoch cost 1.990710\r\n\r\n```\r\n\r\n### the code shows\r\n\r\n```\r\nimport os\r\nimport sys\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport time\r\n\r\n\"\"\"\r\ndefault NWC\r\ninput=[batch, in_width, in_channels]  filter=[ filter_width, in_channels, out_channels]\r\n=>tf.nn.conv2d  [batch,1,in_width, in_channels]  [1, filter_width, in_channels, out_channels]\r\n\r\nmkl NCW\r\ninput=[batch, in_channels, in_width] filter=[filter_width, in_channels, out_channels]\r\n=>tf.nn.conv2d []\r\n\"\"\"\r\n\r\nbatch = 32\r\nin_width = 102400\r\nin_height = 1\r\nin_channels = 128\r\nfilter_width = 3\r\nfilter_height = 1\r\nout_channels = 128\r\ndata_format_2d = 'NCHW'\r\nn = 100\r\nstart = 99\r\ninput_2d = {}\r\n\r\nif len(sys.argv) == 2 and sys.argv[1] == \"ow\":\r\n    print(\"ow=1\")\r\n    in_width,in_height = in_height, in_width\r\n    filter_width,filter_height = filter_height, filter_width\r\nelse:\r\n    print(\"oh=1\")\r\nif data_format_2d == \"NCHW\":\r\n    input_ = np.array(np.arange(1, 1 + batch*in_width*in_height*in_channels).reshape([batch, in_channels, in_height,in_width]), dtype=np.float32)\r\nelse:\r\n    input_ = np.array(np.arange(1, 1 + batch*in_width*in_height*in_channels).reshape([batch, in_height,in_width,in_channels]), dtype=np.float32)\r\nfor i in range(start,n):\r\n    input_2d[i] = input_ + i*n*i*1.0\r\nkernel_2d = np.array(np.arange(1, 1 + filter_width*filter_height*in_channels*out_channels), dtype=np.float32).reshape([filter_height, filter_width, in_channels, out_channels])\r\na = tf.placeholder(dtype=tf.float32)\r\nconv2d = tf.nn.conv2d(a, kernel_2d, [1,1,1,1], 'VALID', data_format=data_format_2d)\r\n\r\nconfig = tf.ConfigProto()\r\nconfig.intra_op_parallelism_threads = 32\r\nconfig.inter_op_parallelism_threads = 2\r\nsess = tf.Session(config=config)\r\n\r\nprint(\"start\")\r\nsess.run(tf.global_variables_initializer())\r\nstart_ts = time.time()\r\nfor i in range(start,n):\r\n    sess.run(conv2d, feed_dict={a:input_2d[i]})\r\nprint(\"data_format_2d=%s %d epoch cost %f\" % (data_format_2d,n, (time.time()) - start_ts))\r\n```\r\n\r\n"}