{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/97177305", "pull_request_review_id": 17787005, "id": 97177305, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3MTc3MzA1", "diff_hunk": "@@ -698,3 +702,74 @@ def _as_graph_element(obj):\n                        \"as this `Operation` has multiple outputs \"\n                        \"(at least 2).\" % obj)\n   return element\n+\n+\n+class ProfilerHook(session_run_hook.SessionRunHook):\n+  \"\"\"Captures CPU/GPU profiling information every N steps or seconds.\n+\n+  This produces files called \"timeline-<step>.json\", which are in Chrome\n+  Trace format.\n+\n+  For more information see:\n+  https://github.com/catapult-project/catapult/blob/master/tracing/README.md\"\"\"\n+\n+  def __init__(self,\n+               save_steps=None,\n+               save_secs=None,\n+               output_dir=\"\",\n+               show_dataflow=True,\n+               show_memory=False):\n+    \"\"\"Initializes a hook that takes periodic profiling snapshots.\n+\n+    Args:\n+      save_steps: `int`, save profile traces every N steps. Exactly one of\n+          `save_secs` and `save_steps` should be set.\n+      save_secs: `int`, save profile traces every N seconds.\n+      output_dir: `string`, the directory to save the profile traces to.\n+          Defaults to the current directory.\n+      show_dataflow: `bool`, if True, add flow events to the trace connecting\n+          producers and consumers of tensors.\n+      show_memory: `bool`, if True, add object snapshot events to the trace\n+          showing the sizes and lifetimes of tensors.\n+    \"\"\"\n+    self._output_file = os.path.join(output_dir, \"timeline-{}.json\")\n+    self._show_dataflow = show_dataflow\n+    self._show_memory = show_memory\n+    self._timer = SecondOrStepTimer(every_secs=save_secs,\n+                                    every_steps=save_steps)\n+\n+  def begin(self):\n+    self._next_step = None\n+    self._global_step_tensor = training_util.get_global_step()\n+    if self._global_step_tensor is None:\n+      raise RuntimeError(\n+          \"Global step should be created to use ProfilerHook.\")\n+\n+  def before_run(self, run_context):\n+    self._request_summary = (\n+        self._next_step is None or\n+        self._timer.should_trigger_for_step(self._next_step))\n+    requests = {\"global_step\": self._global_step_tensor}\n+    opts = (config_pb2.RunOptions(trace_level=config_pb2.RunOptions.FULL_TRACE)\n+            if self._request_summary else None)\n+\n+    return SessionRunArgs(requests, options=opts)\n+\n+  def after_run(self, run_context, run_values):\n+    global_step = run_values.results[\"global_step\"]\n+\n+    if self._request_summary:\n+      self._timer.update_last_triggered_step(global_step)\n+      self._save(global_step,\n+                 self._output_file.format(global_step),\n+                 run_values.run_metadata.step_stats)\n+\n+    self._next_step = global_step + 1\n+\n+  def _save(self, step, save_path, step_stats):\n+    logging.info(\"Saving timeline for %d into '%s'.\", step, save_path)\n+    with gfile.Open(save_path, \"w\") as f:\n+        trace = timeline.Timeline(step_stats)", "path": "tensorflow/python/training/basic_session_run_hooks.py", "position": null, "original_position": 92, "commit_id": "0af55e255e27d5ae3bfe64f93215ee91788101e4", "original_commit_id": "25bec955e498e61442fbe63e553cf08c67fc66d0", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "body": "Lint error here, please indent by 2 after with.", "created_at": "2017-01-20T23:40:02Z", "updated_at": "2017-02-06T09:22:03Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6864#discussion_r97177305", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6864", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/97177305"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6864#discussion_r97177305"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6864"}}, "body_html": "<p>Lint error here, please indent by 2 after with.</p>", "body_text": "Lint error here, please indent by 2 after with."}