{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/320272345", "html_url": "https://github.com/tensorflow/tensorflow/issues/11674#issuecomment-320272345", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11674", "id": 320272345, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDI3MjM0NQ==", "user": {"login": "nkashy1", "id": 8016073, "node_id": "MDQ6VXNlcjgwMTYwNzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8016073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkashy1", "html_url": "https://github.com/nkashy1", "followers_url": "https://api.github.com/users/nkashy1/followers", "following_url": "https://api.github.com/users/nkashy1/following{/other_user}", "gists_url": "https://api.github.com/users/nkashy1/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkashy1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkashy1/subscriptions", "organizations_url": "https://api.github.com/users/nkashy1/orgs", "repos_url": "https://api.github.com/users/nkashy1/repos", "events_url": "https://api.github.com/users/nkashy1/events{/privacy}", "received_events_url": "https://api.github.com/users/nkashy1/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-04T15:04:29Z", "updated_at": "2017-08-04T15:04:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12663419\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/michaelpetruzzellocivicom\">@michaelpetruzzellocivicom</a> : That's right, you need feature dictionaries in your custom estimator as <code>ServingInputReceiver</code> is implemented, but the documentation for <code>input_fn</code> + <code>model_fn</code> claims that it can be bare tensors or feature dictionaries.</p>\n<p>Although one can convert to single tensor the way you did above, and also directly, the point is that the API is inconsistent. Either the API needs to be changed (so that <code>input_fn</code> and <code>model_fn</code> are no longer expected to take bare tensors, this is mostly a documentation change at this point, but an important design decision) or the implementation of <code>ServingInputReceiver</code> needs to be changed.</p>", "body_text": "@michaelpetruzzellocivicom : That's right, you need feature dictionaries in your custom estimator as ServingInputReceiver is implemented, but the documentation for input_fn + model_fn claims that it can be bare tensors or feature dictionaries.\nAlthough one can convert to single tensor the way you did above, and also directly, the point is that the API is inconsistent. Either the API needs to be changed (so that input_fn and model_fn are no longer expected to take bare tensors, this is mostly a documentation change at this point, but an important design decision) or the implementation of ServingInputReceiver needs to be changed.", "body": "@michaelpetruzzellocivicom : That's right, you need feature dictionaries in your custom estimator as `ServingInputReceiver` is implemented, but the documentation for `input_fn` + `model_fn` claims that it can be bare tensors or feature dictionaries.\r\n\r\nAlthough one can convert to single tensor the way you did above, and also directly, the point is that the API is inconsistent. Either the API needs to be changed (so that `input_fn` and `model_fn` are no longer expected to take bare tensors, this is mostly a documentation change at this point, but an important design decision) or the implementation of `ServingInputReceiver` needs to be changed."}