{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/404892278", "html_url": "https://github.com/tensorflow/tensorflow/issues/18802#issuecomment-404892278", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18802", "id": 404892278, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDg5MjI3OA==", "user": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-13T16:58:46Z", "updated_at": "2018-07-13T16:58:46Z", "author_association": "NONE", "body_html": "<p>I tried to recreate the lack of error situation with the code below but this seems to be (correctly) throwing an error for me:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nkeras <span class=\"pl-k\">=</span> tf.keras\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">MySequence</span>(<span class=\"pl-e\">keras</span>.<span class=\"pl-e\">utils</span>.<span class=\"pl-e\">Sequence</span>):\n  <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__getitem__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">x</span>):\n    <span class=\"pl-k\">if</span> x <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>:\n      <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Should raise an error.<span class=\"pl-pds\">'</span></span>)\n    <span class=\"pl-k\">return</span> np.ones([<span class=\"pl-c1\">10</span>,<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">3</span>]), np.ones([<span class=\"pl-c1\">10</span>,<span class=\"pl-c1\">4</span>])\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__len__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">3</span>\n\nmodel <span class=\"pl-k\">=</span> keras.models.Sequential()\nmodel.add(keras.layers.Conv2D(<span class=\"pl-c1\">32</span>, <span class=\"pl-v\">kernel_size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>),\n                              <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>,\n                              <span class=\"pl-v\">input_shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">3</span>)))\nmodel.add(keras.layers.Conv2D(<span class=\"pl-c1\">64</span>, (<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\nmodel.add(keras.layers.MaxPooling2D(<span class=\"pl-v\">pool_size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>)))\nmodel.add(keras.layers.Dropout(<span class=\"pl-c1\">0.25</span>))\nmodel.add(keras.layers.Flatten())\nmodel.add(keras.layers.Dense(<span class=\"pl-c1\">128</span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\nmodel.add(keras.layers.Dropout(<span class=\"pl-c1\">0.5</span>))\nmodel.add(keras.layers.Dense(<span class=\"pl-c1\">4</span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>softmax<span class=\"pl-pds\">'</span></span>))\n\nmodel.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span>keras.losses.categorical_crossentropy,\n              <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span>keras.optimizers.Adadelta(),\n              <span class=\"pl-v\">metrics</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>accuracy<span class=\"pl-pds\">'</span></span>])\n\nmodel.fit_generator(MySequence(),\n                    <span class=\"pl-v\">steps_per_epoch</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>,\n                    <span class=\"pl-v\">epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)</pre></div>\n<p>On the <code>multiprocessing</code> bit, I looked into it more and the code you had will use <code>multithreading</code> and not <code>multiprocessing</code> to grab the input data, which may explain why you weren't seeing anything in the process monitor. If you want Keras to use <code>multiprocessing</code> with a generator/Sequence, you can do:</p>\n<div class=\"highlight highlight-source-python\"><pre>model.fit_generator(MySequence(),\n                    <span class=\"pl-v\">steps_per_epoch</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>,\n                    <span class=\"pl-v\">epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,\n                    <span class=\"pl-v\">use_multiprocessing</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)</pre></div>\n<p>Let me know if there's any more context you can provide, otherwise I'm not sure if I'll be able to recreate this issue</p>", "body_text": "I tried to recreate the lack of error situation with the code below but this seems to be (correctly) throwing an error for me:\nimport numpy as np\nimport tensorflow as tf\n\nkeras = tf.keras\n\nclass MySequence(keras.utils.Sequence):\n  def __getitem__(self, x):\n    if x == 1:\n      raise ValueError('Should raise an error.')\n    return np.ones([10,100,100,3]), np.ones([10,4])\n\n  def __len__(self):\n    return 3\n\nmodel = keras.models.Sequential()\nmodel.add(keras.layers.Conv2D(32, kernel_size=(3, 3),\n                              activation='relu',\n                              input_shape=(100,100,3)))\nmodel.add(keras.layers.Conv2D(64, (3, 3), activation='relu'))\nmodel.add(keras.layers.MaxPooling2D(pool_size=(2, 2)))\nmodel.add(keras.layers.Dropout(0.25))\nmodel.add(keras.layers.Flatten())\nmodel.add(keras.layers.Dense(128, activation='relu'))\nmodel.add(keras.layers.Dropout(0.5))\nmodel.add(keras.layers.Dense(4, activation='softmax'))\n\nmodel.compile(loss=keras.losses.categorical_crossentropy,\n              optimizer=keras.optimizers.Adadelta(),\n              metrics=['accuracy'])\n\nmodel.fit_generator(MySequence(),\n                    steps_per_epoch=3,\n                    epochs=1)\nOn the multiprocessing bit, I looked into it more and the code you had will use multithreading and not multiprocessing to grab the input data, which may explain why you weren't seeing anything in the process monitor. If you want Keras to use multiprocessing with a generator/Sequence, you can do:\nmodel.fit_generator(MySequence(),\n                    steps_per_epoch=3,\n                    epochs=1,\n                    use_multiprocessing=True)\nLet me know if there's any more context you can provide, otherwise I'm not sure if I'll be able to recreate this issue", "body": "I tried to recreate the lack of error situation with the code below but this seems to be (correctly) throwing an error for me:\r\n\r\n```python \r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nkeras = tf.keras\r\n\r\nclass MySequence(keras.utils.Sequence):\r\n  def __getitem__(self, x):\r\n    if x == 1:\r\n      raise ValueError('Should raise an error.')\r\n    return np.ones([10,100,100,3]), np.ones([10,4])\r\n\r\n  def __len__(self):\r\n    return 3\r\n\r\nmodel = keras.models.Sequential()\r\nmodel.add(keras.layers.Conv2D(32, kernel_size=(3, 3),\r\n                              activation='relu',\r\n                              input_shape=(100,100,3)))\r\nmodel.add(keras.layers.Conv2D(64, (3, 3), activation='relu'))\r\nmodel.add(keras.layers.MaxPooling2D(pool_size=(2, 2)))\r\nmodel.add(keras.layers.Dropout(0.25))\r\nmodel.add(keras.layers.Flatten())\r\nmodel.add(keras.layers.Dense(128, activation='relu'))\r\nmodel.add(keras.layers.Dropout(0.5))\r\nmodel.add(keras.layers.Dense(4, activation='softmax'))\r\n\r\nmodel.compile(loss=keras.losses.categorical_crossentropy,\r\n              optimizer=keras.optimizers.Adadelta(),\r\n              metrics=['accuracy'])\r\n\r\nmodel.fit_generator(MySequence(),\r\n                    steps_per_epoch=3,\r\n                    epochs=1)\r\n```\r\n\r\nOn the ```multiprocessing``` bit, I looked into it more and the code you had will use ```multithreading``` and not ```multiprocessing``` to grab the input data, which may explain why you weren't seeing anything in the process monitor. If you want Keras to use ```multiprocessing``` with a generator/Sequence, you can do:\r\n\r\n```python\r\nmodel.fit_generator(MySequence(),\r\n                    steps_per_epoch=3,\r\n                    epochs=1,\r\n                    use_multiprocessing=True)\r\n```\r\n\r\nLet me know if there's any more context you can provide, otherwise I'm not sure if I'll be able to recreate this issue\r\n"}