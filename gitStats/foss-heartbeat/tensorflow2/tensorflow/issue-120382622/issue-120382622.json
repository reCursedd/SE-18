{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/408", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/408/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/408/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/408", "id": 120382622, "node_id": "MDU6SXNzdWUxMjAzODI2MjI=", "number": 408, "title": "Can't find pngwutil.c building tensorflow", "user": {"login": "manjunaths", "id": 216373, "node_id": "MDQ6VXNlcjIxNjM3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/216373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manjunaths", "html_url": "https://github.com/manjunaths", "followers_url": "https://api.github.com/users/manjunaths/followers", "following_url": "https://api.github.com/users/manjunaths/following{/other_user}", "gists_url": "https://api.github.com/users/manjunaths/gists{/gist_id}", "starred_url": "https://api.github.com/users/manjunaths/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manjunaths/subscriptions", "organizations_url": "https://api.github.com/users/manjunaths/orgs", "repos_url": "https://api.github.com/users/manjunaths/repos", "events_url": "https://api.github.com/users/manjunaths/events{/privacy}", "received_events_url": "https://api.github.com/users/manjunaths/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2015-12-04T11:26:14Z", "updated_at": "2016-06-23T04:15:54Z", "closed_at": "2015-12-15T00:58:31Z", "author_association": "NONE", "body_html": "<p>I am getting this error when compiling tensorflow on RHEL 6.6.</p>\n<pre><code>[&lt;user&gt;@blah tensorflow]$ ../bazel/output/bazel --output_base=/lvol/&lt;user&gt; build --genrule_strategy=standalone --spawn_strategy=standalone --verbose_failures -j 1 -c opt //tensorflow/cc:tutorials_example_trainer 2&gt;&amp;1|tee compile0.log\n......\nWARNING: Sandboxed execution is not supported on your system and thus hermeticity of actions cannot be guaranteed. See http://bazel.io/docs/bazel-user-manual.html#sandboxing for more information. You can turn off this warning via --ignore_unsupported_sandboxing.\n____Loading package: tensorflow/cc\n____Loading...\n____Loading package: @bazel_tools//tools/cpp\n____Loading package: @local-jdk//\n____Loading package: tensorflow/core/platform/default/build_config\n____Loading package: @png_archive//\n____Loading package: @jpeg_archive//\n____Loading complete.  Analyzing...\n____Found 1 target...\n____Building...\n____[0 / 1] BazelWorkspaceStatusAction stable-status.txt\n____[3 / 28] Compiling google/protobuf/src/google/protobuf/arena.cc\n____[27 / 82] Compiling google/protobuf/src/google/protobuf/any.cc\n____[108 / 169] Compiling google/protobuf/src/google/protobuf/any.cc [for host]\n____[161 / 260] Compiling google/protobuf/src/google/protobuf/compiler/code_generator.cc [for host]\n____[252 / 330] Compiling external/re2/re2/bitstate.cc\nERROR: missing input file '@png_archive//:libpng-1.2.53/pngwutil.c'.\nERROR: /lvol/&lt;user&gt;/external/png_archive/BUILD:33:1: @png_archive//:png: missing input file '@png_archive//:libpng-1.2.53/pngwutil.c'.\n____Building complete.\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\nERROR: /lvol/&lt;user&gt;/external/png_archive/BUILD:33:1 1 input file(s) do not exist.\n____Elapsed time: 277.881s, Critical Path: 6.96s\n</code></pre>\n<p>Here is what the tree looks like. All the soft-links point to valid files.</p>\n<pre><code>[&lt;user&gt;@atl4-05 tensorflow]$ ls /lvol/&lt;user&gt;/external/png_archive/\naclocal.m4      config.guess  example.c          LICENSE        pngbar.jpg  png.h       pngrutil.c   pngwrite.c   test-pngtest.sh\nANNOUNCE        config.h.in   INSTALL            ltmain.sh      pngbar.png  pngmem.c    pngset.c     pngwtran.c   TODO\nautogen.sh      config.sub    install-sh         Makefile.am    png.c       pngnow.png  pngtest.c    pngwutil.c   WORKSPACE\nBUILD           configure     KNOWNBUG           Makefile.in    pngconf.h   pngpread.c  pngtest.png  projects     Y2KINFO\nCHANGES         configure.ac  libpng-1.2.53.txt  missing        pngerror.c  pngread.c   pngtrans.c   README\nCMakeLists.txt  contrib       libpng.3           mkinstalldirs  pnggccrd.c  pngrio.c    pngvcrd.c    scripts\ncompile         depcomp       libpngpf.3         png.5          pngget.c    pngrtran.c  pngwio.c     test-driver\n</code></pre>\n<p>Here is what the /lvol//external/png_archive/BUILD file looks like.</p>\n<pre><code>package(default_visibility = [\"//visibility:public\"])\n\nprefix_dir = \"libpng-1.2.53\"\n\nPNG_SOURCES = [\n    \"png.c\",\n    \"pngerror.c\",\n    \"pngget.c\",\n    \"pngmem.c\",\n    \"pngpread.c\",\n    \"pngread.c\",\n    \"pngrio.c\",\n    \"pngrtran.c\",\n    \"pngrutil.c\",\n    \"pngset.c\",\n    \"pngtrans.c\",\n    \"pngwio.c\",\n    \"pngwrite.c\",\n    \"pngwtran.c\",\n    \"pngwutil.c\",\n]\n\ngenrule(\n    name = \"configure\",\n    srcs = glob(\n        [\"**/*\"],\n        exclude = [prefix_dir + \"/config.h\", \"configure\"],\n    ),\n    outs = [prefix_dir + \"/config.h\"],\n    cmd = \"pushd external/png_archive/%s; workdir=$$(mktemp -d -t tmp.XXXXXXXXXX); cp -a * $$workdir; pushd $$workdir; ./configure --enable-shared=no --with-pic=no; popd; popd; cp $$workdir/config.h $(@D); rm -rf $$workdir;\" % prefix_dir,\n)\n\ncc_library(\n    name = \"png\",\n    srcs = [prefix_dir + \"/\" + source for source in PNG_SOURCES],\n    hdrs = glob([\"**/*.h\"]) + [\":configure\"],\n    includes = [prefix_dir],\n    linkopts = [\"-lz\"],\n    visibility = [\"//visibility:public\"],\n)\n</code></pre>", "body_text": "I am getting this error when compiling tensorflow on RHEL 6.6.\n[<user>@blah tensorflow]$ ../bazel/output/bazel --output_base=/lvol/<user> build --genrule_strategy=standalone --spawn_strategy=standalone --verbose_failures -j 1 -c opt //tensorflow/cc:tutorials_example_trainer 2>&1|tee compile0.log\n......\nWARNING: Sandboxed execution is not supported on your system and thus hermeticity of actions cannot be guaranteed. See http://bazel.io/docs/bazel-user-manual.html#sandboxing for more information. You can turn off this warning via --ignore_unsupported_sandboxing.\n____Loading package: tensorflow/cc\n____Loading...\n____Loading package: @bazel_tools//tools/cpp\n____Loading package: @local-jdk//\n____Loading package: tensorflow/core/platform/default/build_config\n____Loading package: @png_archive//\n____Loading package: @jpeg_archive//\n____Loading complete.  Analyzing...\n____Found 1 target...\n____Building...\n____[0 / 1] BazelWorkspaceStatusAction stable-status.txt\n____[3 / 28] Compiling google/protobuf/src/google/protobuf/arena.cc\n____[27 / 82] Compiling google/protobuf/src/google/protobuf/any.cc\n____[108 / 169] Compiling google/protobuf/src/google/protobuf/any.cc [for host]\n____[161 / 260] Compiling google/protobuf/src/google/protobuf/compiler/code_generator.cc [for host]\n____[252 / 330] Compiling external/re2/re2/bitstate.cc\nERROR: missing input file '@png_archive//:libpng-1.2.53/pngwutil.c'.\nERROR: /lvol/<user>/external/png_archive/BUILD:33:1: @png_archive//:png: missing input file '@png_archive//:libpng-1.2.53/pngwutil.c'.\n____Building complete.\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\nERROR: /lvol/<user>/external/png_archive/BUILD:33:1 1 input file(s) do not exist.\n____Elapsed time: 277.881s, Critical Path: 6.96s\n\nHere is what the tree looks like. All the soft-links point to valid files.\n[<user>@atl4-05 tensorflow]$ ls /lvol/<user>/external/png_archive/\naclocal.m4      config.guess  example.c          LICENSE        pngbar.jpg  png.h       pngrutil.c   pngwrite.c   test-pngtest.sh\nANNOUNCE        config.h.in   INSTALL            ltmain.sh      pngbar.png  pngmem.c    pngset.c     pngwtran.c   TODO\nautogen.sh      config.sub    install-sh         Makefile.am    png.c       pngnow.png  pngtest.c    pngwutil.c   WORKSPACE\nBUILD           configure     KNOWNBUG           Makefile.in    pngconf.h   pngpread.c  pngtest.png  projects     Y2KINFO\nCHANGES         configure.ac  libpng-1.2.53.txt  missing        pngerror.c  pngread.c   pngtrans.c   README\nCMakeLists.txt  contrib       libpng.3           mkinstalldirs  pnggccrd.c  pngrio.c    pngvcrd.c    scripts\ncompile         depcomp       libpngpf.3         png.5          pngget.c    pngrtran.c  pngwio.c     test-driver\n\nHere is what the /lvol//external/png_archive/BUILD file looks like.\npackage(default_visibility = [\"//visibility:public\"])\n\nprefix_dir = \"libpng-1.2.53\"\n\nPNG_SOURCES = [\n    \"png.c\",\n    \"pngerror.c\",\n    \"pngget.c\",\n    \"pngmem.c\",\n    \"pngpread.c\",\n    \"pngread.c\",\n    \"pngrio.c\",\n    \"pngrtran.c\",\n    \"pngrutil.c\",\n    \"pngset.c\",\n    \"pngtrans.c\",\n    \"pngwio.c\",\n    \"pngwrite.c\",\n    \"pngwtran.c\",\n    \"pngwutil.c\",\n]\n\ngenrule(\n    name = \"configure\",\n    srcs = glob(\n        [\"**/*\"],\n        exclude = [prefix_dir + \"/config.h\", \"configure\"],\n    ),\n    outs = [prefix_dir + \"/config.h\"],\n    cmd = \"pushd external/png_archive/%s; workdir=$$(mktemp -d -t tmp.XXXXXXXXXX); cp -a * $$workdir; pushd $$workdir; ./configure --enable-shared=no --with-pic=no; popd; popd; cp $$workdir/config.h $(@D); rm -rf $$workdir;\" % prefix_dir,\n)\n\ncc_library(\n    name = \"png\",\n    srcs = [prefix_dir + \"/\" + source for source in PNG_SOURCES],\n    hdrs = glob([\"**/*.h\"]) + [\":configure\"],\n    includes = [prefix_dir],\n    linkopts = [\"-lz\"],\n    visibility = [\"//visibility:public\"],\n)", "body": "I am getting this error when compiling tensorflow on RHEL 6.6. \n\n```\n[<user>@blah tensorflow]$ ../bazel/output/bazel --output_base=/lvol/<user> build --genrule_strategy=standalone --spawn_strategy=standalone --verbose_failures -j 1 -c opt //tensorflow/cc:tutorials_example_trainer 2>&1|tee compile0.log\n......\nWARNING: Sandboxed execution is not supported on your system and thus hermeticity of actions cannot be guaranteed. See http://bazel.io/docs/bazel-user-manual.html#sandboxing for more information. You can turn off this warning via --ignore_unsupported_sandboxing.\n____Loading package: tensorflow/cc\n____Loading...\n____Loading package: @bazel_tools//tools/cpp\n____Loading package: @local-jdk//\n____Loading package: tensorflow/core/platform/default/build_config\n____Loading package: @png_archive//\n____Loading package: @jpeg_archive//\n____Loading complete.  Analyzing...\n____Found 1 target...\n____Building...\n____[0 / 1] BazelWorkspaceStatusAction stable-status.txt\n____[3 / 28] Compiling google/protobuf/src/google/protobuf/arena.cc\n____[27 / 82] Compiling google/protobuf/src/google/protobuf/any.cc\n____[108 / 169] Compiling google/protobuf/src/google/protobuf/any.cc [for host]\n____[161 / 260] Compiling google/protobuf/src/google/protobuf/compiler/code_generator.cc [for host]\n____[252 / 330] Compiling external/re2/re2/bitstate.cc\nERROR: missing input file '@png_archive//:libpng-1.2.53/pngwutil.c'.\nERROR: /lvol/<user>/external/png_archive/BUILD:33:1: @png_archive//:png: missing input file '@png_archive//:libpng-1.2.53/pngwutil.c'.\n____Building complete.\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\nERROR: /lvol/<user>/external/png_archive/BUILD:33:1 1 input file(s) do not exist.\n____Elapsed time: 277.881s, Critical Path: 6.96s\n```\n\nHere is what the tree looks like. All the soft-links point to valid files.\n\n```\n[<user>@atl4-05 tensorflow]$ ls /lvol/<user>/external/png_archive/\naclocal.m4      config.guess  example.c          LICENSE        pngbar.jpg  png.h       pngrutil.c   pngwrite.c   test-pngtest.sh\nANNOUNCE        config.h.in   INSTALL            ltmain.sh      pngbar.png  pngmem.c    pngset.c     pngwtran.c   TODO\nautogen.sh      config.sub    install-sh         Makefile.am    png.c       pngnow.png  pngtest.c    pngwutil.c   WORKSPACE\nBUILD           configure     KNOWNBUG           Makefile.in    pngconf.h   pngpread.c  pngtest.png  projects     Y2KINFO\nCHANGES         configure.ac  libpng-1.2.53.txt  missing        pngerror.c  pngread.c   pngtrans.c   README\nCMakeLists.txt  contrib       libpng.3           mkinstalldirs  pnggccrd.c  pngrio.c    pngvcrd.c    scripts\ncompile         depcomp       libpngpf.3         png.5          pngget.c    pngrtran.c  pngwio.c     test-driver\n```\n\nHere is what the /lvol/<user>/external/png_archive/BUILD file looks like.\n\n```\npackage(default_visibility = [\"//visibility:public\"])\n\nprefix_dir = \"libpng-1.2.53\"\n\nPNG_SOURCES = [\n    \"png.c\",\n    \"pngerror.c\",\n    \"pngget.c\",\n    \"pngmem.c\",\n    \"pngpread.c\",\n    \"pngread.c\",\n    \"pngrio.c\",\n    \"pngrtran.c\",\n    \"pngrutil.c\",\n    \"pngset.c\",\n    \"pngtrans.c\",\n    \"pngwio.c\",\n    \"pngwrite.c\",\n    \"pngwtran.c\",\n    \"pngwutil.c\",\n]\n\ngenrule(\n    name = \"configure\",\n    srcs = glob(\n        [\"**/*\"],\n        exclude = [prefix_dir + \"/config.h\", \"configure\"],\n    ),\n    outs = [prefix_dir + \"/config.h\"],\n    cmd = \"pushd external/png_archive/%s; workdir=$$(mktemp -d -t tmp.XXXXXXXXXX); cp -a * $$workdir; pushd $$workdir; ./configure --enable-shared=no --with-pic=no; popd; popd; cp $$workdir/config.h $(@D); rm -rf $$workdir;\" % prefix_dir,\n)\n\ncc_library(\n    name = \"png\",\n    srcs = [prefix_dir + \"/\" + source for source in PNG_SOURCES],\n    hdrs = glob([\"**/*.h\"]) + [\":configure\"],\n    includes = [prefix_dir],\n    linkopts = [\"-lz\"],\n    visibility = [\"//visibility:public\"],\n)\n```\n"}