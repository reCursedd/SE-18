{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4732", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4732/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4732/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4732/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4732", "id": 180693989, "node_id": "MDU6SXNzdWUxODA2OTM5ODk=", "number": 4732, "title": "Input ops fed networks operate considerably slower than direct feed ones", "user": {"login": "danielschonfeld", "id": 522598, "node_id": "MDQ6VXNlcjUyMjU5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/522598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielschonfeld", "html_url": "https://github.com/danielschonfeld", "followers_url": "https://api.github.com/users/danielschonfeld/followers", "following_url": "https://api.github.com/users/danielschonfeld/following{/other_user}", "gists_url": "https://api.github.com/users/danielschonfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielschonfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielschonfeld/subscriptions", "organizations_url": "https://api.github.com/users/danielschonfeld/orgs", "repos_url": "https://api.github.com/users/danielschonfeld/repos", "events_url": "https://api.github.com/users/danielschonfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/danielschonfeld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2016-10-03T17:09:25Z", "updated_at": "2016-10-23T05:34:30Z", "closed_at": "2016-10-23T05:34:30Z", "author_association": "NONE", "body_html": "<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p><a href=\"http://stackoverflow.com/questions/39794149/when-introducing-the-optimizer-variables-under-variable-scope-get-recreated-twic\" rel=\"nofollow\">http://stackoverflow.com/questions/39794149/when-introducing-the-optimizer-variables-under-variable-scope-get-recreated-twic</a></p>\n<h3>Environment info</h3>\n<p>Tried both OS X and Linux (Ubuntu 16)<br>\nOn both utilizing CPU only.</p>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>Any simple operation (i.e. calculating logits with a 3 layer deep network with simple regression in each layer) in which the data was fed with either a <code>parse_example</code>, <code>parse_single_example</code>, building a <code>CustomRunner</code> that feeds a <code>RandomShuffleQueue</code> or utilizing <code>QueueRunner</code>.  In all of those the operation and time to complete 1 epoch took considerably more than if I were to save the data in a bumpy array and feed it during a call to <code>sess.run()</code> with the <code>feed_dict</code>.</p>\n<h3>What other attempted solutions have you tried?</h3>\n<p>Tried to score the web for solutions and ran into a couple blog posts describing the problem but can't seem to find solutions.</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>Tried this on both TF 0.10 and the latest RC for 0.11.</p>", "body_text": "What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nhttp://stackoverflow.com/questions/39794149/when-introducing-the-optimizer-variables-under-variable-scope-get-recreated-twic\nEnvironment info\nTried both OS X and Linux (Ubuntu 16)\nOn both utilizing CPU only.\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nAny simple operation (i.e. calculating logits with a 3 layer deep network with simple regression in each layer) in which the data was fed with either a parse_example, parse_single_example, building a CustomRunner that feeds a RandomShuffleQueue or utilizing QueueRunner.  In all of those the operation and time to complete 1 epoch took considerably more than if I were to save the data in a bumpy array and feed it during a call to sess.run() with the feed_dict.\nWhat other attempted solutions have you tried?\nTried to score the web for solutions and ran into a couple blog posts describing the problem but can't seem to find solutions.\nLogs or other output that would be helpful\nTried this on both TF 0.10 and the latest RC for 0.11.", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n\nhttp://stackoverflow.com/questions/39794149/when-introducing-the-optimizer-variables-under-variable-scope-get-recreated-twic\n### Environment info\n\nTried both OS X and Linux (Ubuntu 16)\nOn both utilizing CPU only.\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n\nAny simple operation (i.e. calculating logits with a 3 layer deep network with simple regression in each layer) in which the data was fed with either a `parse_example`, `parse_single_example`, building a `CustomRunner` that feeds a `RandomShuffleQueue` or utilizing `QueueRunner`.  In all of those the operation and time to complete 1 epoch took considerably more than if I were to save the data in a bumpy array and feed it during a call to `sess.run()` with the `feed_dict`.\n### What other attempted solutions have you tried?\n\nTried to score the web for solutions and ran into a couple blog posts describing the problem but can't seem to find solutions.\n### Logs or other output that would be helpful\n\nTried this on both TF 0.10 and the latest RC for 0.11.\n"}