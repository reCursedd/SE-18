{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/301858859", "html_url": "https://github.com/tensorflow/tensorflow/issues/9932#issuecomment-301858859", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9932", "id": 301858859, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTg1ODg1OQ==", "user": {"login": "panyx0718", "id": 2887803, "node_id": "MDQ6VXNlcjI4ODc4MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2887803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panyx0718", "html_url": "https://github.com/panyx0718", "followers_url": "https://api.github.com/users/panyx0718/followers", "following_url": "https://api.github.com/users/panyx0718/following{/other_user}", "gists_url": "https://api.github.com/users/panyx0718/gists{/gist_id}", "starred_url": "https://api.github.com/users/panyx0718/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panyx0718/subscriptions", "organizations_url": "https://api.github.com/users/panyx0718/orgs", "repos_url": "https://api.github.com/users/panyx0718/repos", "events_url": "https://api.github.com/users/panyx0718/events{/privacy}", "received_events_url": "https://api.github.com/users/panyx0718/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-16T17:41:09Z", "updated_at": "2017-05-16T17:41:09Z", "author_association": "NONE", "body_html": "<p>float_ops is calculated here (contributed long time ago)<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/32b3f6501eb2d644398936bc4884719ba59bd168/tensorflow/python/ops/nn_ops.py#L1772\">tensorflow/tensorflow/python/ops/nn_ops.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 1772\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/32b3f6501eb2d644398936bc4884719ba59bd168\">32b3f65</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1772\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1772\"></td>\n          <td id=\"LC1772\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-en\">@ops.RegisterStatistics</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Conv2D<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>flops<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>timing used to be from CostGraphDef, while the latest change switch to RunMetadata. However, I don't expect big changes here.</p>\n<p>I can see several reasons that your calculation can differ from manufacturer's specs:</p>\n<ol>\n<li>float ops is calculated, instead of the float ops of physical devices. Maybe there are some differences there. Also, I suspect the float ops calculation is no longer up-to-date. Many improvements happened in Conv2D implementation, while its float ops calculation implementation is no updated.</li>\n<li>The timing is a one-step result. I'm working on something to aggregate stats from multiple steps.</li>\n<li>The latest change (a few days ago) tried to fix a problem: A Op can fire multiple GPU kernel run, tfprof used to count only one of them. Now it's fixed to count all of them.</li>\n</ol>\n<p>For now, I would treat the result as approximate. I (only me) am working on some improvements. Do let me know if the result is orders of magnitude off the reality.</p>", "body_text": "float_ops is calculated here (contributed long time ago)\n\n  \n    \n      tensorflow/tensorflow/python/ops/nn_ops.py\n    \n    \n         Line 1772\n      in\n      32b3f65\n    \n    \n    \n    \n\n        \n          \n           @ops.RegisterStatistics(\"Conv2D\", \"flops\") \n        \n    \n  \n\n\ntiming used to be from CostGraphDef, while the latest change switch to RunMetadata. However, I don't expect big changes here.\nI can see several reasons that your calculation can differ from manufacturer's specs:\n\nfloat ops is calculated, instead of the float ops of physical devices. Maybe there are some differences there. Also, I suspect the float ops calculation is no longer up-to-date. Many improvements happened in Conv2D implementation, while its float ops calculation implementation is no updated.\nThe timing is a one-step result. I'm working on something to aggregate stats from multiple steps.\nThe latest change (a few days ago) tried to fix a problem: A Op can fire multiple GPU kernel run, tfprof used to count only one of them. Now it's fixed to count all of them.\n\nFor now, I would treat the result as approximate. I (only me) am working on some improvements. Do let me know if the result is orders of magnitude off the reality.", "body": "float_ops is calculated here (contributed long time ago)\r\nhttps://github.com/tensorflow/tensorflow/blob/32b3f6501eb2d644398936bc4884719ba59bd168/tensorflow/python/ops/nn_ops.py#L1772\r\n\r\ntiming used to be from CostGraphDef, while the latest change switch to RunMetadata. However, I don't expect big changes here.\r\n\r\nI can see several reasons that your calculation can differ from manufacturer's specs:\r\n1. float ops is calculated, instead of the float ops of physical devices. Maybe there are some differences there. Also, I suspect the float ops calculation is no longer up-to-date. Many improvements happened in Conv2D implementation, while its float ops calculation implementation is no updated.\r\n2. The timing is a one-step result. I'm working on something to aggregate stats from multiple steps.\r\n3. The latest change (a few days ago) tried to fix a problem: A Op can fire multiple GPU kernel run, tfprof used to count only one of them. Now it's fixed to count all of them. \r\n\r\nFor now, I would treat the result as approximate. I (only me) am working on some improvements. Do let me know if the result is orders of magnitude off the reality."}