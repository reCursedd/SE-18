{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/217975235", "html_url": "https://github.com/tensorflow/tensorflow/issues/2280#issuecomment-217975235", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2280", "id": 217975235, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzk3NTIzNQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-09T20:12:05Z", "updated_at": "2016-05-09T20:12:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>partial_run</code> should enable these kinds of computation reuse. Can you check your device placement to make sure you are not spending your time waiting for CPU-&gt;GPU memory transfers?</p>\n<p>Also, is this issue fixed if you consolidate and fetch all your outputs in a single <code>run</code>?</p>\n<p>You can enable device placement logging by creating your session with <code>config = tf.ConfigProto(log_device_placement=True)</code>.</p>\n<p>Also more generally, you can see more details about CPU-GPU transfers by using following snippets (not sure if <code>partial_run</code> looks at run_options though)</p>\n<pre><code>run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nrun_metadata = tf.RunMetadata()\nsess.run(..., options=run_options, run_metadata=run_metadata)\nrun_summarize(run_metadata)\n\ndef run_summarize(run_metadata):\n  global run_metadata\n  print \"***\"\n  for device in run_metadata.step_stats.dev_stats:\n    print device.device\n    for node_stats in device.node_stats:\n      print \"   \", node_stats.node_name\n\n</code></pre>", "body_text": "partial_run should enable these kinds of computation reuse. Can you check your device placement to make sure you are not spending your time waiting for CPU->GPU memory transfers?\nAlso, is this issue fixed if you consolidate and fetch all your outputs in a single run?\nYou can enable device placement logging by creating your session with config = tf.ConfigProto(log_device_placement=True).\nAlso more generally, you can see more details about CPU-GPU transfers by using following snippets (not sure if partial_run looks at run_options though)\nrun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nrun_metadata = tf.RunMetadata()\nsess.run(..., options=run_options, run_metadata=run_metadata)\nrun_summarize(run_metadata)\n\ndef run_summarize(run_metadata):\n  global run_metadata\n  print \"***\"\n  for device in run_metadata.step_stats.dev_stats:\n    print device.device\n    for node_stats in device.node_stats:\n      print \"   \", node_stats.node_name", "body": "`partial_run` should enable these kinds of computation reuse. Can you check your device placement to make sure you are not spending your time waiting for CPU->GPU memory transfers?\n\nAlso, is this issue fixed if you consolidate and fetch all your outputs in a single `run`?\n\nYou can enable device placement logging by creating your session with `config = tf.ConfigProto(log_device_placement=True)`.\n\nAlso more generally, you can see more details about CPU-GPU transfers by using following snippets (not sure if `partial_run` looks at run_options though)\n\n```\nrun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nrun_metadata = tf.RunMetadata()\nsess.run(..., options=run_options, run_metadata=run_metadata)\nrun_summarize(run_metadata)\n\ndef run_summarize(run_metadata):\n  global run_metadata\n  print \"***\"\n  for device in run_metadata.step_stats.dev_stats:\n    print device.device\n    for node_stats in device.node_stats:\n      print \"   \", node_stats.node_name\n\n```\n"}