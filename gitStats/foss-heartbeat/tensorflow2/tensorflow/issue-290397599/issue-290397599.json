{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16282", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16282/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16282/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16282/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16282", "id": 290397599, "node_id": "MDU6SXNzdWUyOTAzOTc1OTk=", "number": 16282, "title": "Adding go_package to proto definition files necessary for Tensorflow serving", "user": {"login": "orian", "id": 144554, "node_id": "MDQ6VXNlcjE0NDU1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/144554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orian", "html_url": "https://github.com/orian", "followers_url": "https://api.github.com/users/orian/followers", "following_url": "https://api.github.com/users/orian/following{/other_user}", "gists_url": "https://api.github.com/users/orian/gists{/gist_id}", "starred_url": "https://api.github.com/users/orian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orian/subscriptions", "organizations_url": "https://api.github.com/users/orian/orgs", "repos_url": "https://api.github.com/users/orian/repos", "events_url": "https://api.github.com/users/orian/events{/privacy}", "received_events_url": "https://api.github.com/users/orian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-22T09:24:27Z", "updated_at": "2018-05-03T00:45:30Z", "closed_at": "2018-05-03T00:45:30Z", "author_association": "NONE", "body_html": "<p>I've went through guidelines about calling Tensorflow serving in Python.<br>\nThen I've decided to make it Go.</p>\n<p>You can find my repo here:<br>\n<a href=\"https://github.com/datainq/go-mnist-client\">https://github.com/datainq/go-mnist-client</a></p>\n<p>Manually preparing files is unmaintainable. What about we add <code>go_package</code> to proto files?<br>\ne.g. for a <code>github.com/tensorflow/tensorflow/tensorflow/core/protobuf/saver.proto</code> it would be:</p>\n<pre><code>go_package = \"github.com/tensorflow/tensorflow/tensorflow/go/core/protobuf\";\n</code></pre>\n<p>I think keeping the generated files in go' subpath is a good idea.</p>\n<p>Does it make sense?<br>\n(<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=170179\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jhseu\">@jhseu</a> was the author of the initial Go code)</p>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: N/A</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: N/A</li>\n<li><strong>TensorFlow version (use command below)</strong>: N/A</li>\n<li><strong>Python version</strong>:  N/A</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>", "body_text": "I've went through guidelines about calling Tensorflow serving in Python.\nThen I've decided to make it Go.\nYou can find my repo here:\nhttps://github.com/datainq/go-mnist-client\nManually preparing files is unmaintainable. What about we add go_package to proto files?\ne.g. for a github.com/tensorflow/tensorflow/tensorflow/core/protobuf/saver.proto it would be:\ngo_package = \"github.com/tensorflow/tensorflow/tensorflow/go/core/protobuf\";\n\nI think keeping the generated files in go' subpath is a good idea.\nDoes it make sense?\n(@jhseu was the author of the initial Go code)\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): N/A\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): N/A\nTensorFlow installed from (source or binary): N/A\nTensorFlow version (use command below): N/A\nPython version:  N/A\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A", "body": "I've went through guidelines about calling Tensorflow serving in Python.\r\nThen I've decided to make it Go.\r\n\r\nYou can find my repo here:\r\nhttps://github.com/datainq/go-mnist-client\r\n\r\nManually preparing files is unmaintainable. What about we add `go_package` to proto files?\r\ne.g. for a `github.com/tensorflow/tensorflow/tensorflow/core/protobuf/saver.proto` it would be:\r\n```\r\ngo_package = \"github.com/tensorflow/tensorflow/tensorflow/go/core/protobuf\";\r\n```\r\nI think keeping the generated files in go' subpath is a good idea.\r\n\r\nDoes it make sense? \r\n(@jhseu was the author of the initial Go code)\r\n\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: N/A\r\n- **TensorFlow installed from (source or binary)**: N/A\r\n- **TensorFlow version (use command below)**: N/A\r\n- **Python version**:  N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A"}