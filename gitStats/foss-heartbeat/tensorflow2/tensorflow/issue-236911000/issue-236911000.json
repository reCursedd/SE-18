{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10827", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10827/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10827/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10827/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10827", "id": 236911000, "node_id": "MDU6SXNzdWUyMzY5MTEwMDA=", "number": 10827, "title": "version 1.2 doesn't show CUDA and cuDNN information", "user": {"login": "TengdaHan", "id": 17740581, "node_id": "MDQ6VXNlcjE3NzQwNTgx", "avatar_url": "https://avatars3.githubusercontent.com/u/17740581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TengdaHan", "html_url": "https://github.com/TengdaHan", "followers_url": "https://api.github.com/users/TengdaHan/followers", "following_url": "https://api.github.com/users/TengdaHan/following{/other_user}", "gists_url": "https://api.github.com/users/TengdaHan/gists{/gist_id}", "starred_url": "https://api.github.com/users/TengdaHan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TengdaHan/subscriptions", "organizations_url": "https://api.github.com/users/TengdaHan/orgs", "repos_url": "https://api.github.com/users/TengdaHan/repos", "events_url": "https://api.github.com/users/TengdaHan/events{/privacy}", "received_events_url": "https://api.github.com/users/TengdaHan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2017-06-19T14:32:30Z", "updated_at": "2018-04-25T09:18:35Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: <code>pip install tensorflow-gpu</code></li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.2.0-rc2-21-g12f033d', '1.2.0')</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA 8.0, cuDNN 5.1</li>\n<li><strong>GPU model and memory</strong>: GTX 970M, 3GB</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>In previous version, after importing tensorflow like <code>import tensorflow as tf</code> following output will be shown:</p>\n<pre><code>&gt;&gt;&gt; import tensorflow as tf;\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so.5.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so.7.5 locally\n</code></pre>\n<p>However, after I installed CUDA and cuDNN, and then installed Tensorflow v1.2, I found there is NO output for <code>import tensorflow as tf</code> in python. And I cannot check whether gpu successfully uses CUDA or cuDNN.<br>\nI have checked my GPU as follows and GPU works well. I have tried the method in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"123139020\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/566\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/566/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/566\">#566</a> to adjust <code>TF_CPP_MIN_LOG_LEVEL</code>, but it seems have no effect.<br>\nI suggest it would be great to include CUDA and cuDNN info when importing tensorflow.</p>\n<pre><code>&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; sess = tf.Session()\n2017-06-20 00:24:38.111017: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-20 00:24:38.111060: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-20 00:24:38.111074: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-20 00:24:38.111086: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-20 00:24:38.111097: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-20 00:24:38.215890: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2017-06-20 00:24:38.216159: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties: \nname: GeForce GTX 970M\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.038\npciBusID 0000:01:00.0\nTotal memory: 2.95GiB\nFree memory: 2.63GiB\n2017-06-20 00:24:38.216174: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0 \n2017-06-20 00:24:38.216180: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y \n2017-06-20 00:24:38.216191: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): pip install tensorflow-gpu\nTensorFlow version (use command below): ('v1.2.0-rc2-21-g12f033d', '1.2.0')\nCUDA/cuDNN version: CUDA 8.0, cuDNN 5.1\nGPU model and memory: GTX 970M, 3GB\n\nDescribe the problem\nIn previous version, after importing tensorflow like import tensorflow as tf following output will be shown:\n>>> import tensorflow as tf;\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so.5.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so.7.5 locally\n\nHowever, after I installed CUDA and cuDNN, and then installed Tensorflow v1.2, I found there is NO output for import tensorflow as tf in python. And I cannot check whether gpu successfully uses CUDA or cuDNN.\nI have checked my GPU as follows and GPU works well. I have tried the method in #566 to adjust TF_CPP_MIN_LOG_LEVEL, but it seems have no effect.\nI suggest it would be great to include CUDA and cuDNN info when importing tensorflow.\n>>> import tensorflow as tf\n>>> sess = tf.Session()\n2017-06-20 00:24:38.111017: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-20 00:24:38.111060: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-20 00:24:38.111074: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-20 00:24:38.111086: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-20 00:24:38.111097: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-20 00:24:38.215890: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2017-06-20 00:24:38.216159: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties: \nname: GeForce GTX 970M\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.038\npciBusID 0000:01:00.0\nTotal memory: 2.95GiB\nFree memory: 2.63GiB\n2017-06-20 00:24:38.216174: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0 \n2017-06-20 00:24:38.216180: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y \n2017-06-20 00:24:38.216191: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: `pip install tensorflow-gpu`\r\n- **TensorFlow version (use command below)**: ('v1.2.0-rc2-21-g12f033d', '1.2.0')\r\n- **CUDA/cuDNN version**: CUDA 8.0, cuDNN 5.1\r\n- **GPU model and memory**: GTX 970M, 3GB\r\n\r\n### Describe the problem\r\nIn previous version, after importing tensorflow like `import tensorflow as tf` following output will be shown:\r\n```\r\n>>> import tensorflow as tf;\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so.7.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so.5.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so.7.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so.7.5 locally\r\n```\r\nHowever, after I installed CUDA and cuDNN, and then installed Tensorflow v1.2, I found there is NO output for `import tensorflow as tf` in python. And I cannot check whether gpu successfully uses CUDA or cuDNN.\r\nI have checked my GPU as follows and GPU works well. I have tried the method in #566 to adjust `TF_CPP_MIN_LOG_LEVEL`, but it seems have no effect.\r\nI suggest it would be great to include CUDA and cuDNN info when importing tensorflow.\r\n\r\n```\r\n>>> import tensorflow as tf\r\n>>> sess = tf.Session()\r\n2017-06-20 00:24:38.111017: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-06-20 00:24:38.111060: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-06-20 00:24:38.111074: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-06-20 00:24:38.111086: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-06-20 00:24:38.111097: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-06-20 00:24:38.215890: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2017-06-20 00:24:38.216159: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties: \r\nname: GeForce GTX 970M\r\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.038\r\npciBusID 0000:01:00.0\r\nTotal memory: 2.95GiB\r\nFree memory: 2.63GiB\r\n2017-06-20 00:24:38.216174: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0 \r\n2017-06-20 00:24:38.216180: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y \r\n2017-06-20 00:24:38.216191: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\r\n```\r\n"}