{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9554", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9554/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9554/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9554/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9554", "id": 225341410, "node_id": "MDU6SXNzdWUyMjUzNDE0MTA=", "number": 9554, "title": "TFRecord Writer Bug Saving Float List", "user": {"login": "gdj0nes", "id": 16679979, "node_id": "MDQ6VXNlcjE2Njc5OTc5", "avatar_url": "https://avatars3.githubusercontent.com/u/16679979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdj0nes", "html_url": "https://github.com/gdj0nes", "followers_url": "https://api.github.com/users/gdj0nes/followers", "following_url": "https://api.github.com/users/gdj0nes/following{/other_user}", "gists_url": "https://api.github.com/users/gdj0nes/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdj0nes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdj0nes/subscriptions", "organizations_url": "https://api.github.com/users/gdj0nes/orgs", "repos_url": "https://api.github.com/users/gdj0nes/repos", "events_url": "https://api.github.com/users/gdj0nes/events{/privacy}", "received_events_url": "https://api.github.com/users/gdj0nes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-04-30T17:28:38Z", "updated_at": "2018-09-05T20:49:35Z", "closed_at": "2017-05-02T21:08:59Z", "author_association": "NONE", "body_html": "<p>OS: Linux Ubuntu 14.04<br>\nTF: Version 1.1 (CPU) python 2.7</p>\n<p>When saving a list of floats to TFRecords format with<br>\n<code>tf.train.Feature(float_list=tf.train.FloatList(value=value)  </code><br>\n,where value it list of floats converted from a numpy array using tolist(), I get the following error:</p>\n<p>TypeError: [0.0, 41.95294952392578, 1.4004319906234741, 46.5711784362793, 33.32099914550781, 1.545793056488037, has type list, but expected one of: int, long, float</p>\n<p>which surprises me because it is explicitly a list of floats.</p>\n<pre><code>def _int64_feature(value):\n    return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))\n\n\ndef _float32_feature(value):\n    return tf.train.Feature(float_list=tf.train.FloatList(value=value))\n\ndef _bytes_feature(value):\n    return tf.train.Feature(bytes_list=tf.train.BytesList(value=[value]))\n \n\n    with tf.Session() as sess:\n        # initialize variables\n        sess.run(init_op)\n        # Input threading\n        coord = tf.train.Coordinator()\n        threads = tf.train.start_queue_runners(coord=coord)\n\n        print('Writing', filename)\n        recordWriter = tf.python_io.TFRecordWriter(filename)\n\n        try:\n            while not coord.should_stop():\n\n                img, latent = sess.run([img_op, latent_op])\n\n                example = tf.train.Example(features=tf.train.Features(feature={\n                    'image/width': _int64_feature(image_dims[0]),\n                    'image/height': _int64_feature(image_dims[1]),\n                    'image/channels': _int64_feature(image_dims[2]),\n                    'image/encoded': _bytes_feature(img[0]),\n                    'latent/size': _int64_feature(latent_dim),\n                    'latent/data': _float32_feature(latent.tolist())}))\n                recordWriter.write(example.SerializeToString())\n\n        except tf.errors.OutOfRangeError:\n            print('Done training -- epoch limit reached')\n\n        finally:\n            # When done, ask the threads to stop.\n            coord.request_stop()\n\n        recordWriter.close()\n        coord.join(threads)\n        sess.close()\n</code></pre>", "body_text": "OS: Linux Ubuntu 14.04\nTF: Version 1.1 (CPU) python 2.7\nWhen saving a list of floats to TFRecords format with\ntf.train.Feature(float_list=tf.train.FloatList(value=value)  \n,where value it list of floats converted from a numpy array using tolist(), I get the following error:\nTypeError: [0.0, 41.95294952392578, 1.4004319906234741, 46.5711784362793, 33.32099914550781, 1.545793056488037, has type list, but expected one of: int, long, float\nwhich surprises me because it is explicitly a list of floats.\ndef _int64_feature(value):\n    return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))\n\n\ndef _float32_feature(value):\n    return tf.train.Feature(float_list=tf.train.FloatList(value=value))\n\ndef _bytes_feature(value):\n    return tf.train.Feature(bytes_list=tf.train.BytesList(value=[value]))\n \n\n    with tf.Session() as sess:\n        # initialize variables\n        sess.run(init_op)\n        # Input threading\n        coord = tf.train.Coordinator()\n        threads = tf.train.start_queue_runners(coord=coord)\n\n        print('Writing', filename)\n        recordWriter = tf.python_io.TFRecordWriter(filename)\n\n        try:\n            while not coord.should_stop():\n\n                img, latent = sess.run([img_op, latent_op])\n\n                example = tf.train.Example(features=tf.train.Features(feature={\n                    'image/width': _int64_feature(image_dims[0]),\n                    'image/height': _int64_feature(image_dims[1]),\n                    'image/channels': _int64_feature(image_dims[2]),\n                    'image/encoded': _bytes_feature(img[0]),\n                    'latent/size': _int64_feature(latent_dim),\n                    'latent/data': _float32_feature(latent.tolist())}))\n                recordWriter.write(example.SerializeToString())\n\n        except tf.errors.OutOfRangeError:\n            print('Done training -- epoch limit reached')\n\n        finally:\n            # When done, ask the threads to stop.\n            coord.request_stop()\n\n        recordWriter.close()\n        coord.join(threads)\n        sess.close()", "body": "OS: Linux Ubuntu 14.04\r\nTF: Version 1.1 (CPU) python 2.7\r\n\r\nWhen saving a list of floats to TFRecords format with \r\n`tf.train.Feature(float_list=tf.train.FloatList(value=value) \r\n`\r\n,where value it list of floats converted from a numpy array using tolist(), I get the following error:\r\n\r\nTypeError: [0.0, 41.95294952392578, 1.4004319906234741, 46.5711784362793, 33.32099914550781, 1.545793056488037, has type list, but expected one of: int, long, float\r\n\r\nwhich surprises me because it is explicitly a list of floats. \r\n\r\n```\r\ndef _int64_feature(value):\r\n    return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))\r\n\r\n\r\ndef _float32_feature(value):\r\n    return tf.train.Feature(float_list=tf.train.FloatList(value=value))\r\n\r\ndef _bytes_feature(value):\r\n    return tf.train.Feature(bytes_list=tf.train.BytesList(value=[value]))\r\n \r\n\r\n    with tf.Session() as sess:\r\n        # initialize variables\r\n        sess.run(init_op)\r\n        # Input threading\r\n        coord = tf.train.Coordinator()\r\n        threads = tf.train.start_queue_runners(coord=coord)\r\n\r\n        print('Writing', filename)\r\n        recordWriter = tf.python_io.TFRecordWriter(filename)\r\n\r\n        try:\r\n            while not coord.should_stop():\r\n\r\n                img, latent = sess.run([img_op, latent_op])\r\n\r\n                example = tf.train.Example(features=tf.train.Features(feature={\r\n                    'image/width': _int64_feature(image_dims[0]),\r\n                    'image/height': _int64_feature(image_dims[1]),\r\n                    'image/channels': _int64_feature(image_dims[2]),\r\n                    'image/encoded': _bytes_feature(img[0]),\r\n                    'latent/size': _int64_feature(latent_dim),\r\n                    'latent/data': _float32_feature(latent.tolist())}))\r\n                recordWriter.write(example.SerializeToString())\r\n\r\n        except tf.errors.OutOfRangeError:\r\n            print('Done training -- epoch limit reached')\r\n\r\n        finally:\r\n            # When done, ask the threads to stop.\r\n            coord.request_stop()\r\n\r\n        recordWriter.close()\r\n        coord.join(threads)\r\n        sess.close()\r\n```"}