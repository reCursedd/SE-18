{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4438", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4438/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4438/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4438/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4438", "id": 177654564, "node_id": "MDU6SXNzdWUxNzc2NTQ1NjQ=", "number": 4438, "title": "tf.import_graph_def() requires a non-empty name", "user": {"login": "usmankha123", "id": 22276548, "node_id": "MDQ6VXNlcjIyMjc2NTQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/22276548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmankha123", "html_url": "https://github.com/usmankha123", "followers_url": "https://api.github.com/users/usmankha123/followers", "following_url": "https://api.github.com/users/usmankha123/following{/other_user}", "gists_url": "https://api.github.com/users/usmankha123/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmankha123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmankha123/subscriptions", "organizations_url": "https://api.github.com/users/usmankha123/orgs", "repos_url": "https://api.github.com/users/usmankha123/repos", "events_url": "https://api.github.com/users/usmankha123/events{/privacy}", "received_events_url": "https://api.github.com/users/usmankha123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-18T14:22:14Z", "updated_at": "2017-04-10T16:25:39Z", "closed_at": "2016-09-18T22:28:28Z", "author_association": "NONE", "body_html": "<p>After updating version of tenserflow  there is now an issue when loading with my old models.</p>\n<p>./importer.py\", line 241, in import_graph_def<br>\nraise ValueError('tf.import_graph_def() requires a non-empty <code>name</code> '<br>\nValueError: tf.import_graph_def() requires a non-empty <code>name</code> if <code>input_map</code> is used.</p>\n<p>The same is case when i try colorize model colorize-20160110</p>\n<p>how to fix this. The code is given below<br>\nimport tensorflow as tf<br>\nimport skimage.transform<br>\nfrom skimage.io import imsave, imread</p>\n<p>def load_image(path):<br>\nimg = imread(path)<br>\n# crop image from center<br>\nshort_edge = min(img.shape[:2])<br>\nyy = int((img.shape[0] - short_edge) / 2)<br>\nxx = int((img.shape[1] - short_edge) / 2)<br>\ncrop_img = img[yy : yy + short_edge, xx : xx + short_edge]<br>\n# resize to 224, 224<br>\nimg = skimage.transform.resize(crop_img, (224, 224))<br>\n# desaturate image<br>\nreturn (img[:,:,0] + img[:,:,1] + img[:,:,2]) / 3.0</p>\n<p>shark_gray = load_image(\"shark.jpg\").reshape(1, 224, 224, 1)</p>\n<p>with open(\"colorize.tfmodel\", mode='rb') as f:<br>\nfileContent = f.read()</p>\n<p>graph_def = tf.GraphDef()<br>\ngraph_def.ParseFromString(fileContent)<br>\ngrayscale = tf.placeholder(\"float\", [1, 224, 224, 1])<br>\ntf.import_graph_def(graph_def, input_map={ \"grayscale\": grayscale }, name='')</p>\n<p>with tf.Session() as sess:<br>\ninferred_rgb = sess.graph.get_tensor_by_name(\"inferred_rgb:0\")<br>\ninferred_batch = sess.run(inferred_rgb, feed_dict={ grayscale: shark_gray })<br>\nimsave(\"shark-color.jpg\", inferred_batch[0])<br>\nprint (\"saved shark-color.jpg\")</p>", "body_text": "After updating version of tenserflow  there is now an issue when loading with my old models.\n./importer.py\", line 241, in import_graph_def\nraise ValueError('tf.import_graph_def() requires a non-empty name '\nValueError: tf.import_graph_def() requires a non-empty name if input_map is used.\nThe same is case when i try colorize model colorize-20160110\nhow to fix this. The code is given below\nimport tensorflow as tf\nimport skimage.transform\nfrom skimage.io import imsave, imread\ndef load_image(path):\nimg = imread(path)\n# crop image from center\nshort_edge = min(img.shape[:2])\nyy = int((img.shape[0] - short_edge) / 2)\nxx = int((img.shape[1] - short_edge) / 2)\ncrop_img = img[yy : yy + short_edge, xx : xx + short_edge]\n# resize to 224, 224\nimg = skimage.transform.resize(crop_img, (224, 224))\n# desaturate image\nreturn (img[:,:,0] + img[:,:,1] + img[:,:,2]) / 3.0\nshark_gray = load_image(\"shark.jpg\").reshape(1, 224, 224, 1)\nwith open(\"colorize.tfmodel\", mode='rb') as f:\nfileContent = f.read()\ngraph_def = tf.GraphDef()\ngraph_def.ParseFromString(fileContent)\ngrayscale = tf.placeholder(\"float\", [1, 224, 224, 1])\ntf.import_graph_def(graph_def, input_map={ \"grayscale\": grayscale }, name='')\nwith tf.Session() as sess:\ninferred_rgb = sess.graph.get_tensor_by_name(\"inferred_rgb:0\")\ninferred_batch = sess.run(inferred_rgb, feed_dict={ grayscale: shark_gray })\nimsave(\"shark-color.jpg\", inferred_batch[0])\nprint (\"saved shark-color.jpg\")", "body": "After updating version of tenserflow  there is now an issue when loading with my old models. \n\n./importer.py\", line 241, in import_graph_def\n    raise ValueError('tf.import_graph_def() requires a non-empty `name` '\nValueError: tf.import_graph_def() requires a non-empty `name` if `input_map` is used.\n\nThe same is case when i try colorize model colorize-20160110\n\nhow to fix this. The code is given below\nimport tensorflow as tf\nimport skimage.transform\nfrom skimage.io import imsave, imread\n\ndef load_image(path):\n    img = imread(path)\n    # crop image from center\n    short_edge = min(img.shape[:2])\n    yy = int((img.shape[0] - short_edge) / 2)\n    xx = int((img.shape[1] - short_edge) / 2)\n    crop_img = img[yy : yy + short_edge, xx : xx + short_edge]\n    # resize to 224, 224\n    img = skimage.transform.resize(crop_img, (224, 224))\n    # desaturate image\n    return (img[:,:,0] + img[:,:,1] + img[:,:,2]) / 3.0\n\nshark_gray = load_image(\"shark.jpg\").reshape(1, 224, 224, 1)\n\nwith open(\"colorize.tfmodel\", mode='rb') as f:\n    fileContent = f.read()\n\ngraph_def = tf.GraphDef()\ngraph_def.ParseFromString(fileContent)\ngrayscale = tf.placeholder(\"float\", [1, 224, 224, 1])\ntf.import_graph_def(graph_def, input_map={ \"grayscale\": grayscale }, name='')\n\nwith tf.Session() as sess:\n    inferred_rgb = sess.graph.get_tensor_by_name(\"inferred_rgb:0\")\n    inferred_batch = sess.run(inferred_rgb, feed_dict={ grayscale: shark_gray })\n    imsave(\"shark-color.jpg\", inferred_batch[0])\n    print (\"saved shark-color.jpg\")\n"}