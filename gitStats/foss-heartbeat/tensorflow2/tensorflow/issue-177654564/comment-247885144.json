{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/247885144", "html_url": "https://github.com/tensorflow/tensorflow/issues/4438#issuecomment-247885144", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4438", "id": 247885144, "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzg4NTE0NA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-18T22:28:28Z", "updated_at": "2016-09-18T22:28:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The old version of <code>tf.import_graph_def()</code> was broken if you specified both <code>input_map</code> and <code>name=''</code>. It looks like the fix is quite easy for your case, though. Simply remove the explicit <code>name=''</code> (which is not recommended, since it can lead to unpredictable names for the imported nodes), and use <code>return_elements=[\"inferred_rgb:0\"]</code> to get the <code>inferred_rgb</code> tensor as a return value from <code>tf.import_graph_def()</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> [...]</span>\ngraph_def <span class=\"pl-k\">=</span> tf.GraphDef()\ngraph_def.ParseFromString(fileContent)\ngrayscale <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">224</span>, <span class=\"pl-c1\">224</span>, <span class=\"pl-c1\">1</span>])\ninferred_rgb, <span class=\"pl-k\">=</span> tf.import_graph_def(graph_def, <span class=\"pl-v\">input_map</span><span class=\"pl-k\">=</span>{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>grayscale<span class=\"pl-pds\">\"</span></span>: grayscale },\n                                    <span class=\"pl-v\">return_elements</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>inferred_rgb:0<span class=\"pl-pds\">\"</span></span>])\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n  inferred_batch <span class=\"pl-k\">=</span> sess.run(inferred_rgb, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{grayscale: shark_gray})\n  imsave(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shark-color.jpg<span class=\"pl-pds\">\"</span></span>, inferred_batch[<span class=\"pl-c1\">0</span>])\n  <span class=\"pl-c1\">print</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>saved shark-color.jpg<span class=\"pl-pds\">\"</span></span>)</pre></div>", "body_text": "The old version of tf.import_graph_def() was broken if you specified both input_map and name=''. It looks like the fix is quite easy for your case, though. Simply remove the explicit name='' (which is not recommended, since it can lead to unpredictable names for the imported nodes), and use return_elements=[\"inferred_rgb:0\"] to get the inferred_rgb tensor as a return value from tf.import_graph_def():\n# [...]\ngraph_def = tf.GraphDef()\ngraph_def.ParseFromString(fileContent)\ngrayscale = tf.placeholder(tf.float32, [1, 224, 224, 1])\ninferred_rgb, = tf.import_graph_def(graph_def, input_map={\"grayscale\": grayscale },\n                                    return_elements=[\"inferred_rgb:0\"])\n\nwith tf.Session() as sess:\n  inferred_batch = sess.run(inferred_rgb, feed_dict={grayscale: shark_gray})\n  imsave(\"shark-color.jpg\", inferred_batch[0])\n  print (\"saved shark-color.jpg\")", "body": "The old version of `tf.import_graph_def()` was broken if you specified both `input_map` and `name=''`. It looks like the fix is quite easy for your case, though. Simply remove the explicit `name=''` (which is not recommended, since it can lead to unpredictable names for the imported nodes), and use `return_elements=[\"inferred_rgb:0\"]` to get the `inferred_rgb` tensor as a return value from `tf.import_graph_def()`:\n\n``` python\n# [...]\ngraph_def = tf.GraphDef()\ngraph_def.ParseFromString(fileContent)\ngrayscale = tf.placeholder(tf.float32, [1, 224, 224, 1])\ninferred_rgb, = tf.import_graph_def(graph_def, input_map={\"grayscale\": grayscale },\n                                    return_elements=[\"inferred_rgb:0\"])\n\nwith tf.Session() as sess:\n  inferred_batch = sess.run(inferred_rgb, feed_dict={grayscale: shark_gray})\n  imsave(\"shark-color.jpg\", inferred_batch[0])\n  print (\"saved shark-color.jpg\")\n```\n"}