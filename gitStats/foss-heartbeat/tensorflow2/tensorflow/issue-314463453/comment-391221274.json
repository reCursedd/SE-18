{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/391221274", "html_url": "https://github.com/tensorflow/tensorflow/issues/18539#issuecomment-391221274", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18539", "id": 391221274, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIyMTI3NA==", "user": {"login": "Cpruce", "id": 2712171, "node_id": "MDQ6VXNlcjI3MTIxNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2712171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cpruce", "html_url": "https://github.com/Cpruce", "followers_url": "https://api.github.com/users/Cpruce/followers", "following_url": "https://api.github.com/users/Cpruce/following{/other_user}", "gists_url": "https://api.github.com/users/Cpruce/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cpruce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cpruce/subscriptions", "organizations_url": "https://api.github.com/users/Cpruce/orgs", "repos_url": "https://api.github.com/users/Cpruce/repos", "events_url": "https://api.github.com/users/Cpruce/events{/privacy}", "received_events_url": "https://api.github.com/users/Cpruce/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-23T05:03:57Z", "updated_at": "2018-05-23T05:04:12Z", "author_association": "NONE", "body_html": "<p>After some digging, I found that it was due to<br>\n<code> AllocateTransientArrays(model, kDefaultTransientDataAlignment);</code><br>\nfrom</p>\n<div class=\"highlight highlight-source-c\"><pre><span class=\"pl-k\">if</span> (SupportsPreallocatedWorkspace(output_format)) { \n   <span class=\"pl-c1\">AllocateTransientArrays</span>(model, <span class=\"pl-c1\">kDefaultTransientDataAlignment</span>);\n   <span class=\"pl-c1\">LogDump</span>(<span class=\"pl-c1\">kLogLevelModelChanged</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AFTER ALLOCATION<span class=\"pl-pds\">\"</span></span>, *model); \n}</pre></div>\n<p>in the <code>void Transform(const TocoFlags&amp; toco_flags, Model* model)</code> call in <code>ToolMain</code><br>\nand not from<br>\n<code>Import(toco_flags, model_flags, graph_def_contents);</code> in <code>ToolMain</code>.</p>\n<p>Here's my output:</p>\n<p>...<br>\ndimension 0size: 1<br>\ndimension 0size: 4<br>\n2018-05-22 21:55:46.128895: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before dequantization graph transformations: 564 operators, 1155 arrays (0 quantized)<br>\nfrom Transform<br>\nfrom AllocateTransientArrays<br>\nallocating mrcnn_detection/map/while/NextIteration<br>\nfrom AllocateTransientArray<br>\nfrom TransientArraySize<br>\ndimension 0size: 1<br>\ndimension 1size: 1<br>\ndimension 2size: 1<br>\ndimension 3size: 0<br>\n2018-05-22 21:55:46.141249: F tensorflow/contrib/lite/toco/tooling_util.cc:664] Check failed: dim &gt;= 1 (0 vs. 1)<br>\nAbort trap: 6</p>\n<p>Is this expected with the <code>while</code> op since it is not implemented for lite yet and is it alright if I comment out the <code>SupportsPreallocatedWorkspace(output_format)</code> conditional block?</p>", "body_text": "After some digging, I found that it was due to\n AllocateTransientArrays(model, kDefaultTransientDataAlignment);\nfrom\nif (SupportsPreallocatedWorkspace(output_format)) { \n   AllocateTransientArrays(model, kDefaultTransientDataAlignment);\n   LogDump(kLogLevelModelChanged, \"AFTER ALLOCATION\", *model); \n}\nin the void Transform(const TocoFlags& toco_flags, Model* model) call in ToolMain\nand not from\nImport(toco_flags, model_flags, graph_def_contents); in ToolMain.\nHere's my output:\n...\ndimension 0size: 1\ndimension 0size: 4\n2018-05-22 21:55:46.128895: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before dequantization graph transformations: 564 operators, 1155 arrays (0 quantized)\nfrom Transform\nfrom AllocateTransientArrays\nallocating mrcnn_detection/map/while/NextIteration\nfrom AllocateTransientArray\nfrom TransientArraySize\ndimension 0size: 1\ndimension 1size: 1\ndimension 2size: 1\ndimension 3size: 0\n2018-05-22 21:55:46.141249: F tensorflow/contrib/lite/toco/tooling_util.cc:664] Check failed: dim >= 1 (0 vs. 1)\nAbort trap: 6\nIs this expected with the while op since it is not implemented for lite yet and is it alright if I comment out the SupportsPreallocatedWorkspace(output_format) conditional block?", "body": "After some digging, I found that it was due to \r\n`\r\nAllocateTransientArrays(model, kDefaultTransientDataAlignment);` \r\nfrom\r\n```c\r\nif (SupportsPreallocatedWorkspace(output_format)) { \r\n   AllocateTransientArrays(model, kDefaultTransientDataAlignment);\r\n   LogDump(kLogLevelModelChanged, \"AFTER ALLOCATION\", *model); \r\n}\r\n```\r\nin the `void Transform(const TocoFlags& toco_flags, Model* model)` call in `ToolMain`\r\nand not from \r\n`Import(toco_flags, model_flags, graph_def_contents);` in `ToolMain`.\r\n\r\nHere's my output:\r\n\r\n...\r\ndimension 0size: 1\r\ndimension 0size: 4\r\n2018-05-22 21:55:46.128895: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before dequantization graph transformations: 564 operators, 1155 arrays (0 quantized)\r\nfrom Transform\r\nfrom AllocateTransientArrays\r\nallocating mrcnn_detection/map/while/NextIteration\r\nfrom AllocateTransientArray\r\nfrom TransientArraySize\r\ndimension 0size: 1\r\ndimension 1size: 1\r\ndimension 2size: 1\r\ndimension 3size: 0\r\n2018-05-22 21:55:46.141249: F tensorflow/contrib/lite/toco/tooling_util.cc:664] Check failed: dim >= 1 (0 vs. 1)\r\nAbort trap: 6\r\n\r\n\r\nIs this expected with the `while` op since it is not implemented for lite yet and is it alright if I comment out the `SupportsPreallocatedWorkspace(output_format)` conditional block?"}