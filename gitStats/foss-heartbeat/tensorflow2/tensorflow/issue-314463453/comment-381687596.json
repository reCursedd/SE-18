{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/381687596", "html_url": "https://github.com/tensorflow/tensorflow/issues/18539#issuecomment-381687596", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18539", "id": 381687596, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTY4NzU5Ng==", "user": {"login": "Cpruce", "id": 2712171, "node_id": "MDQ6VXNlcjI3MTIxNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2712171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cpruce", "html_url": "https://github.com/Cpruce", "followers_url": "https://api.github.com/users/Cpruce/followers", "following_url": "https://api.github.com/users/Cpruce/following{/other_user}", "gists_url": "https://api.github.com/users/Cpruce/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cpruce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cpruce/subscriptions", "organizations_url": "https://api.github.com/users/Cpruce/orgs", "repos_url": "https://api.github.com/users/Cpruce/repos", "events_url": "https://api.github.com/users/Cpruce/events{/privacy}", "received_events_url": "https://api.github.com/users/Cpruce/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-16T17:37:29Z", "updated_at": "2018-04-16T17:37:29Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a>,</p>\n<p>It seems to be failing at <code>CHECK_GE(d, 1);</code><br>\nin</p>\n<p>`// Apply checks to arrays individually (for-each fashion).<br>\n//<br>\n// Check consistency of array fields, check name.<br>\nvoid CheckEachArray(const Model&amp; model) {<br>\nfor (const auto&amp; array_entry : model.GetArrayMap()) {<br>\nconst auto&amp; array = array_entry.second;<br>\nif (array-&gt;has_shape()) {<br>\nfor (int d : array-&gt;shape().dims()) {<br>\nCHECK_GE(d, 1);<br>\n}<br>\n}<br>\n// It's OK to have a buffer or an alloc, but not both.<br>\n// (Since allocs are for transient arrays without a buffer).<br>\nCHECK(!array-&gt;buffer || !array-&gt;alloc);<br>\nif (array-&gt;buffer) {<br>\n// If there is a buffer, its type should be consistent with data_type.<br>\nCHECK(array-&gt;buffer-&gt;type == array-&gt;data_type);<br>\n// The presence of a fixed buffer should imply the presence of a fixed<br>\n// shape.<br>\nCHECK(array-&gt;has_shape());<br>\n// The shape flat-size should agree with the buffer length.<br>\nCHECK_EQ(array-&gt;buffer-&gt;Length(),<br>\nRequiredBufferSizeForShape(array-&gt;shape()));<br>\n}</p>\n<pre><code>// Check name.  Either \"name_with_suffix_8\", \"name_with_port:3\", but not\n// \"name_with_both:3_8\".\nconst string&amp; name = array_entry.first;\nauto colon_pos = name.find_first_of(\":\");\nif (colon_pos != string::npos) {\n  CHECK_EQ(name.substr(colon_pos + 1).find_first_not_of(\"0123456789\"),\n           string::npos)\n      &lt;&lt; \"Array name must only have digits after colon\";\n}\nCHECK_GT(colon_pos, 0)\n    &lt;&lt; \"First character of array name must not be a colon.\";\n</code></pre>\n<p>}<br>\n}`</p>\n<p>Is the error produced when converting this instance of the CropAndResize operation? Also, are there any tools you recommend for narrowing down the error, ie. valgrind or some toco specific util?</p>", "body_text": "Hi @asimshankar,\nIt seems to be failing at CHECK_GE(d, 1);\nin\n`// Apply checks to arrays individually (for-each fashion).\n//\n// Check consistency of array fields, check name.\nvoid CheckEachArray(const Model& model) {\nfor (const auto& array_entry : model.GetArrayMap()) {\nconst auto& array = array_entry.second;\nif (array->has_shape()) {\nfor (int d : array->shape().dims()) {\nCHECK_GE(d, 1);\n}\n}\n// It's OK to have a buffer or an alloc, but not both.\n// (Since allocs are for transient arrays without a buffer).\nCHECK(!array->buffer || !array->alloc);\nif (array->buffer) {\n// If there is a buffer, its type should be consistent with data_type.\nCHECK(array->buffer->type == array->data_type);\n// The presence of a fixed buffer should imply the presence of a fixed\n// shape.\nCHECK(array->has_shape());\n// The shape flat-size should agree with the buffer length.\nCHECK_EQ(array->buffer->Length(),\nRequiredBufferSizeForShape(array->shape()));\n}\n// Check name.  Either \"name_with_suffix_8\", \"name_with_port:3\", but not\n// \"name_with_both:3_8\".\nconst string& name = array_entry.first;\nauto colon_pos = name.find_first_of(\":\");\nif (colon_pos != string::npos) {\n  CHECK_EQ(name.substr(colon_pos + 1).find_first_not_of(\"0123456789\"),\n           string::npos)\n      << \"Array name must only have digits after colon\";\n}\nCHECK_GT(colon_pos, 0)\n    << \"First character of array name must not be a colon.\";\n\n}\n}`\nIs the error produced when converting this instance of the CropAndResize operation? Also, are there any tools you recommend for narrowing down the error, ie. valgrind or some toco specific util?", "body": "Hi @asimshankar,\r\n\r\nIt seems to be failing at `CHECK_GE(d, 1);`\r\nin\r\n\r\n`// Apply checks to arrays individually (for-each fashion).\r\n//\r\n// Check consistency of array fields, check name.\r\nvoid CheckEachArray(const Model& model) {\r\n  for (const auto& array_entry : model.GetArrayMap()) {\r\n    const auto& array = array_entry.second;\r\n    if (array->has_shape()) {\r\n      for (int d : array->shape().dims()) {\r\n        CHECK_GE(d, 1);\r\n      }\r\n    }\r\n    // It's OK to have a buffer or an alloc, but not both.\r\n    // (Since allocs are for transient arrays without a buffer).\r\n    CHECK(!array->buffer || !array->alloc);\r\n    if (array->buffer) {\r\n      // If there is a buffer, its type should be consistent with data_type.\r\n      CHECK(array->buffer->type == array->data_type);\r\n      // The presence of a fixed buffer should imply the presence of a fixed\r\n      // shape.\r\n      CHECK(array->has_shape());\r\n      // The shape flat-size should agree with the buffer length.\r\n      CHECK_EQ(array->buffer->Length(),\r\n               RequiredBufferSizeForShape(array->shape()));\r\n    }\r\n\r\n    // Check name.  Either \"name_with_suffix_8\", \"name_with_port:3\", but not\r\n    // \"name_with_both:3_8\".\r\n    const string& name = array_entry.first;\r\n    auto colon_pos = name.find_first_of(\":\");\r\n    if (colon_pos != string::npos) {\r\n      CHECK_EQ(name.substr(colon_pos + 1).find_first_not_of(\"0123456789\"),\r\n               string::npos)\r\n          << \"Array name must only have digits after colon\";\r\n    }\r\n    CHECK_GT(colon_pos, 0)\r\n        << \"First character of array name must not be a colon.\";\r\n  }\r\n}`\r\n\r\nIs the error produced when converting this instance of the CropAndResize operation? Also, are there any tools you recommend for narrowing down the error, ie. valgrind or some toco specific util?"}