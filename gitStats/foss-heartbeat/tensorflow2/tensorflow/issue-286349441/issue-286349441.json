{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15883", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15883/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15883/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15883/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15883", "id": 286349441, "node_id": "MDU6SXNzdWUyODYzNDk0NDE=", "number": 15883, "title": "Different convolutional padding per channel", "user": {"login": "squared9", "id": 1788200, "node_id": "MDQ6VXNlcjE3ODgyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1788200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/squared9", "html_url": "https://github.com/squared9", "followers_url": "https://api.github.com/users/squared9/followers", "following_url": "https://api.github.com/users/squared9/following{/other_user}", "gists_url": "https://api.github.com/users/squared9/gists{/gist_id}", "starred_url": "https://api.github.com/users/squared9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/squared9/subscriptions", "organizations_url": "https://api.github.com/users/squared9/orgs", "repos_url": "https://api.github.com/users/squared9/repos", "events_url": "https://api.github.com/users/squared9/events{/privacy}", "received_events_url": "https://api.github.com/users/squared9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-01-05T17:13:06Z", "updated_at": "2018-06-12T19:12:39Z", "closed_at": "2018-06-12T19:11:24Z", "author_association": "NONE", "body_html": "<p>Hello,</p>\n<p>would it be possible to specify different convolutional padding for each channel? My use case is using 3D convolutions on input, where the first dimension is temporal and the next 2 dimensions are 2D images. I'd like to have \"SAME\" padding on temporal dimension and \"VALID\" padding on convolutional dimensions.</p>\n<p>The model in question is for estimating speed of a vehicle from on-board camera where a sequence of images of fixed length (e.g. 10 frames) is sent to a 3D convolutional network and it makes sense to avoid unnecessary clipping of temporal dimension where it's perfectly fine for convolutional part.</p>\n<p>Would this be possible to add to TensorFlow?</p>\n<p>Thank you!</p>\n<p>Have I written custom code: No<br>\nOS Platform and Distribution: Linux Mint 18.2<br>\nTensorFlow installed from: pip<br>\nTensorFlow version: 1.3.0<br>\nBazel version: N/A<br>\nCUDA/cuDNN version: 9.0<br>\nGPU model and memory: GTX970 4GB<br>\nExact command to reproduce: tf.nn.conv2d's \"padding\" parameter uses a single approach for all convolutional dimensions</p>", "body_text": "Hello,\nwould it be possible to specify different convolutional padding for each channel? My use case is using 3D convolutions on input, where the first dimension is temporal and the next 2 dimensions are 2D images. I'd like to have \"SAME\" padding on temporal dimension and \"VALID\" padding on convolutional dimensions.\nThe model in question is for estimating speed of a vehicle from on-board camera where a sequence of images of fixed length (e.g. 10 frames) is sent to a 3D convolutional network and it makes sense to avoid unnecessary clipping of temporal dimension where it's perfectly fine for convolutional part.\nWould this be possible to add to TensorFlow?\nThank you!\nHave I written custom code: No\nOS Platform and Distribution: Linux Mint 18.2\nTensorFlow installed from: pip\nTensorFlow version: 1.3.0\nBazel version: N/A\nCUDA/cuDNN version: 9.0\nGPU model and memory: GTX970 4GB\nExact command to reproduce: tf.nn.conv2d's \"padding\" parameter uses a single approach for all convolutional dimensions", "body": "Hello,\r\n\r\nwould it be possible to specify different convolutional padding for each channel? My use case is using 3D convolutions on input, where the first dimension is temporal and the next 2 dimensions are 2D images. I'd like to have \"SAME\" padding on temporal dimension and \"VALID\" padding on convolutional dimensions.\r\n\r\nThe model in question is for estimating speed of a vehicle from on-board camera where a sequence of images of fixed length (e.g. 10 frames) is sent to a 3D convolutional network and it makes sense to avoid unnecessary clipping of temporal dimension where it's perfectly fine for convolutional part.\r\n\r\nWould this be possible to add to TensorFlow?\r\n\r\nThank you!\r\n\r\nHave I written custom code: No\r\nOS Platform and Distribution: Linux Mint 18.2\r\nTensorFlow installed from: pip\r\nTensorFlow version: 1.3.0\r\nBazel version: N/A\r\nCUDA/cuDNN version: 9.0\r\nGPU model and memory: GTX970 4GB\r\nExact command to reproduce: tf.nn.conv2d's \"padding\" parameter uses a single approach for all convolutional dimensions\r\n  "}