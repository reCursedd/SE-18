{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/253059608", "html_url": "https://github.com/tensorflow/tensorflow/issues/4897#issuecomment-253059608", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4897", "id": 253059608, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzA1OTYwOA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-11T22:00:20Z", "updated_at": "2016-10-11T22:00:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Baking in the NN assumptions too deeply is why DistBelief ended up so inflexible. In TensorFlow you can minimize the loss which is <code>sum(XWX')</code>, where X is a single matrix-valued example, so that's your per-example gradient. Allowing <code>tf.gradients</code> to differentiate with respect to vector valued <code>vec</code> seems like a good idea, that would make it simpler to compute Hessians as well as per-example gradients</p>", "body_text": "Baking in the NN assumptions too deeply is why DistBelief ended up so inflexible. In TensorFlow you can minimize the loss which is sum(XWX'), where X is a single matrix-valued example, so that's your per-example gradient. Allowing tf.gradients to differentiate with respect to vector valued vec seems like a good idea, that would make it simpler to compute Hessians as well as per-example gradients", "body": "Baking in the NN assumptions too deeply is why DistBelief ended up so inflexible. In TensorFlow you can minimize the loss which is `sum(XWX')`, where X is a single matrix-valued example, so that's your per-example gradient. Allowing `tf.gradients` to differentiate with respect to vector valued `vec` seems like a good idea, that would make it simpler to compute Hessians as well as per-example gradients\n"}