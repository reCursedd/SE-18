{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/419115628", "html_url": "https://github.com/tensorflow/tensorflow/issues/22068#issuecomment-419115628", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22068", "id": 419115628, "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTExNTYyOA==", "user": {"login": "shashank2710", "id": 25356349, "node_id": "MDQ6VXNlcjI1MzU2MzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/25356349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shashank2710", "html_url": "https://github.com/shashank2710", "followers_url": "https://api.github.com/users/shashank2710/followers", "following_url": "https://api.github.com/users/shashank2710/following{/other_user}", "gists_url": "https://api.github.com/users/shashank2710/gists{/gist_id}", "starred_url": "https://api.github.com/users/shashank2710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shashank2710/subscriptions", "organizations_url": "https://api.github.com/users/shashank2710/orgs", "repos_url": "https://api.github.com/users/shashank2710/repos", "events_url": "https://api.github.com/users/shashank2710/events{/privacy}", "received_events_url": "https://api.github.com/users/shashank2710/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-06T14:32:16Z", "updated_at": "2018-09-06T14:34:30Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6756603\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/PatWie\">@PatWie</a>.. Thank you for your response. That was helpful.</p>\n<p>Your link that you posted is not valid. Could you kindly update that?</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6756603\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/PatWie\">@PatWie</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=88808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/skye\">@skye</a><br>\nAttached herewith is an updated code that I am currently working on:</p>\n<pre><code>/*\n * main.cpp\n *\n *  Created on: Aug 21, 2018\n *      Author: ssatyanarayana\n */\n\n\n#include &lt;fstream&gt;\n#include &lt;utility&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\n\n#include \"tensorflow/cc/ops/const_op.h\"\n#include \"tensorflow/cc/ops/image_ops.h\"\n#include \"tensorflow/cc/ops/standard_ops.h\"\n#include \"tensorflow/core/framework/graph.pb.h\"\n#include \"tensorflow/core/graph/default_device.h\"\n#include \"tensorflow/core/graph/graph_def_builder.h\"\n#include \"tensorflow/core/lib/core/threadpool.h\"\n#include \"tensorflow/core/lib/io/path.h\"\n#include \"tensorflow/core/lib/strings/stringprintf.h\"\n#include \"tensorflow/core/platform/init_main.h\"\n#include \"tensorflow/core/public/session.h\"\n#include \"tensorflow/core/util/command_line_flags.h\"\n\n#include &lt;opencv2/core/mat.hpp&gt;\n#include &lt;opencv2/videoio.hpp&gt;\n#include &lt;opencv2/highgui/highgui.hpp&gt;\n#include &lt;opencv2/imgproc/imgproc.hpp&gt;\n\nusing tensorflow::Flag;\nusing tensorflow::Tensor;\nusing tensorflow::Status;\nusing tensorflow::string;\nusing tensorflow::int32;\n\nusing namespace std;\nusing namespace cv;\n\n\nconst int64 tf_height = 128;\nconst int64 tf_width = 128;\n\nint main()\n{\n\tstring folderpath = \"/home/ssatyanarayana/OCR-Engine-Local/data/alphabets/myTest/*.jpg\";\n\tstd::vector&lt;String&gt; filenames;\n\tcv::glob(folderpath, filenames);\n\n\t// Set input &amp; output nodes names\n\tstd::string inputLayer = \"conv2d_1_input\";\n\tstd::string outputLayer = \"k2tfout_0\";\n\n\t//Initializing the Graph\n\ttensorflow::GraphDef graph_def;\n\n\t// Specify file location of Output Graph\n\tstd::string graphFile = \"/home/ssatyanarayana/OCR-Engine-Local/output_graph.pb\";\n\n\t// Loading the graph to the given variable\n\ttensorflow::Status graphLoadedStatus = ReadBinaryProto(tensorflow::Env::Default(),graphFile,&amp;graph_def);\n\tif (!graphLoadedStatus.ok()){\n\t\tstd::cout &lt;&lt; graphLoadedStatus.ToString()&lt;&lt;std::endl;\n\t\treturn 1;\n\t}\n\n\tstd::vector&lt;Tensor&gt; outputs;\n\n\tfor (size_t i=0; i&lt;filenames.size(); i++)\n\t{\n\t\tcv::Mat image = cv::imread(filenames[i]);\n\n\t\tTensor image_tensor (tensorflow::DT_FLOAT, tensorflow::TensorShape{1,tf_height,tf_width,3});\n\t\timage.convertTo(image, CV_32FC3);\n\t\ttensorflow::StringPiece tmp_data = image_tensor.tensor_data();\n\t\tmemcpy(const_cast&lt;char*&gt;(tmp_data.data()), (image.data), tf_height * tf_width * sizeof(float));\n\n\t\t// Creating a Session with the Graph\n\t\tstd::unique_ptr&lt;tensorflow::Session&gt; session(tensorflow::NewSession(tensorflow::SessionOptions()));\n\t\t//session-&gt;tensorflow::reset(tensorflow::NewSession(tensorflow::SessionOptions()));\n\t\ttensorflow::Status session_create_status = session-&gt;Create(graph_def);\n\n\t\tstd::vector&lt;std::pair&lt;string, tensorflow::Tensor&gt;&gt; inputs = {{inputLayer, image_tensor}};\n\t\toutputs.clear();\n\n\t\tStatus runStatus = session-&gt;Run(inputs, {outputLayer}, {}, &amp;outputs);\n\t\tif (!runStatus.ok()) {\n\t\t\tLOG(ERROR) &lt;&lt; \"Running model failed: \" &lt;&lt; runStatus;\n\t\t\treturn -1;\n\t\t}\n\n\t\tfor (auto &amp;t : outputs)\n\t\t{\n\t\t\tstd::cout &lt;&lt; t.DebugString()&lt;&lt;std::endl;\n\t\t\ttensorflow::TTypes&lt;float, 2&gt;::Tensor scores = t.flat_inner_dims&lt;float&gt;();\n\t\t\tauto dims = scores.dimensions();\n\t\t\tint imgCount = dims[0];\n\t\t\tint classesCount = dims[1];\n\t\t\tfor(int i = 0; i&lt;imgCount; i++)\n\t\t\t{\n\t\t\t\tfloat maxVal = scores(i,0);\n\t\t\t\tint maxIndex = 0;\n\t\t\t\tfor(int j = 1; j&lt;classesCount; j++) {\n\t\t\t\t\tfloat val = scores(i,j);\n\t\t\t\t\tif(val &gt; maxVal) {\n\t\t\t\t\t\tmaxVal = val;\n\t\t\t\t\t\tmaxIndex = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstd::cout &lt;&lt; \"Img\" &lt;&lt; to_string(i) &lt;&lt; \" prediction: \" &lt;&lt; to_string(maxIndex) &lt;&lt; \", score: \" &lt;&lt; to_string(maxVal)&lt;&lt;std::endl;\n\t\t\t}\n\t\t}\n\n\t\tcv::imshow(\"Original Image\",image);\n\t\tcv::waitKey();\n\t\tsession-&gt;Close();\n\t\timage.release();\n\t}\n    return 0;\n}\n\n\n</code></pre>\n<h2>Issues Faced:</h2>\n<p>-Output tensor fails to clear and provide accurate weights for consecutive loops.<br>\n-Same graph provides higher accuracy in Python (with Keras as TF as backend) when compared to using in C++ directly</p>\n<p>You can access all the required files on <a href=\"url\">https://github.com/shashank2710/OCR-Engine</a></p>", "body_text": "@PatWie.. Thank you for your response. That was helpful.\nYour link that you posted is not valid. Could you kindly update that?\n@PatWie @skye\nAttached herewith is an updated code that I am currently working on:\n/*\n * main.cpp\n *\n *  Created on: Aug 21, 2018\n *      Author: ssatyanarayana\n */\n\n\n#include <fstream>\n#include <utility>\n#include <vector>\n#include <iostream>\n\n#include \"tensorflow/cc/ops/const_op.h\"\n#include \"tensorflow/cc/ops/image_ops.h\"\n#include \"tensorflow/cc/ops/standard_ops.h\"\n#include \"tensorflow/core/framework/graph.pb.h\"\n#include \"tensorflow/core/graph/default_device.h\"\n#include \"tensorflow/core/graph/graph_def_builder.h\"\n#include \"tensorflow/core/lib/core/threadpool.h\"\n#include \"tensorflow/core/lib/io/path.h\"\n#include \"tensorflow/core/lib/strings/stringprintf.h\"\n#include \"tensorflow/core/platform/init_main.h\"\n#include \"tensorflow/core/public/session.h\"\n#include \"tensorflow/core/util/command_line_flags.h\"\n\n#include <opencv2/core/mat.hpp>\n#include <opencv2/videoio.hpp>\n#include <opencv2/highgui/highgui.hpp>\n#include <opencv2/imgproc/imgproc.hpp>\n\nusing tensorflow::Flag;\nusing tensorflow::Tensor;\nusing tensorflow::Status;\nusing tensorflow::string;\nusing tensorflow::int32;\n\nusing namespace std;\nusing namespace cv;\n\n\nconst int64 tf_height = 128;\nconst int64 tf_width = 128;\n\nint main()\n{\n\tstring folderpath = \"/home/ssatyanarayana/OCR-Engine-Local/data/alphabets/myTest/*.jpg\";\n\tstd::vector<String> filenames;\n\tcv::glob(folderpath, filenames);\n\n\t// Set input & output nodes names\n\tstd::string inputLayer = \"conv2d_1_input\";\n\tstd::string outputLayer = \"k2tfout_0\";\n\n\t//Initializing the Graph\n\ttensorflow::GraphDef graph_def;\n\n\t// Specify file location of Output Graph\n\tstd::string graphFile = \"/home/ssatyanarayana/OCR-Engine-Local/output_graph.pb\";\n\n\t// Loading the graph to the given variable\n\ttensorflow::Status graphLoadedStatus = ReadBinaryProto(tensorflow::Env::Default(),graphFile,&graph_def);\n\tif (!graphLoadedStatus.ok()){\n\t\tstd::cout << graphLoadedStatus.ToString()<<std::endl;\n\t\treturn 1;\n\t}\n\n\tstd::vector<Tensor> outputs;\n\n\tfor (size_t i=0; i<filenames.size(); i++)\n\t{\n\t\tcv::Mat image = cv::imread(filenames[i]);\n\n\t\tTensor image_tensor (tensorflow::DT_FLOAT, tensorflow::TensorShape{1,tf_height,tf_width,3});\n\t\timage.convertTo(image, CV_32FC3);\n\t\ttensorflow::StringPiece tmp_data = image_tensor.tensor_data();\n\t\tmemcpy(const_cast<char*>(tmp_data.data()), (image.data), tf_height * tf_width * sizeof(float));\n\n\t\t// Creating a Session with the Graph\n\t\tstd::unique_ptr<tensorflow::Session> session(tensorflow::NewSession(tensorflow::SessionOptions()));\n\t\t//session->tensorflow::reset(tensorflow::NewSession(tensorflow::SessionOptions()));\n\t\ttensorflow::Status session_create_status = session->Create(graph_def);\n\n\t\tstd::vector<std::pair<string, tensorflow::Tensor>> inputs = {{inputLayer, image_tensor}};\n\t\toutputs.clear();\n\n\t\tStatus runStatus = session->Run(inputs, {outputLayer}, {}, &outputs);\n\t\tif (!runStatus.ok()) {\n\t\t\tLOG(ERROR) << \"Running model failed: \" << runStatus;\n\t\t\treturn -1;\n\t\t}\n\n\t\tfor (auto &t : outputs)\n\t\t{\n\t\t\tstd::cout << t.DebugString()<<std::endl;\n\t\t\ttensorflow::TTypes<float, 2>::Tensor scores = t.flat_inner_dims<float>();\n\t\t\tauto dims = scores.dimensions();\n\t\t\tint imgCount = dims[0];\n\t\t\tint classesCount = dims[1];\n\t\t\tfor(int i = 0; i<imgCount; i++)\n\t\t\t{\n\t\t\t\tfloat maxVal = scores(i,0);\n\t\t\t\tint maxIndex = 0;\n\t\t\t\tfor(int j = 1; j<classesCount; j++) {\n\t\t\t\t\tfloat val = scores(i,j);\n\t\t\t\t\tif(val > maxVal) {\n\t\t\t\t\t\tmaxVal = val;\n\t\t\t\t\t\tmaxIndex = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstd::cout << \"Img\" << to_string(i) << \" prediction: \" << to_string(maxIndex) << \", score: \" << to_string(maxVal)<<std::endl;\n\t\t\t}\n\t\t}\n\n\t\tcv::imshow(\"Original Image\",image);\n\t\tcv::waitKey();\n\t\tsession->Close();\n\t\timage.release();\n\t}\n    return 0;\n}\n\n\n\nIssues Faced:\n-Output tensor fails to clear and provide accurate weights for consecutive loops.\n-Same graph provides higher accuracy in Python (with Keras as TF as backend) when compared to using in C++ directly\nYou can access all the required files on https://github.com/shashank2710/OCR-Engine", "body": "@PatWie.. Thank you for your response. That was helpful.  \r\n\r\nYour link that you posted is not valid. Could you kindly update that? \r\n\r\n@PatWie @skye \r\nAttached herewith is an updated code that I am currently working on:\r\n```\r\n/*\r\n * main.cpp\r\n *\r\n *  Created on: Aug 21, 2018\r\n *      Author: ssatyanarayana\r\n */\r\n\r\n\r\n#include <fstream>\r\n#include <utility>\r\n#include <vector>\r\n#include <iostream>\r\n\r\n#include \"tensorflow/cc/ops/const_op.h\"\r\n#include \"tensorflow/cc/ops/image_ops.h\"\r\n#include \"tensorflow/cc/ops/standard_ops.h\"\r\n#include \"tensorflow/core/framework/graph.pb.h\"\r\n#include \"tensorflow/core/graph/default_device.h\"\r\n#include \"tensorflow/core/graph/graph_def_builder.h\"\r\n#include \"tensorflow/core/lib/core/threadpool.h\"\r\n#include \"tensorflow/core/lib/io/path.h\"\r\n#include \"tensorflow/core/lib/strings/stringprintf.h\"\r\n#include \"tensorflow/core/platform/init_main.h\"\r\n#include \"tensorflow/core/public/session.h\"\r\n#include \"tensorflow/core/util/command_line_flags.h\"\r\n\r\n#include <opencv2/core/mat.hpp>\r\n#include <opencv2/videoio.hpp>\r\n#include <opencv2/highgui/highgui.hpp>\r\n#include <opencv2/imgproc/imgproc.hpp>\r\n\r\nusing tensorflow::Flag;\r\nusing tensorflow::Tensor;\r\nusing tensorflow::Status;\r\nusing tensorflow::string;\r\nusing tensorflow::int32;\r\n\r\nusing namespace std;\r\nusing namespace cv;\r\n\r\n\r\nconst int64 tf_height = 128;\r\nconst int64 tf_width = 128;\r\n\r\nint main()\r\n{\r\n\tstring folderpath = \"/home/ssatyanarayana/OCR-Engine-Local/data/alphabets/myTest/*.jpg\";\r\n\tstd::vector<String> filenames;\r\n\tcv::glob(folderpath, filenames);\r\n\r\n\t// Set input & output nodes names\r\n\tstd::string inputLayer = \"conv2d_1_input\";\r\n\tstd::string outputLayer = \"k2tfout_0\";\r\n\r\n\t//Initializing the Graph\r\n\ttensorflow::GraphDef graph_def;\r\n\r\n\t// Specify file location of Output Graph\r\n\tstd::string graphFile = \"/home/ssatyanarayana/OCR-Engine-Local/output_graph.pb\";\r\n\r\n\t// Loading the graph to the given variable\r\n\ttensorflow::Status graphLoadedStatus = ReadBinaryProto(tensorflow::Env::Default(),graphFile,&graph_def);\r\n\tif (!graphLoadedStatus.ok()){\r\n\t\tstd::cout << graphLoadedStatus.ToString()<<std::endl;\r\n\t\treturn 1;\r\n\t}\r\n\r\n\tstd::vector<Tensor> outputs;\r\n\r\n\tfor (size_t i=0; i<filenames.size(); i++)\r\n\t{\r\n\t\tcv::Mat image = cv::imread(filenames[i]);\r\n\r\n\t\tTensor image_tensor (tensorflow::DT_FLOAT, tensorflow::TensorShape{1,tf_height,tf_width,3});\r\n\t\timage.convertTo(image, CV_32FC3);\r\n\t\ttensorflow::StringPiece tmp_data = image_tensor.tensor_data();\r\n\t\tmemcpy(const_cast<char*>(tmp_data.data()), (image.data), tf_height * tf_width * sizeof(float));\r\n\r\n\t\t// Creating a Session with the Graph\r\n\t\tstd::unique_ptr<tensorflow::Session> session(tensorflow::NewSession(tensorflow::SessionOptions()));\r\n\t\t//session->tensorflow::reset(tensorflow::NewSession(tensorflow::SessionOptions()));\r\n\t\ttensorflow::Status session_create_status = session->Create(graph_def);\r\n\r\n\t\tstd::vector<std::pair<string, tensorflow::Tensor>> inputs = {{inputLayer, image_tensor}};\r\n\t\toutputs.clear();\r\n\r\n\t\tStatus runStatus = session->Run(inputs, {outputLayer}, {}, &outputs);\r\n\t\tif (!runStatus.ok()) {\r\n\t\t\tLOG(ERROR) << \"Running model failed: \" << runStatus;\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\tfor (auto &t : outputs)\r\n\t\t{\r\n\t\t\tstd::cout << t.DebugString()<<std::endl;\r\n\t\t\ttensorflow::TTypes<float, 2>::Tensor scores = t.flat_inner_dims<float>();\r\n\t\t\tauto dims = scores.dimensions();\r\n\t\t\tint imgCount = dims[0];\r\n\t\t\tint classesCount = dims[1];\r\n\t\t\tfor(int i = 0; i<imgCount; i++)\r\n\t\t\t{\r\n\t\t\t\tfloat maxVal = scores(i,0);\r\n\t\t\t\tint maxIndex = 0;\r\n\t\t\t\tfor(int j = 1; j<classesCount; j++) {\r\n\t\t\t\t\tfloat val = scores(i,j);\r\n\t\t\t\t\tif(val > maxVal) {\r\n\t\t\t\t\t\tmaxVal = val;\r\n\t\t\t\t\t\tmaxIndex = j;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tstd::cout << \"Img\" << to_string(i) << \" prediction: \" << to_string(maxIndex) << \", score: \" << to_string(maxVal)<<std::endl;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcv::imshow(\"Original Image\",image);\r\n\t\tcv::waitKey();\r\n\t\tsession->Close();\r\n\t\timage.release();\r\n\t}\r\n    return 0;\r\n}\r\n\r\n\r\n```\r\n\r\n## Issues Faced:\r\n-Output tensor fails to clear and provide accurate weights for consecutive loops. \r\n-Same graph provides higher accuracy in Python (with Keras as TF as backend) when compared to using in C++ directly\r\n\r\nYou can access all the required files on [https://github.com/shashank2710/OCR-Engine](url)\r\n "}