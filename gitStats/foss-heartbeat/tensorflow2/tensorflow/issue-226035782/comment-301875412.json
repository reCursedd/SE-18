{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/301875412", "html_url": "https://github.com/tensorflow/tensorflow/issues/9634#issuecomment-301875412", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9634", "id": 301875412, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTg3NTQxMg==", "user": {"login": "sjperkins", "id": 3530212, "node_id": "MDQ6VXNlcjM1MzAyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3530212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjperkins", "html_url": "https://github.com/sjperkins", "followers_url": "https://api.github.com/users/sjperkins/followers", "following_url": "https://api.github.com/users/sjperkins/following{/other_user}", "gists_url": "https://api.github.com/users/sjperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjperkins/subscriptions", "organizations_url": "https://api.github.com/users/sjperkins/orgs", "repos_url": "https://api.github.com/users/sjperkins/repos", "events_url": "https://api.github.com/users/sjperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/sjperkins/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-16T18:37:27Z", "updated_at": "2017-05-16T18:37:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a>  With reference to PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"226994008\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9751\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/9751/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/9751\">#9751</a>, I  may have a hunch as to why this is happening.</p>\n<p>If one untars <code>cudnn-8.0-linux-x64-v5.1.tar.gz</code> it produces the following directory tree</p>\n<div class=\"highlight highlight-source-shell\"><pre>cuda/lib64/libcudnn.so\ncuda/lib64/libcudnn.so.5\ncuda/lib64/libcudnn.so.5.1.5\ncuda/lib64/libcudnn_static.a\ncuda/include/cudnn.h</pre></div>\n<p>This is probably designed to be unzipped into <code>/usr/local/cuda</code>. Now, if we untar it into some non-standard location, say <code>/usr/local/cudnn-5.1-cuda-8.0</code>, users are probably passing the directory to <code>configure</code> as <code>/usr/local/cudnn-5.1-cuda-8.0/cuda</code>.</p>\n<p>Bazel accepts <code>/usr/local/cudnn-5.1-cuda-8.0/cuda</code> as it finds the right headers and libs under this path. But I think the tensorflow <code>#includes</code> actually want <code>/usr/local/cudnn-5.1-cuda-8.0/</code> in this case.</p>\n<p>To summarise, I suspect the problem is that bazel accepts <code>/usr/local/cudnn-5.1-cuda-8.0</code>, but the headers are expecting <code>/usr/local/cudnn-5.1-cuda-8.0/cuda</code>. I haven't found time to test this myself, but perhaps others in this thread could confirm my suspicions.</p>\n<p>(In my case I copied everything in <code>/usr/local/cudnn-5.1-cuda-8.0/cuda</code> to <code>/usr/local/cudnn-5.1-cuda-8.0</code> and passed <code>/usr/local/cudnn-5.1-cuda-8.0</code> as the cuDNN path)</p>", "body_text": "@rmlarsen  With reference to PR #9751, I  may have a hunch as to why this is happening.\nIf one untars cudnn-8.0-linux-x64-v5.1.tar.gz it produces the following directory tree\ncuda/lib64/libcudnn.so\ncuda/lib64/libcudnn.so.5\ncuda/lib64/libcudnn.so.5.1.5\ncuda/lib64/libcudnn_static.a\ncuda/include/cudnn.h\nThis is probably designed to be unzipped into /usr/local/cuda. Now, if we untar it into some non-standard location, say /usr/local/cudnn-5.1-cuda-8.0, users are probably passing the directory to configure as /usr/local/cudnn-5.1-cuda-8.0/cuda.\nBazel accepts /usr/local/cudnn-5.1-cuda-8.0/cuda as it finds the right headers and libs under this path. But I think the tensorflow #includes actually want /usr/local/cudnn-5.1-cuda-8.0/ in this case.\nTo summarise, I suspect the problem is that bazel accepts /usr/local/cudnn-5.1-cuda-8.0, but the headers are expecting /usr/local/cudnn-5.1-cuda-8.0/cuda. I haven't found time to test this myself, but perhaps others in this thread could confirm my suspicions.\n(In my case I copied everything in /usr/local/cudnn-5.1-cuda-8.0/cuda to /usr/local/cudnn-5.1-cuda-8.0 and passed /usr/local/cudnn-5.1-cuda-8.0 as the cuDNN path)", "body": "@rmlarsen  With reference to PR #9751, I  may have a hunch as to why this is happening.\r\n\r\nIf one untars `cudnn-8.0-linux-x64-v5.1.tar.gz` it produces the following directory tree\r\n\r\n```bash\r\ncuda/lib64/libcudnn.so\r\ncuda/lib64/libcudnn.so.5\r\ncuda/lib64/libcudnn.so.5.1.5\r\ncuda/lib64/libcudnn_static.a\r\ncuda/include/cudnn.h\r\n```\r\n\r\nThis is probably designed to be unzipped into `/usr/local/cuda`. Now, if we untar it into some non-standard location, say `/usr/local/cudnn-5.1-cuda-8.0`, users are probably passing the directory to `configure` as `/usr/local/cudnn-5.1-cuda-8.0/cuda`. \r\n\r\nBazel accepts `/usr/local/cudnn-5.1-cuda-8.0/cuda` as it finds the right headers and libs under this path. But I think the tensorflow `#includes` actually want `/usr/local/cudnn-5.1-cuda-8.0/` in this case.\r\n\r\nTo summarise, I suspect the problem is that bazel accepts `/usr/local/cudnn-5.1-cuda-8.0`, but the headers are expecting `/usr/local/cudnn-5.1-cuda-8.0/cuda`. I haven't found time to test this myself, but perhaps others in this thread could confirm my suspicions.\r\n\r\n(In my case I copied everything in `/usr/local/cudnn-5.1-cuda-8.0/cuda` to `/usr/local/cudnn-5.1-cuda-8.0` and passed `/usr/local/cudnn-5.1-cuda-8.0` as the cuDNN path)"}