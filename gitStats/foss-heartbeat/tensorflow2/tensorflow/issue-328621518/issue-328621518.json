{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19700", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19700/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19700/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19700/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19700", "id": 328621518, "node_id": "MDU6SXNzdWUzMjg2MjE1MTg=", "number": 19700, "title": "ppc64le: //tensorflow/python:nn_test test fails", "user": {"login": "wdirons", "id": 22967383, "node_id": "MDQ6VXNlcjIyOTY3Mzgz", "avatar_url": "https://avatars3.githubusercontent.com/u/22967383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wdirons", "html_url": "https://github.com/wdirons", "followers_url": "https://api.github.com/users/wdirons/followers", "following_url": "https://api.github.com/users/wdirons/following{/other_user}", "gists_url": "https://api.github.com/users/wdirons/gists{/gist_id}", "starred_url": "https://api.github.com/users/wdirons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wdirons/subscriptions", "organizations_url": "https://api.github.com/users/wdirons/orgs", "repos_url": "https://api.github.com/users/wdirons/repos", "events_url": "https://api.github.com/users/wdirons/events{/privacy}", "received_events_url": "https://api.github.com/users/wdirons/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, {"login": "wdirons", "id": 22967383, "node_id": "MDQ6VXNlcjIyOTY3Mzgz", "avatar_url": "https://avatars3.githubusercontent.com/u/22967383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wdirons", "html_url": "https://github.com/wdirons", "followers_url": "https://api.github.com/users/wdirons/followers", "following_url": "https://api.github.com/users/wdirons/following{/other_user}", "gists_url": "https://api.github.com/users/wdirons/gists{/gist_id}", "starred_url": "https://api.github.com/users/wdirons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wdirons/subscriptions", "organizations_url": "https://api.github.com/users/wdirons/orgs", "repos_url": "https://api.github.com/users/wdirons/repos", "events_url": "https://api.github.com/users/wdirons/events{/privacy}", "received_events_url": "https://api.github.com/users/wdirons/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-06-01T18:41:31Z", "updated_at": "2018-06-21T15:18:22Z", "closed_at": "2018-06-21T15:18:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Please assign this issue to me and add the tag: stat:community support</p>\n<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes, Have written a Dockerfile.gpu.ppc64le file and modified ci_parameterized_build.sh to allow for build/test runs on ppc64le. (Will submit as a PR)</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: ppc64le Ubuntu 16.04.4</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>: source</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>: master from may 30th</p>\n</li>\n<li>\n<p><strong>Python version</strong>:  2.7.12</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>: 0.11.0</p>\n</li>\n<li>\n<p><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>: 9.2.88, 7</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>: 2 P100 GPUs with 16 GB of memory each</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:<br>\nbazel test --config=cuda -c opt --local_test_jobs=2 --cache_test_results=no --run_under=//tensorflow/tools/ci_build/gpu_build:parallel_gpu_execute //tensorflow/python:nn_test</p>\n</li>\n</ul>\n<h3>Describe the problem</h3>\n<pre><code>======================================================================\nFAIL: testNaNs (__main__.ReluTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/root/.cache/bazel/_bazel_root/eab0d61a99b6696edb3d2aff87b585e8/execroot/org_tensorflow/bazel-out/ppc-opt/bin/tensorflow/python/nn_test.runfiles/org_tensorflow/tensorflow/python/ops/nn_test.py\", line 934, in testNaNs\n    self.assertTrue(np.isnan(z).all())\nAssertionError: False is not true\n\n----------------------------------------------------------------------\nRan 79 tests in 12.600s\n\nFAILED (failures=1)\n0.0208333333333\n0.00566666666667\n0.0075\n0.0208333333333\n0.00566666666667\n0.0075\n0.0208333333333\n0.00566666666667\n0.0075\n0.0208333333333\n0.00566666666667\n0.0075\nL2Loss gradient err = 9.6958e-12\nL2Normalize gradient err = 4.2424e-08\nL2Normalize gradient err = 5.45829e-07\nL2Normalize gradient err = 7.61142e-05\n================================================================================\n</code></pre>\n<h3>Source code / logs</h3>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/2063777/nn_test.log\">nn_test.log</a></p>", "body_text": "Please assign this issue to me and add the tag: stat:community support\nSystem information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes, Have written a Dockerfile.gpu.ppc64le file and modified ci_parameterized_build.sh to allow for build/test runs on ppc64le. (Will submit as a PR)\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): ppc64le Ubuntu 16.04.4\n\n\nTensorFlow installed from (source or binary): source\n\n\nTensorFlow version (use command below): master from may 30th\n\n\nPython version:  2.7.12\n\n\nBazel version (if compiling from source): 0.11.0\n\n\nGCC/Compiler version (if compiling from source): 5.4.0\n\n\nCUDA/cuDNN version: 9.2.88, 7\n\n\nGPU model and memory: 2 P100 GPUs with 16 GB of memory each\n\n\nExact command to reproduce:\nbazel test --config=cuda -c opt --local_test_jobs=2 --cache_test_results=no --run_under=//tensorflow/tools/ci_build/gpu_build:parallel_gpu_execute //tensorflow/python:nn_test\n\n\nDescribe the problem\n======================================================================\nFAIL: testNaNs (__main__.ReluTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/root/.cache/bazel/_bazel_root/eab0d61a99b6696edb3d2aff87b585e8/execroot/org_tensorflow/bazel-out/ppc-opt/bin/tensorflow/python/nn_test.runfiles/org_tensorflow/tensorflow/python/ops/nn_test.py\", line 934, in testNaNs\n    self.assertTrue(np.isnan(z).all())\nAssertionError: False is not true\n\n----------------------------------------------------------------------\nRan 79 tests in 12.600s\n\nFAILED (failures=1)\n0.0208333333333\n0.00566666666667\n0.0075\n0.0208333333333\n0.00566666666667\n0.0075\n0.0208333333333\n0.00566666666667\n0.0075\n0.0208333333333\n0.00566666666667\n0.0075\nL2Loss gradient err = 9.6958e-12\nL2Normalize gradient err = 4.2424e-08\nL2Normalize gradient err = 5.45829e-07\nL2Normalize gradient err = 7.61142e-05\n================================================================================\n\nSource code / logs\nnn_test.log", "body": "Please assign this issue to me and add the tag: stat:community support\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, Have written a Dockerfile.gpu.ppc64le file and modified ci_parameterized_build.sh to allow for build/test runs on ppc64le. (Will submit as a PR)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: ppc64le Ubuntu 16.04.4 \r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: master from may 30th\r\n- **Python version**:  2.7.12\r\n- **Bazel version (if compiling from source)**: 0.11.0\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: 9.2.88, 7\r\n- **GPU model and memory**: 2 P100 GPUs with 16 GB of memory each\r\n\r\n- **Exact command to reproduce**:\r\nbazel test --config=cuda -c opt --local_test_jobs=2 --cache_test_results=no --run_under=//tensorflow/tools/ci_build/gpu_build:parallel_gpu_execute //tensorflow/python:nn_test\r\n\r\n### Describe the problem\r\n```\r\n======================================================================\r\nFAIL: testNaNs (__main__.ReluTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/.cache/bazel/_bazel_root/eab0d61a99b6696edb3d2aff87b585e8/execroot/org_tensorflow/bazel-out/ppc-opt/bin/tensorflow/python/nn_test.runfiles/org_tensorflow/tensorflow/python/ops/nn_test.py\", line 934, in testNaNs\r\n    self.assertTrue(np.isnan(z).all())\r\nAssertionError: False is not true\r\n\r\n----------------------------------------------------------------------\r\nRan 79 tests in 12.600s\r\n\r\nFAILED (failures=1)\r\n0.0208333333333\r\n0.00566666666667\r\n0.0075\r\n0.0208333333333\r\n0.00566666666667\r\n0.0075\r\n0.0208333333333\r\n0.00566666666667\r\n0.0075\r\n0.0208333333333\r\n0.00566666666667\r\n0.0075\r\nL2Loss gradient err = 9.6958e-12\r\nL2Normalize gradient err = 4.2424e-08\r\nL2Normalize gradient err = 5.45829e-07\r\nL2Normalize gradient err = 7.61142e-05\r\n================================================================================\r\n```\r\n\r\n### Source code / logs\r\n[nn_test.log](https://github.com/tensorflow/tensorflow/files/2063777/nn_test.log)\r\n"}