{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9984", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9984/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9984/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9984/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9984", "id": 229502288, "node_id": "MDU6SXNzdWUyMjk1MDIyODg=", "number": 9984, "title": "Missing .pb.h Files While Building from Source on Windows using CMake ", "user": {"login": "barnandas", "id": 1500808, "node_id": "MDQ6VXNlcjE1MDA4MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1500808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barnandas", "html_url": "https://github.com/barnandas", "followers_url": "https://api.github.com/users/barnandas/followers", "following_url": "https://api.github.com/users/barnandas/following{/other_user}", "gists_url": "https://api.github.com/users/barnandas/gists{/gist_id}", "starred_url": "https://api.github.com/users/barnandas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barnandas/subscriptions", "organizations_url": "https://api.github.com/users/barnandas/orgs", "repos_url": "https://api.github.com/users/barnandas/repos", "events_url": "https://api.github.com/users/barnandas/events{/privacy}", "received_events_url": "https://api.github.com/users/barnandas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-17T22:12:44Z", "updated_at": "2017-05-19T21:59:49Z", "closed_at": "2017-05-19T21:59:49Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 10 Enterprise</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nTrying to install from source</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.1</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nUsing cmake to compile from source</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nNot using CUDA. Trying to build CPU only version from source</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nAfter following the instructions to build TF from source on Windows using cmake as given <a href=\"https://github.com/tensorflow/tensorflow/tree/r0.12/tensorflow/contrib/cmake\">here</a>, at step 4, I am trying to build tf_tutorials_example_trainer.vcxproj using MS Visual Studio 2015 instead of MSBuild.</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>While trying to build tf_tutorials_example_trainer.vcxproj, I get a whole bunch of errors such as \"Cannot open include file &lt;some/path/*.pb.h&gt;\". After looking at the source code files, it looks like .pb.h files do not exist. However, the corresponding .proto files do exist. For example, I can see \"atr_value.proto\" under &lt;TF source files/tensorflow/core/framework&gt;, but not \"atr_value.pb.h\". I think for some reason protobuf is not generating the .pb.h files from .proto</p>\n<p>Note: I have also installed the TF executable following instructions given <a href=\"https://www.tensorflow.org/install/install_windows\" rel=\"nofollow\">here</a>. It installed correctly. Hence, I have all dependencies installed on my system.</p>\n<h3>Source code / logs</h3>\n<p>cmake log:<br>\n-- Building for: Visual Studio 14 2015<br>\n-- The C compiler identification is MSVC 19.0.24215.1<br>\n-- The CXX compiler identification is MSVC 19.0.24215.1<br>\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe<br>\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works<br>\n-- Detecting C compiler ABI info<br>\n-- Detecting C compiler ABI info - done<br>\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe<br>\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works<br>\n-- Detecting CXX compiler ABI info<br>\n-- Detecting CXX compiler ABI info - done<br>\n-- Detecting CXX compile features<br>\n-- Detecting CXX compile features - done<br>\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED<br>\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED - Failed<br>\n-- Found PythonInterp: C:/local/Anaconda3-4.1.1-Windows-x86_64/envs/tensorflow/python.exe (found version \"3.5.3\")<br>\n-- Found PythonLibs: C:/local/Anaconda3-4.1.1-Windows-x86_64/envs/tensorflow/libs/python35.lib (found version \"3.5.3\")<br>\n-- Found SWIG: C:/local/swigwin-3.0.10/swig.exe (found version \"3.0.10\")<br>\n-- Configuring done<br>\n-- Generating done<br>\n-- Build files have been written to: /tensorflow/contrib/cmake/build</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 10 Enterprise\nTensorFlow installed from (source or binary):\nTrying to install from source\nTensorFlow version (use command below):\n1.1\nBazel version (if compiling from source):\nUsing cmake to compile from source\nCUDA/cuDNN version:\nNot using CUDA. Trying to build CPU only version from source\nGPU model and memory:\nN/A\nExact command to reproduce:\nAfter following the instructions to build TF from source on Windows using cmake as given here, at step 4, I am trying to build tf_tutorials_example_trainer.vcxproj using MS Visual Studio 2015 instead of MSBuild.\n\nDescribe the problem\nWhile trying to build tf_tutorials_example_trainer.vcxproj, I get a whole bunch of errors such as \"Cannot open include file <some/path/*.pb.h>\". After looking at the source code files, it looks like .pb.h files do not exist. However, the corresponding .proto files do exist. For example, I can see \"atr_value.proto\" under <TF source files/tensorflow/core/framework>, but not \"atr_value.pb.h\". I think for some reason protobuf is not generating the .pb.h files from .proto\nNote: I have also installed the TF executable following instructions given here. It installed correctly. Hence, I have all dependencies installed on my system.\nSource code / logs\ncmake log:\n-- Building for: Visual Studio 14 2015\n-- The C compiler identification is MSVC 19.0.24215.1\n-- The CXX compiler identification is MSVC 19.0.24215.1\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED - Failed\n-- Found PythonInterp: C:/local/Anaconda3-4.1.1-Windows-x86_64/envs/tensorflow/python.exe (found version \"3.5.3\")\n-- Found PythonLibs: C:/local/Anaconda3-4.1.1-Windows-x86_64/envs/tensorflow/libs/python35.lib (found version \"3.5.3\")\n-- Found SWIG: C:/local/swigwin-3.0.10/swig.exe (found version \"3.0.10\")\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /tensorflow/contrib/cmake/build", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 10 Enterprise\r\n- **TensorFlow installed from (source or binary)**:\r\nTrying to install from source\r\n- **TensorFlow version (use command below)**:\r\n1.1\r\n- **Bazel version (if compiling from source)**:\r\nUsing cmake to compile from source\r\n- **CUDA/cuDNN version**:\r\nNot using CUDA. Trying to build CPU only version from source\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\nAfter following the instructions to build TF from source on Windows using cmake as given [here](https://github.com/tensorflow/tensorflow/tree/r0.12/tensorflow/contrib/cmake), at step 4, I am trying to build tf_tutorials_example_trainer.vcxproj using MS Visual Studio 2015 instead of MSBuild.\r\n\r\n### Describe the problem\r\nWhile trying to build tf_tutorials_example_trainer.vcxproj, I get a whole bunch of errors such as \"Cannot open include file <some/path/*.pb.h>\". After looking at the source code files, it looks like .pb.h files do not exist. However, the corresponding .proto files do exist. For example, I can see \"atr_value.proto\" under <TF source files/tensorflow/core/framework>, but not \"atr_value.pb.h\". I think for some reason protobuf is not generating the .pb.h files from .proto\r\n\r\nNote: I have also installed the TF executable following instructions given [here](https://www.tensorflow.org/install/install_windows). It installed correctly. Hence, I have all dependencies installed on my system.\r\n\r\n### Source code / logs\r\ncmake log:\r\n-- Building for: Visual Studio 14 2015\r\n-- The C compiler identification is MSVC 19.0.24215.1\r\n-- The CXX compiler identification is MSVC 19.0.24215.1\r\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\r\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\r\n       -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED\r\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED - Failed\r\n-- Found PythonInterp: C:/local/Anaconda3-4.1.1-Windows-x86_64/envs/tensorflow/python.exe (found version \"3.5.3\")\r\n-- Found PythonLibs: C:/local/Anaconda3-4.1.1-Windows-x86_64/envs/tensorflow/libs/python35.lib (found version \"3.5.3\")\r\n-- Found SWIG: C:/local/swigwin-3.0.10/swig.exe (found version \"3.0.10\")\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: <TF source dir>/tensorflow/contrib/cmake/build\r\n"}