{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8776", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8776/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8776/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8776/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8776", "id": 217576562, "node_id": "MDU6SXNzdWUyMTc1NzY1NjI=", "number": 8776, "title": "tf.case giving unexpected result in TF 1.0.1", "user": {"login": "jwayne", "id": 1303177, "node_id": "MDQ6VXNlcjEzMDMxNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1303177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwayne", "html_url": "https://github.com/jwayne", "followers_url": "https://api.github.com/users/jwayne/followers", "following_url": "https://api.github.com/users/jwayne/following{/other_user}", "gists_url": "https://api.github.com/users/jwayne/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwayne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwayne/subscriptions", "organizations_url": "https://api.github.com/users/jwayne/orgs", "repos_url": "https://api.github.com/users/jwayne/repos", "events_url": "https://api.github.com/users/jwayne/events{/privacy}", "received_events_url": "https://api.github.com/users/jwayne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yuanbyu", "id": 2342391, "node_id": "MDQ6VXNlcjIzNDIzOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2342391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanbyu", "html_url": "https://github.com/yuanbyu", "followers_url": "https://api.github.com/users/yuanbyu/followers", "following_url": "https://api.github.com/users/yuanbyu/following{/other_user}", "gists_url": "https://api.github.com/users/yuanbyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanbyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanbyu/subscriptions", "organizations_url": "https://api.github.com/users/yuanbyu/orgs", "repos_url": "https://api.github.com/users/yuanbyu/repos", "events_url": "https://api.github.com/users/yuanbyu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanbyu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuanbyu", "id": 2342391, "node_id": "MDQ6VXNlcjIzNDIzOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2342391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanbyu", "html_url": "https://github.com/yuanbyu", "followers_url": "https://api.github.com/users/yuanbyu/followers", "following_url": "https://api.github.com/users/yuanbyu/following{/other_user}", "gists_url": "https://api.github.com/users/yuanbyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanbyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanbyu/subscriptions", "organizations_url": "https://api.github.com/users/yuanbyu/orgs", "repos_url": "https://api.github.com/users/yuanbyu/repos", "events_url": "https://api.github.com/users/yuanbyu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanbyu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2017-03-28T14:21:11Z", "updated_at": "2017-06-27T15:33:33Z", "closed_at": "2017-06-16T17:47:11Z", "author_association": "NONE", "body_html": "<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>I posted this SO question on 2017-03-10 which was never answered: <a href=\"http://stackoverflow.com/questions/42728235/tensorflow-why-is-tf-case-giving-me-the-wrong-result\" rel=\"nofollow\">http://stackoverflow.com/questions/42728235/tensorflow-why-is-tf-case-giving-me-the-wrong-result</a></p>\n<h3>Environment info</h3>\n<p>Operating System: <code>Linux 312e492cd9df 4.4.0-66-generic #87-Ubuntu SMP Fri Mar 3 15:29:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</code></p>\n<p>Installed version of CUDA and cuDNN: none</p>\n<p>Installed from: I'm running this on official tensorflow-devel Docker image for 1.0.1 (<code>gcr.io/tensorflow/tensorflow:1.0.1-devel</code>)</p>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<pre><code>import tensorflow as tf\n\nglobal_step = tf.Variable(0, dtype=tf.int64)\ntrain_op = tf.assign(global_step, global_step + 1)\n\nlearning_rate = tf.Variable(0.1, dtype=tf.float32, name='learning_rate')\n\n# Update the learning_rate tensor conditionally\n# When global_step == 2, update to 0.01\n# When global_step == 4, update to 0.001\ncase_tensors = [\n    (tf.equal(global_step, 2), tf.constant(0.01, dtype=tf.float32)),\n    (tf.equal(global_step, 4), tf.constant(0.001, dtype=tf.float32)),\n]\ncases = [(pred, lambda: fn_tensor) for pred, fn_tensor in case_tensors]\nupdate = tf.case(cases, default=lambda: learning_rate)\nupdated_learning_rate = tf.assign(learning_rate, update)\n\nprint tf.__version__\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    for _ in xrange(6):\n        print sess.run([global_step, case_tensors, learning_rate, update, updated_learning_rate])\n        sess.run(train_op)\n</code></pre>\n<h3>What other attempted solutions have you tried?</h3>\n<p>None</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<p>The above code prints the following output:</p>\n<pre><code>W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n1.0.1\n[0, [(False, 0.0099999998), (False, 0.001)], 0.1, 0.1, 0.1]\n[1, [(False, 0.0099999998), (False, 0.001)], 0.1, 0.1, 0.1]\n[2, [(True, 0.0099999998), (False, 0.001)], 0.001, 0.001, 0.001]\n[3, [(False, 0.0099999998), (False, 0.001)], 0.001, 0.001, 0.001]\n[4, [(False, 0.0099999998), (True, 0.001)], 0.001, 0.001, 0.001]\n[5, [(False, 0.0099999998), (False, 0.001)], 0.001, 0.001, 0.001]\n</code></pre>\n<p>I expect that the learning rate should get set to <code>0.0099999998</code> when the global step reaches 2.  However, even though the predicate for global_step==2 evaluates to True, the learning rate does not get set to <code>0.0099999998</code>, but rather gets set to <code>0.001</code> instead.</p>", "body_text": "What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nI posted this SO question on 2017-03-10 which was never answered: http://stackoverflow.com/questions/42728235/tensorflow-why-is-tf-case-giving-me-the-wrong-result\nEnvironment info\nOperating System: Linux 312e492cd9df 4.4.0-66-generic #87-Ubuntu SMP Fri Mar 3 15:29:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\nInstalled version of CUDA and cuDNN: none\nInstalled from: I'm running this on official tensorflow-devel Docker image for 1.0.1 (gcr.io/tensorflow/tensorflow:1.0.1-devel)\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nimport tensorflow as tf\n\nglobal_step = tf.Variable(0, dtype=tf.int64)\ntrain_op = tf.assign(global_step, global_step + 1)\n\nlearning_rate = tf.Variable(0.1, dtype=tf.float32, name='learning_rate')\n\n# Update the learning_rate tensor conditionally\n# When global_step == 2, update to 0.01\n# When global_step == 4, update to 0.001\ncase_tensors = [\n    (tf.equal(global_step, 2), tf.constant(0.01, dtype=tf.float32)),\n    (tf.equal(global_step, 4), tf.constant(0.001, dtype=tf.float32)),\n]\ncases = [(pred, lambda: fn_tensor) for pred, fn_tensor in case_tensors]\nupdate = tf.case(cases, default=lambda: learning_rate)\nupdated_learning_rate = tf.assign(learning_rate, update)\n\nprint tf.__version__\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    for _ in xrange(6):\n        print sess.run([global_step, case_tensors, learning_rate, update, updated_learning_rate])\n        sess.run(train_op)\n\nWhat other attempted solutions have you tried?\nNone\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\nThe above code prints the following output:\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n1.0.1\n[0, [(False, 0.0099999998), (False, 0.001)], 0.1, 0.1, 0.1]\n[1, [(False, 0.0099999998), (False, 0.001)], 0.1, 0.1, 0.1]\n[2, [(True, 0.0099999998), (False, 0.001)], 0.001, 0.001, 0.001]\n[3, [(False, 0.0099999998), (False, 0.001)], 0.001, 0.001, 0.001]\n[4, [(False, 0.0099999998), (True, 0.001)], 0.001, 0.001, 0.001]\n[5, [(False, 0.0099999998), (False, 0.001)], 0.001, 0.001, 0.001]\n\nI expect that the learning rate should get set to 0.0099999998 when the global step reaches 2.  However, even though the predicate for global_step==2 evaluates to True, the learning rate does not get set to 0.0099999998, but rather gets set to 0.001 instead.", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\nI posted this SO question on 2017-03-10 which was never answered: http://stackoverflow.com/questions/42728235/tensorflow-why-is-tf-case-giving-me-the-wrong-result\r\n\r\n### Environment info\r\nOperating System: `Linux 312e492cd9df 4.4.0-66-generic #87-Ubuntu SMP Fri Mar 3 15:29:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\nInstalled version of CUDA and cuDNN: none\r\n\r\nInstalled from: I'm running this on official tensorflow-devel Docker image for 1.0.1 (`gcr.io/tensorflow/tensorflow:1.0.1-devel`)\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nglobal_step = tf.Variable(0, dtype=tf.int64)\r\ntrain_op = tf.assign(global_step, global_step + 1)\r\n\r\nlearning_rate = tf.Variable(0.1, dtype=tf.float32, name='learning_rate')\r\n\r\n# Update the learning_rate tensor conditionally\r\n# When global_step == 2, update to 0.01\r\n# When global_step == 4, update to 0.001\r\ncase_tensors = [\r\n    (tf.equal(global_step, 2), tf.constant(0.01, dtype=tf.float32)),\r\n    (tf.equal(global_step, 4), tf.constant(0.001, dtype=tf.float32)),\r\n]\r\ncases = [(pred, lambda: fn_tensor) for pred, fn_tensor in case_tensors]\r\nupdate = tf.case(cases, default=lambda: learning_rate)\r\nupdated_learning_rate = tf.assign(learning_rate, update)\r\n\r\nprint tf.__version__\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    for _ in xrange(6):\r\n        print sess.run([global_step, case_tensors, learning_rate, update, updated_learning_rate])\r\n        sess.run(train_op)\r\n```\r\n\r\n### What other attempted solutions have you tried?\r\n\r\nNone\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n\r\nThe above code prints the following output:\r\n```\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n1.0.1\r\n[0, [(False, 0.0099999998), (False, 0.001)], 0.1, 0.1, 0.1]\r\n[1, [(False, 0.0099999998), (False, 0.001)], 0.1, 0.1, 0.1]\r\n[2, [(True, 0.0099999998), (False, 0.001)], 0.001, 0.001, 0.001]\r\n[3, [(False, 0.0099999998), (False, 0.001)], 0.001, 0.001, 0.001]\r\n[4, [(False, 0.0099999998), (True, 0.001)], 0.001, 0.001, 0.001]\r\n[5, [(False, 0.0099999998), (False, 0.001)], 0.001, 0.001, 0.001]\r\n```\r\n\r\nI expect that the learning rate should get set to `0.0099999998` when the global step reaches 2.  However, even though the predicate for global_step==2 evaluates to True, the learning rate does not get set to `0.0099999998`, but rather gets set to `0.001` instead."}