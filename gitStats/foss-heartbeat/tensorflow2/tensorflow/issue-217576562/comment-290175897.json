{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/290175897", "html_url": "https://github.com/tensorflow/tensorflow/issues/8776#issuecomment-290175897", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8776", "id": 290175897, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDE3NTg5Nw==", "user": {"login": "jwayne", "id": 1303177, "node_id": "MDQ6VXNlcjEzMDMxNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1303177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwayne", "html_url": "https://github.com/jwayne", "followers_url": "https://api.github.com/users/jwayne/followers", "following_url": "https://api.github.com/users/jwayne/following{/other_user}", "gists_url": "https://api.github.com/users/jwayne/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwayne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwayne/subscriptions", "organizations_url": "https://api.github.com/users/jwayne/orgs", "repos_url": "https://api.github.com/users/jwayne/repos", "events_url": "https://api.github.com/users/jwayne/events{/privacy}", "received_events_url": "https://api.github.com/users/jwayne/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-29T18:11:22Z", "updated_at": "2017-06-26T11:14:15Z", "author_association": "NONE", "body_html": "<p>Another example where <code>tf.case</code> gives unexpected behavior, this time looking at the behavior of <code>exclusive=False</code>:</p>\n<p>Code:</p>\n<div class=\"highlight highlight-source-python\"><pre>    orig_label <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">0.046026</span>)\n    label_bounds <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">0.01</span>, <span class=\"pl-c1\">0.02</span>, <span class=\"pl-c1\">0.03</span>, <span class=\"pl-c1\">0.04</span>, <span class=\"pl-c1\">0.05</span>, <span class=\"pl-c1\">0.06</span>, <span class=\"pl-c1\">0.07</span>, <span class=\"pl-c1\">0.08</span>]\n    preds <span class=\"pl-k\">=</span> [tf.less(orig_label, bound) <span class=\"pl-k\">for</span> bound <span class=\"pl-k\">in</span> label_bounds]\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Pair each predicate with a function returning the index of the predicate.</span>\n    pred_fn_pairs <span class=\"pl-k\">=</span> [(pred, <span class=\"pl-k\">lambda</span>: tf.constant(i))\n                     <span class=\"pl-k\">for</span> i, pred <span class=\"pl-k\">in</span> <span class=\"pl-c1\">enumerate</span>(preds)]\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> If no predicate evaluates to true, default to returning the index after</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> the index of the last predicate.</span>\n    default <span class=\"pl-k\">=</span> <span class=\"pl-k\">lambda</span>: tf.constant(<span class=\"pl-c1\">len</span>(pred_fn_pairs))\n    case <span class=\"pl-k\">=</span> tf.case(pred_fn_pairs, <span class=\"pl-v\">default</span><span class=\"pl-k\">=</span>default, <span class=\"pl-v\">exclusive</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n\n    <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n        sess.run(tf.global_variables_initializer())\n        <span class=\"pl-c1\">print</span> sess.run([preds, case])\n    <span class=\"pl-c1\">print</span> <span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">enumerate</span>(label_bounds))\n    <span class=\"pl-c1\">print</span> <span class=\"pl-c1\">len</span>(preds)</pre></div>\n<p>Output:</p>\n<pre><code>[[False, False, False, False, True, True, True, True], 7]\n[(0, 0.01), (1, 0.02), (2, 0.03), (3, 0.04), (4, 0.05), (5, 0.06), (6, 0.07), (7, 0.08)]\n8\n</code></pre>\n<p>(I expect that the first line of the output should read <code>[[False, False, False, False, True, True, True, True], 4]</code>, based on <a href=\"https://www.tensorflow.org/api_docs/python/tf/case\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/case</a>):</p>\n<blockquote>\n<p>If exclusive==False, execution stops are the first predicate which evaluates to True, and the tensors generated by the corresponding function are returned immediately. If none of the predicates evaluate to True, this operation returns the tensors generated by default.</p>\n</blockquote>", "body_text": "Another example where tf.case gives unexpected behavior, this time looking at the behavior of exclusive=False:\nCode:\n    orig_label = tf.constant(0.046026)\n    label_bounds = [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08]\n    preds = [tf.less(orig_label, bound) for bound in label_bounds]\n    # Pair each predicate with a function returning the index of the predicate.\n    pred_fn_pairs = [(pred, lambda: tf.constant(i))\n                     for i, pred in enumerate(preds)]\n    # If no predicate evaluates to true, default to returning the index after\n    # the index of the last predicate.\n    default = lambda: tf.constant(len(pred_fn_pairs))\n    case = tf.case(pred_fn_pairs, default=default, exclusive=False)\n\n    with tf.Session() as sess:\n        sess.run(tf.global_variables_initializer())\n        print sess.run([preds, case])\n    print list(enumerate(label_bounds))\n    print len(preds)\nOutput:\n[[False, False, False, False, True, True, True, True], 7]\n[(0, 0.01), (1, 0.02), (2, 0.03), (3, 0.04), (4, 0.05), (5, 0.06), (6, 0.07), (7, 0.08)]\n8\n\n(I expect that the first line of the output should read [[False, False, False, False, True, True, True, True], 4], based on https://www.tensorflow.org/api_docs/python/tf/case):\n\nIf exclusive==False, execution stops are the first predicate which evaluates to True, and the tensors generated by the corresponding function are returned immediately. If none of the predicates evaluate to True, this operation returns the tensors generated by default.", "body": "Another example where `tf.case` gives unexpected behavior, this time looking at the behavior of `exclusive=False`:\r\n\r\nCode:\r\n```python\r\n    orig_label = tf.constant(0.046026)\r\n    label_bounds = [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08]\r\n    preds = [tf.less(orig_label, bound) for bound in label_bounds]\r\n    # Pair each predicate with a function returning the index of the predicate.\r\n    pred_fn_pairs = [(pred, lambda: tf.constant(i))\r\n                     for i, pred in enumerate(preds)]\r\n    # If no predicate evaluates to true, default to returning the index after\r\n    # the index of the last predicate.\r\n    default = lambda: tf.constant(len(pred_fn_pairs))\r\n    case = tf.case(pred_fn_pairs, default=default, exclusive=False)\r\n\r\n    with tf.Session() as sess:\r\n        sess.run(tf.global_variables_initializer())\r\n        print sess.run([preds, case])\r\n    print list(enumerate(label_bounds))\r\n    print len(preds)\r\n```\r\n\r\nOutput:\r\n```\r\n[[False, False, False, False, True, True, True, True], 7]\r\n[(0, 0.01), (1, 0.02), (2, 0.03), (3, 0.04), (4, 0.05), (5, 0.06), (6, 0.07), (7, 0.08)]\r\n8\r\n```\r\n\r\n(I expect that the first line of the output should read `[[False, False, False, False, True, True, True, True], 4]`, based on https://www.tensorflow.org/api_docs/python/tf/case):\r\n\r\n> If exclusive==False, execution stops are the first predicate which evaluates to True, and the tensors generated by the corresponding function are returned immediately. If none of the predicates evaluate to True, this operation returns the tensors generated by default."}