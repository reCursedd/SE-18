{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/272790182", "html_url": "https://github.com/tensorflow/tensorflow/issues/6870#issuecomment-272790182", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6870", "id": 272790182, "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjc5MDE4Mg==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-16T07:22:53Z", "updated_at": "2017-01-16T07:22:53Z", "author_association": "MEMBER", "body_html": "<p>This is something that I agree would be a good thing to do. It would be the right thing to do. However it would be the most difficult task imaginable.</p>\n<p>Writing scripts in bourne shell that are correct is easier said than done and oftentimes requires making a lot of tradeoffs. It's nice having features like arrays, set -o pipefail, $PIPESTATUS, $(...), etc. It's also nice being able to do things like [[ ... ]] that don't spawn subprocesses. I've heard some of these things have been added to the bourne shell by the posix spec. But I don't have much knowledge of which.</p>\n<p>Google style actually forbids the use of any shell except the bourne again shell. <a href=\"https://google.github.io/styleguide/shell.xml\" rel=\"nofollow\">https://google.github.io/styleguide/shell.xml</a> So the rabbit hole runs pretty deep when it comes to bash. In addition to the configure script, bashisms can be found all throughout our build system in things like genrule. All of our institutional wisdom about writing shell scripts is built on bash. That's something that would be hard to change.</p>\n<p>Eventually, our hope is that we can get rid of the configure script. Then we can maybe vendor bash inside of Bazel so we don't have to depend on the system to provide it. See: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"177947211\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/bazelbuild/bazel/issues/1797\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/1797/hovercard\" href=\"https://github.com/bazelbuild/bazel/issues/1797\">bazelbuild/bazel#1797</a>. Thoughts on that?</p>\n<p>Right now our support matrix for operating systems is: Ubuntu Linux 14 LTE to 16. Mac OS X El Capitan. CentOS 7 and above.</p>", "body_text": "This is something that I agree would be a good thing to do. It would be the right thing to do. However it would be the most difficult task imaginable.\nWriting scripts in bourne shell that are correct is easier said than done and oftentimes requires making a lot of tradeoffs. It's nice having features like arrays, set -o pipefail, $PIPESTATUS, $(...), etc. It's also nice being able to do things like [[ ... ]] that don't spawn subprocesses. I've heard some of these things have been added to the bourne shell by the posix spec. But I don't have much knowledge of which.\nGoogle style actually forbids the use of any shell except the bourne again shell. https://google.github.io/styleguide/shell.xml So the rabbit hole runs pretty deep when it comes to bash. In addition to the configure script, bashisms can be found all throughout our build system in things like genrule. All of our institutional wisdom about writing shell scripts is built on bash. That's something that would be hard to change.\nEventually, our hope is that we can get rid of the configure script. Then we can maybe vendor bash inside of Bazel so we don't have to depend on the system to provide it. See: bazelbuild/bazel#1797. Thoughts on that?\nRight now our support matrix for operating systems is: Ubuntu Linux 14 LTE to 16. Mac OS X El Capitan. CentOS 7 and above.", "body": "This is something that I agree would be a good thing to do. It would be the right thing to do. However it would be the most difficult task imaginable.\r\n\r\nWriting scripts in bourne shell that are correct is easier said than done and oftentimes requires making a lot of tradeoffs. It's nice having features like arrays, set -o pipefail, $PIPESTATUS, $(...), etc. It's also nice being able to do things like [[ ... ]] that don't spawn subprocesses. I've heard some of these things have been added to the bourne shell by the posix spec. But I don't have much knowledge of which.\r\n\r\nGoogle style actually forbids the use of any shell except the bourne again shell. https://google.github.io/styleguide/shell.xml So the rabbit hole runs pretty deep when it comes to bash. In addition to the configure script, bashisms can be found all throughout our build system in things like genrule. All of our institutional wisdom about writing shell scripts is built on bash. That's something that would be hard to change.\r\n\r\nEventually, our hope is that we can get rid of the configure script. Then we can maybe vendor bash inside of Bazel so we don't have to depend on the system to provide it. See: https://github.com/bazelbuild/bazel/issues/1797. Thoughts on that?\r\n\r\nRight now our support matrix for operating systems is: Ubuntu Linux 14 LTE to 16. Mac OS X El Capitan. CentOS 7 and above."}