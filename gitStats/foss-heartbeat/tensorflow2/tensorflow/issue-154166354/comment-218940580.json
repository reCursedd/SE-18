{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/218940580", "html_url": "https://github.com/tensorflow/tensorflow/issues/2318#issuecomment-218940580", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2318", "id": 218940580, "node_id": "MDEyOklzc3VlQ29tbWVudDIxODk0MDU4MA==", "user": {"login": "shoyer", "id": 1217238, "node_id": "MDQ6VXNlcjEyMTcyMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoyer", "html_url": "https://github.com/shoyer", "followers_url": "https://api.github.com/users/shoyer/followers", "following_url": "https://api.github.com/users/shoyer/following{/other_user}", "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions", "organizations_url": "https://api.github.com/users/shoyer/orgs", "repos_url": "https://api.github.com/users/shoyer/repos", "events_url": "https://api.github.com/users/shoyer/events{/privacy}", "received_events_url": "https://api.github.com/users/shoyer/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-13T02:58:00Z", "updated_at": "2016-05-13T02:58:00Z", "author_association": "MEMBER", "body_html": "<blockquote>\n<p>My feeling is that this kind of everything-should-map-to-everything coercion is harmful to a programming environment, mostly because it undermines the type system. Type errors turn into logical errors, which are far harder to debug.</p>\n</blockquote>\n<p>I am in total agreement with you, but I think \"numpy array likes\" are a well defined duck type -- they're anything that implements the <code>__array__</code> method.</p>\n<p>Importantly, I do not propose to test this by seeing if coercing something to an array with <code>np.array</code> works. NumPy is far too willing to convert anything into 0d object arrays, though I think most NumPy devs agree that this is a <a href=\"https://github.com/numpy/numpy/issues/6070\" data-hovercard-type=\"issue\" data-hovercard-url=\"/numpy/numpy/issues/6070/hovercard\">bad idea</a>.</p>\n<blockquote>\n<p>This is the reason I avoid pandas (sorry, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1217238\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shoyer\">@shoyer</a>!), and I'd rather it not be in TensorFlow either.</p>\n</blockquote>\n<p>Funny you should mention this. Recently, most of my contributions to pandas seem to be fighting a <a href=\"https://github.com/pydata/pandas/pull/12482#issuecomment-218641824\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pandas-dev/pandas/pull/12482/hovercard\">losing battle for type safety</a>.</p>\n<p>On a related note, whatever choice we make here for coercing arrays in <code>tf.constant</code> should also hold for values put into <code>feed_dict</code> for <code>Session.run</code>.</p>", "body_text": "My feeling is that this kind of everything-should-map-to-everything coercion is harmful to a programming environment, mostly because it undermines the type system. Type errors turn into logical errors, which are far harder to debug.\n\nI am in total agreement with you, but I think \"numpy array likes\" are a well defined duck type -- they're anything that implements the __array__ method.\nImportantly, I do not propose to test this by seeing if coercing something to an array with np.array works. NumPy is far too willing to convert anything into 0d object arrays, though I think most NumPy devs agree that this is a bad idea.\n\nThis is the reason I avoid pandas (sorry, @shoyer!), and I'd rather it not be in TensorFlow either.\n\nFunny you should mention this. Recently, most of my contributions to pandas seem to be fighting a losing battle for type safety.\nOn a related note, whatever choice we make here for coercing arrays in tf.constant should also hold for values put into feed_dict for Session.run.", "body": "> My feeling is that this kind of everything-should-map-to-everything coercion is harmful to a programming environment, mostly because it undermines the type system. Type errors turn into logical errors, which are far harder to debug.\n\nI am in total agreement with you, but I think \"numpy array likes\" are a well defined duck type -- they're anything that implements the `__array__` method.\n\nImportantly, I do not propose to test this by seeing if coercing something to an array with `np.array` works. NumPy is far too willing to convert anything into 0d object arrays, though I think most NumPy devs agree that this is a [bad idea](https://github.com/numpy/numpy/issues/6070).\n\n> This is the reason I avoid pandas (sorry, @shoyer!), and I'd rather it not be in TensorFlow either.\n\nFunny you should mention this. Recently, most of my contributions to pandas seem to be fighting a [losing battle for type safety](https://github.com/pydata/pandas/pull/12482#issuecomment-218641824).\n\nOn a related note, whatever choice we make here for coercing arrays in `tf.constant` should also hold for values put into `feed_dict` for `Session.run`.\n"}