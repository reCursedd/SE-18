{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12915", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12915/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12915/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12915/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/12915", "id": 256320508, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQwMDg3MzAy", "number": 12915, "title": "Load op library fix", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-09-08T17:25:58Z", "updated_at": "2017-09-08T19:52:09Z", "closed_at": "2017-09-08T18:19:01Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12915", "html_url": "https://github.com/tensorflow/tensorflow/pull/12915", "diff_url": "https://github.com/tensorflow/tensorflow/pull/12915.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/12915.patch"}, "body_html": "<p>This fixes the issue with external bindings to TensorFlow loading custom op libraries. It does so by exporting all the relevant symbols in <code>libtensorflow.so</code>. Note that these symbols were there but they were hidden and we could not link to them previously. Currently, with this fix, developers of custom op libraries can link at compile time using <code>libtensorflow.so</code>, thus avoiding the need for <code>-undefined -dynamic_lookup</code> on Macs (which also currently doesn't work as a solution on its own) and the need for loading with <code>RTLD_GLOBAL</code> (which also does not work on its own, given that <code>pywrap_tensorflow.so</code> needs to be loaded with that flag, given it's the own exporting the necessary symbols). I've tested this on my mac and it resolves the issue.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> I know this is not really a good solution given that you probably don't want to export everything in <code>libtensorflow.so</code>, but I think it offers a good temporary workaround to the issue, until  the fix <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3731025\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/allenlavoie\">@allenlavoie</a> is working on, is published.</p>\n<p>P.S. This issue has been discussed a bit in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"256117755\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12895\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/12895/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/12895\">#12895</a>.</p>", "body_text": "This fixes the issue with external bindings to TensorFlow loading custom op libraries. It does so by exporting all the relevant symbols in libtensorflow.so. Note that these symbols were there but they were hidden and we could not link to them previously. Currently, with this fix, developers of custom op libraries can link at compile time using libtensorflow.so, thus avoiding the need for -undefined -dynamic_lookup on Macs (which also currently doesn't work as a solution on its own) and the need for loading with RTLD_GLOBAL (which also does not work on its own, given that pywrap_tensorflow.so needs to be loaded with that flag, given it's the own exporting the necessary symbols). I've tested this on my mac and it resolves the issue.\n@asimshankar I know this is not really a good solution given that you probably don't want to export everything in libtensorflow.so, but I think it offers a good temporary workaround to the issue, until  the fix @allenlavoie is working on, is published.\nP.S. This issue has been discussed a bit in #12895.", "body": "This fixes the issue with external bindings to TensorFlow loading custom op libraries. It does so by exporting all the relevant symbols in `libtensorflow.so`. Note that these symbols were there but they were hidden and we could not link to them previously. Currently, with this fix, developers of custom op libraries can link at compile time using `libtensorflow.so`, thus avoiding the need for `-undefined -dynamic_lookup` on Macs (which also currently doesn't work as a solution on its own) and the need for loading with `RTLD_GLOBAL` (which also does not work on its own, given that `pywrap_tensorflow.so` needs to be loaded with that flag, given it's the own exporting the necessary symbols). I've tested this on my mac and it resolves the issue.\r\n\r\n@asimshankar I know this is not really a good solution given that you probably don't want to export everything in `libtensorflow.so`, but I think it offers a good temporary workaround to the issue, until  the fix @allenlavoie is working on, is published.\r\n\r\nP.S. This issue has been discussed a bit in #12895."}