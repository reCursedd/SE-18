{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12879", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12879/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12879/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12879/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12879", "id": 255954186, "node_id": "MDU6SXNzdWUyNTU5NTQxODY=", "number": 12879, "title": "Is it a bug of tf.map_fn?", "user": {"login": "gauss-clb", "id": 11674304, "node_id": "MDQ6VXNlcjExNjc0MzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/11674304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gauss-clb", "html_url": "https://github.com/gauss-clb", "followers_url": "https://api.github.com/users/gauss-clb/followers", "following_url": "https://api.github.com/users/gauss-clb/following{/other_user}", "gists_url": "https://api.github.com/users/gauss-clb/gists{/gist_id}", "starred_url": "https://api.github.com/users/gauss-clb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gauss-clb/subscriptions", "organizations_url": "https://api.github.com/users/gauss-clb/orgs", "repos_url": "https://api.github.com/users/gauss-clb/repos", "events_url": "https://api.github.com/users/gauss-clb/events{/privacy}", "received_events_url": "https://api.github.com/users/gauss-clb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-07T14:21:24Z", "updated_at": "2017-09-09T00:00:17Z", "closed_at": "2017-09-09T00:00:17Z", "author_association": "NONE", "body_html": "<p>Look at the code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\nelems <span class=\"pl-k\">=</span> [tf.constant([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>],<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64)]\nalternates <span class=\"pl-k\">=</span> tf.map_fn(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x, elems, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64)\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-c1\">print</span>(sess.run(alternates))</pre></div>\n<p>It will raise a error, but when I use tuple instead of list, it works well.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\nelems <span class=\"pl-k\">=</span> (tf.constant([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>],<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64))\nalternates <span class=\"pl-k\">=</span> tf.map_fn(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x, elems, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64)\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-c1\">print</span>(sess.run(alternates))</pre></div>\n<p>Is it a bug?<br>\nIf you want to know more, llo at the discussion on <a href=\"https://stackoverflow.com/questions/46096767/how-to-explain-the-result-of-tf-map-fn\" rel=\"nofollow\">stackoverflow</a>.</p>", "body_text": "Look at the code:\nimport tensorflow as tf\nimport numpy as np\n\nelems = [tf.constant([1,2,3],dtype=tf.int64)]\nalternates = tf.map_fn(lambda x: x, elems, dtype=tf.int64)\nwith tf.Session() as sess:\n    print(sess.run(alternates))\nIt will raise a error, but when I use tuple instead of list, it works well.\nimport tensorflow as tf\nimport numpy as np\n\nelems = (tf.constant([1,2,3],dtype=tf.int64))\nalternates = tf.map_fn(lambda x: x, elems, dtype=tf.int64)\nwith tf.Session() as sess:\n    print(sess.run(alternates))\nIs it a bug?\nIf you want to know more, llo at the discussion on stackoverflow.", "body": "Look at the code:\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nelems = [tf.constant([1,2,3],dtype=tf.int64)]\r\nalternates = tf.map_fn(lambda x: x, elems, dtype=tf.int64)\r\nwith tf.Session() as sess:\r\n    print(sess.run(alternates))\r\n```\r\n\r\nIt will raise a error, but when I use tuple instead of list, it works well.\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nelems = (tf.constant([1,2,3],dtype=tf.int64))\r\nalternates = tf.map_fn(lambda x: x, elems, dtype=tf.int64)\r\nwith tf.Session() as sess:\r\n    print(sess.run(alternates))\r\n```\r\nIs it a bug?\r\nIf you want to know more, llo at the discussion on [stackoverflow](https://stackoverflow.com/questions/46096767/how-to-explain-the-result-of-tf-map-fn).\r\n\r\n"}