{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/328032367", "html_url": "https://github.com/tensorflow/tensorflow/issues/12879#issuecomment-328032367", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12879", "id": 328032367, "node_id": "MDEyOklzc3VlQ29tbWVudDMyODAzMjM2Nw==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-08T08:04:27Z", "updated_at": "2017-09-08T08:05:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The doc said:<br>\nfn: The callable to be performed. <strong>It accepts one argument, which will have the same (possibly nested) structure as elems.</strong> Its output must have the same structure as dtype if one is provided, otherwise it must have the same structure as elems.</p>\n<p>So the fix to the first snippet would be:</p>\n<div class=\"highlight highlight-source-python\"><pre>elems <span class=\"pl-k\">=</span> [tf.constant([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>],<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64)]\nalternates <span class=\"pl-k\">=</span> tf.map_fn(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x[<span class=\"pl-c1\">0</span>], elems, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64)\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-c1\">print</span>(sess.run(alternates))  <span class=\"pl-c\"><span class=\"pl-c\">#</span> [1,2,3]</span></pre></div>", "body_text": "The doc said:\nfn: The callable to be performed. It accepts one argument, which will have the same (possibly nested) structure as elems. Its output must have the same structure as dtype if one is provided, otherwise it must have the same structure as elems.\nSo the fix to the first snippet would be:\nelems = [tf.constant([1,2,3],dtype=tf.int64)]\nalternates = tf.map_fn(lambda x: x[0], elems, dtype=tf.int64)\nwith tf.Session() as sess:\n    print(sess.run(alternates))  # [1,2,3]", "body": "The doc said:\r\nfn: The callable to be performed. __It accepts one argument, which will have the same (possibly nested) structure as elems.__ Its output must have the same structure as dtype if one is provided, otherwise it must have the same structure as elems.\r\n\r\n\r\nSo the fix to the first snippet would be:\r\n```python\r\nelems = [tf.constant([1,2,3],dtype=tf.int64)]\r\nalternates = tf.map_fn(lambda x: x[0], elems, dtype=tf.int64)\r\nwith tf.Session() as sess:\r\n    print(sess.run(alternates))  # [1,2,3]\r\n```"}