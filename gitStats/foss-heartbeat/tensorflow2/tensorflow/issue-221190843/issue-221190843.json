{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9159", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9159/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9159/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9159/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9159", "id": 221190843, "node_id": "MDU6SXNzdWUyMjExOTA4NDM=", "number": 9159, "title": "[C++ API] safe string to int64 conversion", "user": {"login": "Rikorose", "id": 16517898, "node_id": "MDQ6VXNlcjE2NTE3ODk4", "avatar_url": "https://avatars0.githubusercontent.com/u/16517898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rikorose", "html_url": "https://github.com/Rikorose", "followers_url": "https://api.github.com/users/Rikorose/followers", "following_url": "https://api.github.com/users/Rikorose/following{/other_user}", "gists_url": "https://api.github.com/users/Rikorose/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rikorose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rikorose/subscriptions", "organizations_url": "https://api.github.com/users/Rikorose/orgs", "repos_url": "https://api.github.com/users/Rikorose/repos", "events_url": "https://api.github.com/users/Rikorose/events{/privacy}", "received_events_url": "https://api.github.com/users/Rikorose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-12T08:41:03Z", "updated_at": "2017-04-12T15:07:35Z", "closed_at": "2017-04-12T15:07:35Z", "author_association": "NONE", "body_html": "<p>In short:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-en\">strings::safe_strto64</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>+1<span class=\"pl-pds\">\"</span></span>, &amp;value)</pre></div>\n<p>Throws an error because of the <code>+</code>.</p>\n<p>I wrote an Op to read data in the LIBSVM format, which is the following:<br>\n<code>&lt;label&gt; &lt;index1&gt;:&lt;value1&gt; &lt;index2&gt;:&lt;value2&gt; ....</code></p>\n<p>The sample data provided at the <a href=\"https://www.csie.ntu.edu.tw/~cjlin/libsvmtools/datasets/\" rel=\"nofollow\">LIBSVM site</a> uses <code>+1</code> as label instead of only a <code>1</code>.<br>\nThe safe conversion throws an error because of the <code>+</code>:</p>\n<div class=\"highlight highlight-source-c++\"><pre>int64 value;\nstring <span class=\"pl-en\">label</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>+1<span class=\"pl-pds\">\"</span></span>);\n<span class=\"pl-en\">OP_REQUIRES</span>(ctx, strings::safe_strto64(label, &amp;value),\n            errors::InvalidArgument(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Label <span class=\"pl-pds\">\"</span></span>, label, \n                                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> is not a valid int64.<span class=\"pl-pds\">\"</span></span>));  </pre></div>\n<p>Traceback when calling the op in python:</p>\n<pre><code>Traceback (most recent call last):\n  File \"/usr/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1022, in _do_call\n    return fn(*args)\n  File \"/usr/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1004, in _run_fn\n    status, run_metadata)\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/usr/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Label +1 is not a valid int64.\n\t [[Node: DecodeLibsvm = DecodeLibsvm[OUT_TYPE=DT_INT64, num_features=123, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](shuffle_batch)]]\n</code></pre>\n<p>Is this the wanted behaviour and should I handle this before calling the conversion?</p>", "body_text": "In short:\nstrings::safe_strto64(\"+1\", &value)\nThrows an error because of the +.\nI wrote an Op to read data in the LIBSVM format, which is the following:\n<label> <index1>:<value1> <index2>:<value2> ....\nThe sample data provided at the LIBSVM site uses +1 as label instead of only a 1.\nThe safe conversion throws an error because of the +:\nint64 value;\nstring label(\"+1\");\nOP_REQUIRES(ctx, strings::safe_strto64(label, &value),\n            errors::InvalidArgument(\"Label \", label, \n                                    \" is not a valid int64.\"));  \nTraceback when calling the op in python:\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1022, in _do_call\n    return fn(*args)\n  File \"/usr/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1004, in _run_fn\n    status, run_metadata)\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/usr/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Label +1 is not a valid int64.\n\t [[Node: DecodeLibsvm = DecodeLibsvm[OUT_TYPE=DT_INT64, num_features=123, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](shuffle_batch)]]\n\nIs this the wanted behaviour and should I handle this before calling the conversion?", "body": "In short:\r\n```c++ \r\nstrings::safe_strto64(\"+1\", &value)\r\n```\r\nThrows an error because of the `+`.\r\n\r\n\r\nI wrote an Op to read data in the LIBSVM format, which is the following:\r\n`<label> <index1>:<value1> <index2>:<value2> ....`\r\n\r\nThe sample data provided at the [LIBSVM site](https://www.csie.ntu.edu.tw/~cjlin/libsvmtools/datasets/) uses `+1` as label instead of only a `1`.\r\nThe safe conversion throws an error because of the `+`:\r\n```c++\r\nint64 value;\r\nstring label(\"+1\");\r\nOP_REQUIRES(ctx, strings::safe_strto64(label, &value),\r\n            errors::InvalidArgument(\"Label \", label, \r\n                                    \" is not a valid int64.\"));  \r\n```\r\nTraceback when calling the op in python:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1022, in _do_call\r\n    return fn(*args)\r\n  File \"/usr/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1004, in _run_fn\r\n    status, run_metadata)\r\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n  File \"/usr/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\r\n    pywrap_tensorflow.TF_GetCode(status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Label +1 is not a valid int64.\r\n\t [[Node: DecodeLibsvm = DecodeLibsvm[OUT_TYPE=DT_INT64, num_features=123, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](shuffle_batch)]]\r\n```\r\n\r\nIs this the wanted behaviour and should I handle this before calling the conversion?"}