{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/216690332", "html_url": "https://github.com/tensorflow/tensorflow/issues/2211#issuecomment-216690332", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2211", "id": 216690332, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjY5MDMzMg==", "user": {"login": "hexahedria", "id": 4992683, "node_id": "MDQ6VXNlcjQ5OTI2ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4992683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hexahedria", "html_url": "https://github.com/hexahedria", "followers_url": "https://api.github.com/users/hexahedria/followers", "following_url": "https://api.github.com/users/hexahedria/following{/other_user}", "gists_url": "https://api.github.com/users/hexahedria/gists{/gist_id}", "starred_url": "https://api.github.com/users/hexahedria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hexahedria/subscriptions", "organizations_url": "https://api.github.com/users/hexahedria/orgs", "repos_url": "https://api.github.com/users/hexahedria/repos", "events_url": "https://api.github.com/users/hexahedria/events{/privacy}", "received_events_url": "https://api.github.com/users/hexahedria/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-03T23:00:07Z", "updated_at": "2016-05-03T23:00:07Z", "author_association": "NONE", "body_html": "<p>One potential dirty fix I figured out is to change <a href=\"https://github.com/tensorflow/tensorflow/blob/e39d8feebb9666a331345cd8d960f5ade4652bba/tensorflow/python/ops/numerics.py#L65\">this line</a> to</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">if</span> output.dtype <span class=\"pl-k\">in</span> [dtypes.float32, dtypes.float64] <span class=\"pl-k\">and</span> output.op._get_control_flow_context() <span class=\"pl-k\">==</span> ops.get_default_graph()._get_control_flow_context():</pre></div>\n<p>which makes sure to only add check_numerics ops on ops in the outermost context. There are probably better ways to do it, and I haven't looked to closely at the code, but this worked as a temporary workaround for me.</p>", "body_text": "One potential dirty fix I figured out is to change this line to\nif output.dtype in [dtypes.float32, dtypes.float64] and output.op._get_control_flow_context() == ops.get_default_graph()._get_control_flow_context():\nwhich makes sure to only add check_numerics ops on ops in the outermost context. There are probably better ways to do it, and I haven't looked to closely at the code, but this worked as a temporary workaround for me.", "body": " One potential dirty fix I figured out is to change [this line](https://github.com/tensorflow/tensorflow/blob/e39d8feebb9666a331345cd8d960f5ade4652bba/tensorflow/python/ops/numerics.py#L65) to\n\n``` python\nif output.dtype in [dtypes.float32, dtypes.float64] and output.op._get_control_flow_context() == ops.get_default_graph()._get_control_flow_context():\n```\n\nwhich makes sure to only add check_numerics ops on ops in the outermost context. There are probably better ways to do it, and I haven't looked to closely at the code, but this worked as a temporary workaround for me.\n"}