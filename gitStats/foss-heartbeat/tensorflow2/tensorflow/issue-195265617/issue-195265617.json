{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6287", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6287/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6287/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6287/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6287", "id": 195265617, "node_id": "MDU6SXNzdWUxOTUyNjU2MTc=", "number": 6287, "title": "Windows cuptiActivityRegisterCallbacks not found", "user": {"login": "Idokorro", "id": 7280484, "node_id": "MDQ6VXNlcjcyODA0ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7280484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Idokorro", "html_url": "https://github.com/Idokorro", "followers_url": "https://api.github.com/users/Idokorro/followers", "following_url": "https://api.github.com/users/Idokorro/following{/other_user}", "gists_url": "https://api.github.com/users/Idokorro/gists{/gist_id}", "starred_url": "https://api.github.com/users/Idokorro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Idokorro/subscriptions", "organizations_url": "https://api.github.com/users/Idokorro/orgs", "repos_url": "https://api.github.com/users/Idokorro/repos", "events_url": "https://api.github.com/users/Idokorro/events{/privacy}", "received_events_url": "https://api.github.com/users/Idokorro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-13T14:22:50Z", "updated_at": "2016-12-14T16:36:59Z", "closed_at": "2016-12-14T13:00:56Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System:<br>\nWindows 10 64bit<br>\nPython 3.5.2<br>\nnVidia GTX 760 (compute capability 3.0)</p>\n<p>Installed version of CUDA and cuDNN:<br>\nCUDA 8.0<br>\ncuDNN 5.1</p>\n<p>A link to the pip package you installed:<br>\nLatest nightly build (at least latest I could find)</p>\n<p><a href=\"http://ci.tensorflow.org/job/nightly-win/DEVICE=gpu,OS=windows/lastSuccessfulBuild/artifact/*zip*/archive.zip\" rel=\"nofollow\">http://ci.tensorflow.org/job/nightly-win/DEVICE=gpu,OS=windows/lastSuccessfulBuild/artifact/*zip*/archive.zip</a></p>\n<ol start=\"2\">\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.<br>\n0.12.head</li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>This is the complete code:</p>\n<pre><code>import tensorflow as tf\nimport matplotlib.image as mpimg\nfrom tensorflow.python.client import timeline\n\nfilename = 'data/MarshOrchid.jpg'\nimage = mpimg.imread(filename)\n\nwith tf.device('/gpu:0'):\n    x = tf.Variable(image, name='x', dtype=tf.float32)\n    y = tf.transpose(x, perm=[1, 0, 2])\n    model = tf.global_variables_initializer()\n\nwith tf.Session(config=tf.ConfigProto(log_device_placement=True)) as sess:\n    run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n    run_metadata = tf.RunMetadata()\n    sess.run(model)\n    result = sess.run(y, options=run_options, run_metadata=run_metadata)\n\n    tl = timeline.Timeline(run_metadata.step_stats)\n    ctf = tl.generate_chrome_trace_format()\n    with open('timeline.json', 'w') as f:\n        f.write(ctf)\n\n</code></pre>\n<h3>What other attempted solutions have you tried?</h3>\n<p>Works OK:<br>\ntf.RunOptions.SOFTWARE_TRACE</p>\n<p>Don't work:<br>\ntf.RunOptions.HARDWARE_TRACE<br>\ntf.RunOptions.FULL_TRACE</p>\n<h3>Logs or other output that would be helpful</h3>\n<pre><code>\"C:\\Program Files\\Python35\\python.exe\" E:/Documents/Workspace/machine_learning/test/test-1.py\nE c:\\tf_jenkins\\home\\workspace\\nightly-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:586] Could not identify NUMA node of /job:localhost/replica:0/task:0/gpu:0, defaulting to 0.  Your kernel may not have been built with NUMA support.\nDevice mapping:\n/job:localhost/replica:0/task:0/gpu:0 -&gt; device: 0, name: GeForce GTX 760, pci bus id: 0000:01:00.0\nx: (Variable): /job:localhost/replica:0/task:0/gpu:0\nx/read: (Identity): /job:localhost/replica:0/task:0/gpu:0\ntranspose: (Transpose): /job:localhost/replica:0/task:0/gpu:0\nx/Assign: (Assign): /job:localhost/replica:0/task:0/gpu:0\ninit: (NoOp): /job:localhost/replica:0/task:0/gpu:0\ntranspose/perm: (Const): /job:localhost/replica:0/task:0/gpu:0\nx/initial_value: (Const): /job:localhost/replica:0/task:0/gpu:0\nF c:\\tf_jenkins\\home\\workspace\\nightly-win\\device\\gpu\\os\\windows\\tensorflow\\core\\platform\\default\\gpu\\cupti_wrapper.cc:59] Check failed: ::tensorflow::Status::OK() == (::tensorflow::Env::Default()-&gt;GetSymbolFromLibrary( GetDsoHandle(), kName, &amp;f)) (OK vs. Not found: cuptiActivityRegisterCallbacks not found)could not find cuptiActivityRegisterCallbacksin libcupti DSO\n\nProcess finished with exit code -1073740791 (0xC0000409)\n</code></pre>\n<p>I suppressed \"I\" messages with \"TF_CPP_MIN_LOG_LEVEL = 1\". I don't know if I'm missing something but it seems like it's trying to load libcupti.so from \"c:\\tf_jenkins...\" path witch doesn't exist. I do have:<br>\n\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\bin\"<br>\n\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\libnvvp\"<br>\nin path environment variable. Program works OK. It just gives me an error when I try to trace execution.</p>\n<p>I don't know if I messed up something or is this a bug.</p>", "body_text": "Environment info\nOperating System:\nWindows 10 64bit\nPython 3.5.2\nnVidia GTX 760 (compute capability 3.0)\nInstalled version of CUDA and cuDNN:\nCUDA 8.0\ncuDNN 5.1\nA link to the pip package you installed:\nLatest nightly build (at least latest I could find)\nhttp://ci.tensorflow.org/job/nightly-win/DEVICE=gpu,OS=windows/lastSuccessfulBuild/artifact/*zip*/archive.zip\n\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n0.12.head\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nThis is the complete code:\nimport tensorflow as tf\nimport matplotlib.image as mpimg\nfrom tensorflow.python.client import timeline\n\nfilename = 'data/MarshOrchid.jpg'\nimage = mpimg.imread(filename)\n\nwith tf.device('/gpu:0'):\n    x = tf.Variable(image, name='x', dtype=tf.float32)\n    y = tf.transpose(x, perm=[1, 0, 2])\n    model = tf.global_variables_initializer()\n\nwith tf.Session(config=tf.ConfigProto(log_device_placement=True)) as sess:\n    run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n    run_metadata = tf.RunMetadata()\n    sess.run(model)\n    result = sess.run(y, options=run_options, run_metadata=run_metadata)\n\n    tl = timeline.Timeline(run_metadata.step_stats)\n    ctf = tl.generate_chrome_trace_format()\n    with open('timeline.json', 'w') as f:\n        f.write(ctf)\n\n\nWhat other attempted solutions have you tried?\nWorks OK:\ntf.RunOptions.SOFTWARE_TRACE\nDon't work:\ntf.RunOptions.HARDWARE_TRACE\ntf.RunOptions.FULL_TRACE\nLogs or other output that would be helpful\n\"C:\\Program Files\\Python35\\python.exe\" E:/Documents/Workspace/machine_learning/test/test-1.py\nE c:\\tf_jenkins\\home\\workspace\\nightly-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:586] Could not identify NUMA node of /job:localhost/replica:0/task:0/gpu:0, defaulting to 0.  Your kernel may not have been built with NUMA support.\nDevice mapping:\n/job:localhost/replica:0/task:0/gpu:0 -> device: 0, name: GeForce GTX 760, pci bus id: 0000:01:00.0\nx: (Variable): /job:localhost/replica:0/task:0/gpu:0\nx/read: (Identity): /job:localhost/replica:0/task:0/gpu:0\ntranspose: (Transpose): /job:localhost/replica:0/task:0/gpu:0\nx/Assign: (Assign): /job:localhost/replica:0/task:0/gpu:0\ninit: (NoOp): /job:localhost/replica:0/task:0/gpu:0\ntranspose/perm: (Const): /job:localhost/replica:0/task:0/gpu:0\nx/initial_value: (Const): /job:localhost/replica:0/task:0/gpu:0\nF c:\\tf_jenkins\\home\\workspace\\nightly-win\\device\\gpu\\os\\windows\\tensorflow\\core\\platform\\default\\gpu\\cupti_wrapper.cc:59] Check failed: ::tensorflow::Status::OK() == (::tensorflow::Env::Default()->GetSymbolFromLibrary( GetDsoHandle(), kName, &f)) (OK vs. Not found: cuptiActivityRegisterCallbacks not found)could not find cuptiActivityRegisterCallbacksin libcupti DSO\n\nProcess finished with exit code -1073740791 (0xC0000409)\n\nI suppressed \"I\" messages with \"TF_CPP_MIN_LOG_LEVEL = 1\". I don't know if I'm missing something but it seems like it's trying to load libcupti.so from \"c:\\tf_jenkins...\" path witch doesn't exist. I do have:\n\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\bin\"\n\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\libnvvp\"\nin path environment variable. Program works OK. It just gives me an error when I try to trace execution.\nI don't know if I messed up something or is this a bug.", "body": "### Environment info\r\nOperating System:\r\nWindows 10 64bit\r\nPython 3.5.2\r\nnVidia GTX 760 (compute capability 3.0)\r\n\r\nInstalled version of CUDA and cuDNN: \r\nCUDA 8.0\r\ncuDNN 5.1\r\n\r\nA link to the pip package you installed:\r\nLatest nightly build (at least latest I could find)\r\n\r\nhttp://ci.tensorflow.org/job/nightly-win/DEVICE=gpu,OS=windows/lastSuccessfulBuild/artifact/*zip*/archive.zip\r\n\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n0.12.head\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\nThis is the complete code:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport matplotlib.image as mpimg\r\nfrom tensorflow.python.client import timeline\r\n\r\nfilename = 'data/MarshOrchid.jpg'\r\nimage = mpimg.imread(filename)\r\n\r\nwith tf.device('/gpu:0'):\r\n    x = tf.Variable(image, name='x', dtype=tf.float32)\r\n    y = tf.transpose(x, perm=[1, 0, 2])\r\n    model = tf.global_variables_initializer()\r\n\r\nwith tf.Session(config=tf.ConfigProto(log_device_placement=True)) as sess:\r\n    run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\n    run_metadata = tf.RunMetadata()\r\n    sess.run(model)\r\n    result = sess.run(y, options=run_options, run_metadata=run_metadata)\r\n\r\n    tl = timeline.Timeline(run_metadata.step_stats)\r\n    ctf = tl.generate_chrome_trace_format()\r\n    with open('timeline.json', 'w') as f:\r\n        f.write(ctf)\r\n\r\n```\r\n\r\n### What other attempted solutions have you tried?\r\nWorks OK:\r\ntf.RunOptions.SOFTWARE_TRACE\r\n\r\nDon't work:\r\ntf.RunOptions.HARDWARE_TRACE\r\ntf.RunOptions.FULL_TRACE\r\n\r\n### Logs or other output that would be helpful\r\n\r\n```\r\n\"C:\\Program Files\\Python35\\python.exe\" E:/Documents/Workspace/machine_learning/test/test-1.py\r\nE c:\\tf_jenkins\\home\\workspace\\nightly-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:586] Could not identify NUMA node of /job:localhost/replica:0/task:0/gpu:0, defaulting to 0.  Your kernel may not have been built with NUMA support.\r\nDevice mapping:\r\n/job:localhost/replica:0/task:0/gpu:0 -> device: 0, name: GeForce GTX 760, pci bus id: 0000:01:00.0\r\nx: (Variable): /job:localhost/replica:0/task:0/gpu:0\r\nx/read: (Identity): /job:localhost/replica:0/task:0/gpu:0\r\ntranspose: (Transpose): /job:localhost/replica:0/task:0/gpu:0\r\nx/Assign: (Assign): /job:localhost/replica:0/task:0/gpu:0\r\ninit: (NoOp): /job:localhost/replica:0/task:0/gpu:0\r\ntranspose/perm: (Const): /job:localhost/replica:0/task:0/gpu:0\r\nx/initial_value: (Const): /job:localhost/replica:0/task:0/gpu:0\r\nF c:\\tf_jenkins\\home\\workspace\\nightly-win\\device\\gpu\\os\\windows\\tensorflow\\core\\platform\\default\\gpu\\cupti_wrapper.cc:59] Check failed: ::tensorflow::Status::OK() == (::tensorflow::Env::Default()->GetSymbolFromLibrary( GetDsoHandle(), kName, &f)) (OK vs. Not found: cuptiActivityRegisterCallbacks not found)could not find cuptiActivityRegisterCallbacksin libcupti DSO\r\n\r\nProcess finished with exit code -1073740791 (0xC0000409)\r\n```\r\n\r\nI suppressed \"I\" messages with \"TF_CPP_MIN_LOG_LEVEL = 1\". I don't know if I'm missing something but it seems like it's trying to load libcupti.so from \"c:\\tf_jenkins\\...\" path witch doesn't exist. I do have:\r\n\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\bin\"\r\n\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\libnvvp\"\r\nin path environment variable. Program works OK. It just gives me an error when I try to trace execution.\r\n\r\nI don't know if I messed up something or is this a bug."}