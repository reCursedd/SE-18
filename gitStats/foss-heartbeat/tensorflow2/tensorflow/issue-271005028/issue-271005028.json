{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14215", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14215/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14215/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14215/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14215", "id": 271005028, "node_id": "MDU6SXNzdWUyNzEwMDUwMjg=", "number": 14215, "title": " org.tensorflow.TensorFlowException: Op type not registered 'Sum' in binary running on localhost. Make sure the Op and Kernel are registered in the binary running in this process.", "user": {"login": "eli99999", "id": 13930252, "node_id": "MDQ6VXNlcjEzOTMwMjUy", "avatar_url": "https://avatars3.githubusercontent.com/u/13930252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eli99999", "html_url": "https://github.com/eli99999", "followers_url": "https://api.github.com/users/eli99999/followers", "following_url": "https://api.github.com/users/eli99999/following{/other_user}", "gists_url": "https://api.github.com/users/eli99999/gists{/gist_id}", "starred_url": "https://api.github.com/users/eli99999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eli99999/subscriptions", "organizations_url": "https://api.github.com/users/eli99999/orgs", "repos_url": "https://api.github.com/users/eli99999/repos", "events_url": "https://api.github.com/users/eli99999/events{/privacy}", "received_events_url": "https://api.github.com/users/eli99999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-03T14:52:05Z", "updated_at": "2018-11-11T20:27:02Z", "closed_at": "2017-11-05T07:03:34Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code</strong>:<br>\nI worte a code that is based on this : <a href=\"https://www.tensorflow.org/api_guides/python/contrib.signal\" rel=\"nofollow\">https://www.tensorflow.org/api_guides/python/contrib.signal</a><br>\ntrying to produce mfcc works fine in python but i cannot make it work in Android</p>\n</li>\n<li>\n<p>**OS Platform and Distribution  Linux Ubuntu 16.04</p>\n</li>\n<li>\n<p>**TensorFlow installed from source  **:</p>\n</li>\n<li>\n<p>**TensorFlow version 1.4.2:</p>\n</li>\n<li>\n<p>**Python version - 2.7</p>\n</li>\n<li>\n<p>**Bazel version  0.7.0</p>\n</li>\n<li></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>i have reduced my graph to this -<br>\n****PYTHON CODE that creates the pb *****<br>\nimport sugartensor as tf<br>\nfrom tensorflow.python.framework import graph_util<br>\nfrom model import *<br>\nimport data<br>\nimport os<br>\nimport sys<br>\nfrom tensorflow.contrib.framework.python.ops import audio_ops as contrib_audio<br>\nimport functools</p>\n<p>from tensorflow.contrib.session_bundle import exporter<br>\nfrom tensorflow.python.tools import freeze_graph<br>\nglobal session_config<br>\nexportfilename = 'out2/export_mfcc_only.pb'<br>\nwith tf.device('/cpu:0'):<br>\nsession_config = tf.ConfigProto(allow_soft_placement=True, log_device_placement=False)</p>\n<pre><code>tf.app.flags.DEFINE_integer ('export_version',   1,           'version number of the exported model')\nsession = tf.InteractiveSession()\n#session = tf.Session()\n# Run inference\nbatch_size = 1\nvoca_size = data.voca_size\nsample_rate = 16000.0\t\nwavdata = tf.placeholder(tf.float32, [ None], name=\"wav_float_input\")\npcm = tf.expand_dims(wavdata, 0)\nstfts = tf.contrib.signal.stft(pcm, frame_length=2048, frame_step=512,\n                         fft_length=2048,window_fn=functools.partial(tf.contrib.signal.hann_window, periodic=False), pad_end=True)\nspectrograms = tf.abs(stfts)\n# Warp the linear scale spectrograms into the mel-scale.\nnum_spectrogram_bins = stfts.shape[-1].value\nlower_edge_hertz, upper_edge_hertz, num_mel_bins = 0.0,8000.0, 128\nlinear_to_mel_weight_matrix = tf.contrib.signal.linear_to_mel_weight_matrix(\nnum_mel_bins, num_spectrogram_bins, sample_rate, lower_edge_hertz,\nupper_edge_hertz)\nmel_spectrograms = tf.tensordot(\nspectrograms, linear_to_mel_weight_matrix, 1)\nmel_spectrograms.set_shape(spectrograms.shape[:-1].concatenate(\nlinear_to_mel_weight_matrix.shape[-1:]))\n# Compute a stabilized log to get log-magnitude mel-scale spectrograms.\nlog_mel_spectrograms = tf.log(mel_spectrograms + 1e-6)\n# Compute MFCCs from log_mel_spectrograms and take the first 13.\nmfccs = tf.contrib.signal.mfccs_from_log_mel_spectrograms(\nlog_mel_spectrograms)[..., :20]\n\nseq_len =[tf.size(mfccs.sg_int().sg_sum(axis=2), name=\"output_node\" )]\n\n\n\n\nsession.run(tf.local_variables_initializer() )\ntf.global_variables_initializer()\nsubgraph = tf.graph_util.extract_sub_graph(session.graph_def, [\"output_node\"])\n\nfrozen_graph_def = graph_util.convert_variables_to_constants(\n      session, subgraph, [\"output_node\"])\ntf.train.write_graph(\n      frozen_graph_def,\n      os.path.dirname(exportfilename),\n      os.path.basename(exportfilename),\n      as_text=False)\ntf.logging.info('Saved frozen graph to %s',exportfilename)\n</code></pre>\n<p><em><strong>END OF PYTHON CODE</strong></em></p>\n<p>i manage to load it and test the created pb it in python</p>\n<p>i create libtensorflow_inference.so<br>\nusing print_selective_registration_header as described in -<br>\ntensorflow/tensorflow/python/tools/print_selective_registration_header.py</p>\n<p>testing the code in Androids results in an Error when i load the model -</p>\n<p>11-03 16:15:31.790 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)<br>\n.  Registered:  </p>\n<pre><code>                                                       \t [[Node: Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)]]\n</code></pre>\n<p>11-03 16:15:31.790 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)<br>\n.  Registered:  </p>\n<pre><code>                                                       \t [[Node: Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)]]\n</code></pre>\n<p>11-03 16:15:31.800 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)<br>\n.  Registered:  </p>\n<pre><code>                                                       \t [[Node: Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)]]\n</code></pre>\n<p>11-03 16:15:31.810 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_2, Tensordot/add_1)<br>\n.  Registered:  </p>\n<pre><code>                                                       \t [[Node: Tensordot/ListDiff = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_2, Tensordot/add_1)]]\n</code></pre>\n<p>11-03 16:15:31.870 8639-8639/org.tensorflow.demo E/AndroidRuntime: FATAL EXCEPTION: main<br>\nProcess: org.tensorflow.demo, PID: 8639<br>\norg.tensorflow.TensorFlowException: Op type not registered 'Sum' in binary running on localhost. Make sure the Op and Kernel are registered in the binary running in this process.</p>\n<p>i see that both 'ListDiff' and 'Sum' ops are in the ops_to_register.h file that is generated by the print_selective_registration_header process</p>\n<p>is there a workaround for this?</p>", "body_text": "System information\n\n\nHave I written custom code:\nI worte a code that is based on this : https://www.tensorflow.org/api_guides/python/contrib.signal\ntrying to produce mfcc works fine in python but i cannot make it work in Android\n\n\n**OS Platform and Distribution  Linux Ubuntu 16.04\n\n\n**TensorFlow installed from source  **:\n\n\n**TensorFlow version 1.4.2:\n\n\n**Python version - 2.7\n\n\n**Bazel version  0.7.0\n\n\n\nDescribe the problem\ni have reduced my graph to this -\n****PYTHON CODE that creates the pb *****\nimport sugartensor as tf\nfrom tensorflow.python.framework import graph_util\nfrom model import *\nimport data\nimport os\nimport sys\nfrom tensorflow.contrib.framework.python.ops import audio_ops as contrib_audio\nimport functools\nfrom tensorflow.contrib.session_bundle import exporter\nfrom tensorflow.python.tools import freeze_graph\nglobal session_config\nexportfilename = 'out2/export_mfcc_only.pb'\nwith tf.device('/cpu:0'):\nsession_config = tf.ConfigProto(allow_soft_placement=True, log_device_placement=False)\ntf.app.flags.DEFINE_integer ('export_version',   1,           'version number of the exported model')\nsession = tf.InteractiveSession()\n#session = tf.Session()\n# Run inference\nbatch_size = 1\nvoca_size = data.voca_size\nsample_rate = 16000.0\t\nwavdata = tf.placeholder(tf.float32, [ None], name=\"wav_float_input\")\npcm = tf.expand_dims(wavdata, 0)\nstfts = tf.contrib.signal.stft(pcm, frame_length=2048, frame_step=512,\n                         fft_length=2048,window_fn=functools.partial(tf.contrib.signal.hann_window, periodic=False), pad_end=True)\nspectrograms = tf.abs(stfts)\n# Warp the linear scale spectrograms into the mel-scale.\nnum_spectrogram_bins = stfts.shape[-1].value\nlower_edge_hertz, upper_edge_hertz, num_mel_bins = 0.0,8000.0, 128\nlinear_to_mel_weight_matrix = tf.contrib.signal.linear_to_mel_weight_matrix(\nnum_mel_bins, num_spectrogram_bins, sample_rate, lower_edge_hertz,\nupper_edge_hertz)\nmel_spectrograms = tf.tensordot(\nspectrograms, linear_to_mel_weight_matrix, 1)\nmel_spectrograms.set_shape(spectrograms.shape[:-1].concatenate(\nlinear_to_mel_weight_matrix.shape[-1:]))\n# Compute a stabilized log to get log-magnitude mel-scale spectrograms.\nlog_mel_spectrograms = tf.log(mel_spectrograms + 1e-6)\n# Compute MFCCs from log_mel_spectrograms and take the first 13.\nmfccs = tf.contrib.signal.mfccs_from_log_mel_spectrograms(\nlog_mel_spectrograms)[..., :20]\n\nseq_len =[tf.size(mfccs.sg_int().sg_sum(axis=2), name=\"output_node\" )]\n\n\n\n\nsession.run(tf.local_variables_initializer() )\ntf.global_variables_initializer()\nsubgraph = tf.graph_util.extract_sub_graph(session.graph_def, [\"output_node\"])\n\nfrozen_graph_def = graph_util.convert_variables_to_constants(\n      session, subgraph, [\"output_node\"])\ntf.train.write_graph(\n      frozen_graph_def,\n      os.path.dirname(exportfilename),\n      os.path.basename(exportfilename),\n      as_text=False)\ntf.logging.info('Saved frozen graph to %s',exportfilename)\n\nEND OF PYTHON CODE\ni manage to load it and test the created pb it in python\ni create libtensorflow_inference.so\nusing print_selective_registration_header as described in -\ntensorflow/tensorflow/python/tools/print_selective_registration_header.py\ntesting the code in Androids results in an Error when i load the model -\n11-03 16:15:31.790 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)\n.  Registered:  \n                                                       \t [[Node: Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)]]\n\n11-03 16:15:31.790 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)\n.  Registered:  \n                                                       \t [[Node: Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)]]\n\n11-03 16:15:31.800 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)\n.  Registered:  \n                                                       \t [[Node: Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)]]\n\n11-03 16:15:31.810 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_2, Tensordot/add_1)\n.  Registered:  \n                                                       \t [[Node: Tensordot/ListDiff = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_2, Tensordot/add_1)]]\n\n11-03 16:15:31.870 8639-8639/org.tensorflow.demo E/AndroidRuntime: FATAL EXCEPTION: main\nProcess: org.tensorflow.demo, PID: 8639\norg.tensorflow.TensorFlowException: Op type not registered 'Sum' in binary running on localhost. Make sure the Op and Kernel are registered in the binary running in this process.\ni see that both 'ListDiff' and 'Sum' ops are in the ops_to_register.h file that is generated by the print_selective_registration_header process\nis there a workaround for this?", "body": " \r\n\r\n### System information\r\n- **Have I written custom code**:\r\nI worte a code that is based on this : https://www.tensorflow.org/api_guides/python/contrib.signal\r\ntrying to produce mfcc works fine in python but i cannot make it work in Android\r\n\r\n- **OS Platform and Distribution  Linux Ubuntu 16.04 \r\n- **TensorFlow installed from source  **:\r\n- **TensorFlow version 1.4.2:\r\n- **Python version - 2.7 \r\n- **Bazel version  0.7.0\r\n-\r\n \r\n\r\n### Describe the problem\r\ni have reduced my graph to this - \r\n****PYTHON CODE that creates the pb *****\r\nimport sugartensor as tf\r\nfrom tensorflow.python.framework import graph_util\r\nfrom model import *\r\nimport data\r\nimport os\r\nimport sys\r\nfrom tensorflow.contrib.framework.python.ops import audio_ops as contrib_audio\r\nimport functools\r\n\r\n\r\nfrom tensorflow.contrib.session_bundle import exporter\r\nfrom tensorflow.python.tools import freeze_graph\r\nglobal session_config\r\nexportfilename = 'out2/export_mfcc_only.pb'\r\nwith tf.device('/cpu:0'):\r\n\tsession_config = tf.ConfigProto(allow_soft_placement=True, log_device_placement=False)\r\n\t \r\n\ttf.app.flags.DEFINE_integer ('export_version',   1,           'version number of the exported model')\r\n\tsession = tf.InteractiveSession()\r\n\t#session = tf.Session()\r\n\t# Run inference\r\n\tbatch_size = 1\r\n\tvoca_size = data.voca_size\r\n\tsample_rate = 16000.0\t\r\n\twavdata = tf.placeholder(tf.float32, [ None], name=\"wav_float_input\")\r\n\tpcm = tf.expand_dims(wavdata, 0)\r\n\tstfts = tf.contrib.signal.stft(pcm, frame_length=2048, frame_step=512,\r\n                             fft_length=2048,window_fn=functools.partial(tf.contrib.signal.hann_window, periodic=False), pad_end=True)\r\n\tspectrograms = tf.abs(stfts)\r\n\t# Warp the linear scale spectrograms into the mel-scale.\r\n\tnum_spectrogram_bins = stfts.shape[-1].value\r\n\tlower_edge_hertz, upper_edge_hertz, num_mel_bins = 0.0,8000.0, 128\r\n\tlinear_to_mel_weight_matrix = tf.contrib.signal.linear_to_mel_weight_matrix(\r\n\tnum_mel_bins, num_spectrogram_bins, sample_rate, lower_edge_hertz,\r\n\tupper_edge_hertz)\r\n\tmel_spectrograms = tf.tensordot(\r\n\tspectrograms, linear_to_mel_weight_matrix, 1)\r\n\tmel_spectrograms.set_shape(spectrograms.shape[:-1].concatenate(\r\n\tlinear_to_mel_weight_matrix.shape[-1:]))\r\n\t# Compute a stabilized log to get log-magnitude mel-scale spectrograms.\r\n\tlog_mel_spectrograms = tf.log(mel_spectrograms + 1e-6)\r\n\t# Compute MFCCs from log_mel_spectrograms and take the first 13.\r\n\tmfccs = tf.contrib.signal.mfccs_from_log_mel_spectrograms(\r\n\tlog_mel_spectrograms)[..., :20]\r\n\r\n\tseq_len =[tf.size(mfccs.sg_int().sg_sum(axis=2), name=\"output_node\" )]\r\n\r\n  \r\n\t\r\n\r\n\tsession.run(tf.local_variables_initializer() )\r\n\ttf.global_variables_initializer()\r\n\tsubgraph = tf.graph_util.extract_sub_graph(session.graph_def, [\"output_node\"])\r\n\r\n\tfrozen_graph_def = graph_util.convert_variables_to_constants(\r\n\t      session, subgraph, [\"output_node\"])\r\n\ttf.train.write_graph(\r\n\t      frozen_graph_def,\r\n\t      os.path.dirname(exportfilename),\r\n\t      os.path.basename(exportfilename),\r\n\t      as_text=False)\r\n\ttf.logging.info('Saved frozen graph to %s',exportfilename)\r\n***END OF PYTHON CODE***\r\n \r\ni manage to load it and test the created pb it in python\r\n\r\ni create libtensorflow_inference.so\r\nusing print_selective_registration_header as described in - \r\ntensorflow/tensorflow/python/tools/print_selective_registration_header.py\r\n\r\ntesting the code in Androids results in an Error when i load the model - \r\n\r\n11-03 16:15:31.790 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)\r\n                                                           \t.  Registered:  <no registered kernels>\r\n                                                           \r\n                                                           \t [[Node: Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)]]\r\n11-03 16:15:31.790 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)\r\n                                                           \t.  Registered:  <no registered kernels>\r\n                                                           \r\n                                                           \t [[Node: Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)]]\r\n11-03 16:15:31.800 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)\r\n                                                           \t.  Registered:  <no registered kernels>\r\n                                                           \r\n                                                           \t [[Node: Tensordot/ListDiff_1 = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_3, Tensordot/add_3)]]\r\n11-03 16:15:31.810 8639-8639/org.tensorflow.demo E/native: executor.cc:651 Executor failed to create kernel. Not found: No registered 'ListDiff' OpKernel for CPU devices compatible with node Tensordot/ListDiff = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_2, Tensordot/add_1)\r\n                                                           \t.  Registered:  <no registered kernels>\r\n                                                           \r\n                                                           \t [[Node: Tensordot/ListDiff = ListDiff[T=DT_INT32, out_idx=DT_INT32, _device=\"/device:CPU:0\"](Tensordot/range_2, Tensordot/add_1)]]\r\n11-03 16:15:31.870 8639-8639/org.tensorflow.demo E/AndroidRuntime: FATAL EXCEPTION: main\r\n                                                                   Process: org.tensorflow.demo, PID: 8639\r\n                                                                   org.tensorflow.TensorFlowException: Op type not registered 'Sum' in binary running on localhost. Make sure the Op and Kernel are registered in the binary running in this process.\r\n\r\n\r\ni see that both 'ListDiff' and 'Sum' ops are in the ops_to_register.h file that is generated by the print_selective_registration_header process\r\n\r\nis there a workaround for this?\r\n\t "}