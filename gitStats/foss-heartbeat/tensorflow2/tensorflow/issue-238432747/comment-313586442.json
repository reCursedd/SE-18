{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/313586442", "html_url": "https://github.com/tensorflow/tensorflow/pull/11056#issuecomment-313586442", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11056", "id": 313586442, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzU4NjQ0Mg==", "user": {"login": "kevinjos", "id": 6759535, "node_id": "MDQ6VXNlcjY3NTk1MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6759535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinjos", "html_url": "https://github.com/kevinjos", "followers_url": "https://api.github.com/users/kevinjos/followers", "following_url": "https://api.github.com/users/kevinjos/following{/other_user}", "gists_url": "https://api.github.com/users/kevinjos/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinjos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinjos/subscriptions", "organizations_url": "https://api.github.com/users/kevinjos/orgs", "repos_url": "https://api.github.com/users/kevinjos/repos", "events_url": "https://api.github.com/users/kevinjos/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinjos/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-07T04:52:32Z", "updated_at": "2017-07-07T04:52:32Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=710255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fchollet\">@fchollet</a>, shall I apply the fix to this PR? I saw in the Keras repo that simply removing the sort of the trainable weights by name fixes the serialization bug.</p>\n<p>Also, I have noticed that if I load the model with compile=False or delete the optimizer weights before loading the model that the Exception is not raised. However, the loaded model predictions preform as if the model was not trained at all. I don't understand how this could be.. I am retraining the model with this bug fix applied now to see if it's related or not.</p>", "body_text": "@fchollet, shall I apply the fix to this PR? I saw in the Keras repo that simply removing the sort of the trainable weights by name fixes the serialization bug.\nAlso, I have noticed that if I load the model with compile=False or delete the optimizer weights before loading the model that the Exception is not raised. However, the loaded model predictions preform as if the model was not trained at all. I don't understand how this could be.. I am retraining the model with this bug fix applied now to see if it's related or not.", "body": "@fchollet, shall I apply the fix to this PR? I saw in the Keras repo that simply removing the sort of the trainable weights by name fixes the serialization bug.\r\n\r\nAlso, I have noticed that if I load the model with compile=False or delete the optimizer weights before loading the model that the Exception is not raised. However, the loaded model predictions preform as if the model was not trained at all. I don't understand how this could be.. I am retraining the model with this bug fix applied now to see if it's related or not."}