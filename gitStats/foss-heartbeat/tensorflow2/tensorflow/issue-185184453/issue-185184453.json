{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5199", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5199/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5199/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5199/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5199", "id": 185184453, "node_id": "MDU6SXNzdWUxODUxODQ0NTM=", "number": 5199, "title": "tensor.eval() function converts a tensor to a numpy array is very slow. ", "user": {"login": "civilman628", "id": 8059551, "node_id": "MDQ6VXNlcjgwNTk1NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8059551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/civilman628", "html_url": "https://github.com/civilman628", "followers_url": "https://api.github.com/users/civilman628/followers", "following_url": "https://api.github.com/users/civilman628/following{/other_user}", "gists_url": "https://api.github.com/users/civilman628/gists{/gist_id}", "starred_url": "https://api.github.com/users/civilman628/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/civilman628/subscriptions", "organizations_url": "https://api.github.com/users/civilman628/orgs", "repos_url": "https://api.github.com/users/civilman628/repos", "events_url": "https://api.github.com/users/civilman628/events{/privacy}", "received_events_url": "https://api.github.com/users/civilman628/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-25T17:37:04Z", "updated_at": "2017-04-14T05:42:54Z", "closed_at": "2016-10-25T19:37:42Z", "author_association": "NONE", "body_html": "<p>I am using inception V1 model to predict image. The input needs a 4d array.</p>\n<p>This section is read a image and resize to 224 * 224 * 3, then whitening, then convert to 4D tensor</p>\n<hr>\n<p>with open(image, 'rb') as f:<br>\nimage_data = f.read()</p>\n<p>image_buffer=tf.image.decode_jpeg(image_data)<br>\nresize_image=tf.image.resize_images(image_buffer,[224,224])<br>\nunified_image=tf.image.per_image_whitening(resize_image)<br>\nimage_4dTensor=tf.expand_dims(unified_image, 0)</p>\n<hr>\n<p>This section is to input an image and run the session. Since i can't input a 4D tensor but a numpy array into the session, I need convert 4D tensor to 4D array by call <strong>tensor.eval()</strong>. However i found that this conversion for a 1 * 224 * 224 * 3 tensor is very slow. It needs 0.4-0.6s. The prediction itself only takes less than 0.2s (run through 22 layers for a input 4D array ). So Is there anyway to convert a tensor to a numpy array faster?</p>\n<p>with tf.Session() as sess:</p>\n<pre><code>stamp1=time.time()\nimage_array=image_4dTensor.eval()\ntime_cost=time.time()-stamp1\nprint (time_cost)\n</code></pre>", "body_text": "I am using inception V1 model to predict image. The input needs a 4d array.\nThis section is read a image and resize to 224 * 224 * 3, then whitening, then convert to 4D tensor\n\nwith open(image, 'rb') as f:\nimage_data = f.read()\nimage_buffer=tf.image.decode_jpeg(image_data)\nresize_image=tf.image.resize_images(image_buffer,[224,224])\nunified_image=tf.image.per_image_whitening(resize_image)\nimage_4dTensor=tf.expand_dims(unified_image, 0)\n\nThis section is to input an image and run the session. Since i can't input a 4D tensor but a numpy array into the session, I need convert 4D tensor to 4D array by call tensor.eval(). However i found that this conversion for a 1 * 224 * 224 * 3 tensor is very slow. It needs 0.4-0.6s. The prediction itself only takes less than 0.2s (run through 22 layers for a input 4D array ). So Is there anyway to convert a tensor to a numpy array faster?\nwith tf.Session() as sess:\nstamp1=time.time()\nimage_array=image_4dTensor.eval()\ntime_cost=time.time()-stamp1\nprint (time_cost)", "body": "I am using inception V1 model to predict image. The input needs a 4d array.\n\nThis section is read a image and resize to 224 \\* 224 \\* 3, then whitening, then convert to 4D tensor\n\n---\n\n  with open(image, 'rb') as f:\n    image_data = f.read()\n\n  image_buffer=tf.image.decode_jpeg(image_data)\n  resize_image=tf.image.resize_images(image_buffer,[224,224])\n  unified_image=tf.image.per_image_whitening(resize_image)\n  image_4dTensor=tf.expand_dims(unified_image, 0)\n\n---\n\nThis section is to input an image and run the session. Since i can't input a 4D tensor but a numpy array into the session, I need convert 4D tensor to 4D array by call **tensor.eval()**. However i found that this conversion for a 1 \\* 224 \\* 224 \\* 3 tensor is very slow. It needs 0.4-0.6s. The prediction itself only takes less than 0.2s (run through 22 layers for a input 4D array ). So Is there anyway to convert a tensor to a numpy array faster?\n\n  with tf.Session() as sess:\n\n```\nstamp1=time.time()\nimage_array=image_4dTensor.eval()\ntime_cost=time.time()-stamp1\nprint (time_cost)\n```\n"}