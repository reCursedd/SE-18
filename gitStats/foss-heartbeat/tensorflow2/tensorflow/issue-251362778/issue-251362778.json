{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12405", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12405/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12405/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12405/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12405", "id": 251362778, "node_id": "MDU6SXNzdWUyNTEzNjI3Nzg=", "number": 12405, "title": "tf.boolean_mask doesn't check array bounds.", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-18T21:25:48Z", "updated_at": "2018-01-05T17:51:22Z", "closed_at": "2018-01-05T17:51:22Z", "author_association": "CONTRIBUTOR", "body_html": "<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: archlinux</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.3.0-rc2-20-g0787eee 1.3.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0/6.0</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nm <span class=\"pl-k\">=</span> tf.placeholder(tf.bool, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>m<span class=\"pl-pds\">'</span></span>)\nb <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">None</span>], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>)\noutput <span class=\"pl-k\">=</span> tf.boolean_mask(b, m)\nmask <span class=\"pl-k\">=</span> [[<span class=\"pl-c1\">True</span>],[<span class=\"pl-c1\">True</span>],[<span class=\"pl-c1\">True</span>],[<span class=\"pl-c1\">True</span>],[<span class=\"pl-c1\">True</span>]]\ny <span class=\"pl-k\">=</span> np.random.rand(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">4</span>)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-c1\">print</span>(y)\n    <span class=\"pl-c1\">print</span>(sess.run(output, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{m: mask, b:y}))</pre></div>\n<p>The code runs, while I expect an index out-of-bound error.</p>\n<p>In fact, even when mask is a 4x1 boolean, I still expect an error (since b is 1x4). But that's somewhat arguable.</p>", "body_text": "OS Platform and Distribution (e.g., Linux Ubuntu 16.04): archlinux\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.3.0-rc2-20-g0787eee 1.3.0\nPython version: 3.6\nCUDA/cuDNN version: 8.0/6.0\n\nimport numpy as np\nimport tensorflow as tf\nm = tf.placeholder(tf.bool, shape=[None, 1], name='m')\nb = tf.placeholder(tf.float32, shape=[1, None], name='b')\noutput = tf.boolean_mask(b, m)\nmask = [[True],[True],[True],[True],[True]]\ny = np.random.rand(1, 4)\n\nwith tf.Session() as sess:\n    print(y)\n    print(sess.run(output, feed_dict={m: mask, b:y}))\nThe code runs, while I expect an index out-of-bound error.\nIn fact, even when mask is a 4x1 boolean, I still expect an error (since b is 1x4). But that's somewhat arguable.", "body": "- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: archlinux\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.3.0-rc2-20-g0787eee 1.3.0\r\n- **Python version**: 3.6\r\n- **CUDA/cuDNN version**: 8.0/6.0\r\n\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\nm = tf.placeholder(tf.bool, shape=[None, 1], name='m')\r\nb = tf.placeholder(tf.float32, shape=[1, None], name='b')\r\noutput = tf.boolean_mask(b, m)\r\nmask = [[True],[True],[True],[True],[True]]\r\ny = np.random.rand(1, 4)\r\n\r\nwith tf.Session() as sess:\r\n    print(y)\r\n    print(sess.run(output, feed_dict={m: mask, b:y}))\r\n```\r\n\r\nThe code runs, while I expect an index out-of-bound error.\r\n\r\nIn fact, even when mask is a 4x1 boolean, I still expect an error (since b is 1x4). But that's somewhat arguable."}