{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/255296074", "html_url": "https://github.com/tensorflow/tensorflow/issues/4807#issuecomment-255296074", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4807", "id": 255296074, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTI5NjA3NA==", "user": {"login": "mkolod", "id": 476135, "node_id": "MDQ6VXNlcjQ3NjEzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/476135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkolod", "html_url": "https://github.com/mkolod", "followers_url": "https://api.github.com/users/mkolod/followers", "following_url": "https://api.github.com/users/mkolod/following{/other_user}", "gists_url": "https://api.github.com/users/mkolod/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkolod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkolod/subscriptions", "organizations_url": "https://api.github.com/users/mkolod/orgs", "repos_url": "https://api.github.com/users/mkolod/repos", "events_url": "https://api.github.com/users/mkolod/events{/privacy}", "received_events_url": "https://api.github.com/users/mkolod/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-21T05:21:15Z", "updated_at": "2016-10-21T05:23:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=170179\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jhseu\">@jhseu</a> Also for a quick benchmark, I've done AlexNet profiling, and JPEG decode was consuming about 30% of the CPU time, with Core i7 6 cores fully utilized serving one GTX 1080. AlexNet is a good case here because it's light on GPU compute and exposes inefficiencies elsewhere in the system, such as I/O (frequent gradient updates, lots of disk requests for large datasets read via queues, e.g. ImageNet), etc. JPEG decoding is important here because the GPUs tend to wait for the CPU to finish decoding and so the GPU utilization is low if decoding takes too long. I found that AlexNet training (batch size 128-1,024) could be sped up by 20% on average on above mentioned GTX 1080 via a switch from libjpeg to libjpeg-turbo. This may matter less for say Inception v3 or ResNet-50, but it will still help, particularly in multi-GPU environments which are more CPU-bound for decoding.</p>", "body_text": "@jhseu Also for a quick benchmark, I've done AlexNet profiling, and JPEG decode was consuming about 30% of the CPU time, with Core i7 6 cores fully utilized serving one GTX 1080. AlexNet is a good case here because it's light on GPU compute and exposes inefficiencies elsewhere in the system, such as I/O (frequent gradient updates, lots of disk requests for large datasets read via queues, e.g. ImageNet), etc. JPEG decoding is important here because the GPUs tend to wait for the CPU to finish decoding and so the GPU utilization is low if decoding takes too long. I found that AlexNet training (batch size 128-1,024) could be sped up by 20% on average on above mentioned GTX 1080 via a switch from libjpeg to libjpeg-turbo. This may matter less for say Inception v3 or ResNet-50, but it will still help, particularly in multi-GPU environments which are more CPU-bound for decoding.", "body": "@jhseu Also for a quick benchmark, I've done AlexNet profiling, and JPEG decode was consuming about 30% of the CPU time, with Core i7 6 cores fully utilized serving one GTX 1080. AlexNet is a good case here because it's light on GPU compute and exposes inefficiencies elsewhere in the system, such as I/O (frequent gradient updates, lots of disk requests for large datasets read via queues, e.g. ImageNet), etc. JPEG decoding is important here because the GPUs tend to wait for the CPU to finish decoding and so the GPU utilization is low if decoding takes too long. I found that AlexNet training (batch size 128-1,024) could be sped up by 20% on average on above mentioned GTX 1080 via a switch from libjpeg to libjpeg-turbo. This may matter less for say Inception v3 or ResNet-50, but it will still help, particularly in multi-GPU environments which are more CPU-bound for decoding.\n"}