{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/255294442", "html_url": "https://github.com/tensorflow/tensorflow/issues/4807#issuecomment-255294442", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4807", "id": 255294442, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTI5NDQ0Mg==", "user": {"login": "mkolod", "id": 476135, "node_id": "MDQ6VXNlcjQ3NjEzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/476135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkolod", "html_url": "https://github.com/mkolod", "followers_url": "https://api.github.com/users/mkolod/followers", "following_url": "https://api.github.com/users/mkolod/following{/other_user}", "gists_url": "https://api.github.com/users/mkolod/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkolod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkolod/subscriptions", "organizations_url": "https://api.github.com/users/mkolod/orgs", "repos_url": "https://api.github.com/users/mkolod/repos", "events_url": "https://api.github.com/users/mkolod/events{/privacy}", "received_events_url": "https://api.github.com/users/mkolod/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-21T05:05:46Z", "updated_at": "2016-10-21T05:05:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=170179\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jhseu\">@jhseu</a> Regarding the runtime failure after swapping out the libjpeg v9-based libjpeg.a with libjpeg-turbo based lib (API and ABI-compatible with libjpeg v8), I swapped out both the static lib (compiled with -fPIC) and the headers, the Bazel build completed on my machine, but there's a runtime failure while decoding. There's no clear exception, the queues that run the jpeg decoding just shut down with an OutOfRangeError (must be a silent error). I'm planning to start debugging that tomorrow. Generally, libjpeg-turbo with API and ABI support for libjpeg v8 should be good enough, because libjpeg v9 only added a nonstandard color transform to \"Lossless SmartScale,\" which is neither a community nor industry standard (only supported in libjpeg v9 and no other library or image capture device). See <a href=\"http://www.libjpeg-turbo.org/About/Jpeg-9\" rel=\"nofollow\">here</a> about why libjpeg-turbo only goes until libjpeg v8 support. So, it's a bit odd that there's an issue since unless there's an API incompatibility, libjpeg-turbo is a drop-in for libjpeg. I'll keep you posted what I find and then share a branch on a fork or something. Like I said, my solution may not be ideal, it's tricky dealing with assembly-based builds, and it's tricker still to know what's preferable from the project's overall standards point of view for custom code like this.</p>", "body_text": "@jhseu Regarding the runtime failure after swapping out the libjpeg v9-based libjpeg.a with libjpeg-turbo based lib (API and ABI-compatible with libjpeg v8), I swapped out both the static lib (compiled with -fPIC) and the headers, the Bazel build completed on my machine, but there's a runtime failure while decoding. There's no clear exception, the queues that run the jpeg decoding just shut down with an OutOfRangeError (must be a silent error). I'm planning to start debugging that tomorrow. Generally, libjpeg-turbo with API and ABI support for libjpeg v8 should be good enough, because libjpeg v9 only added a nonstandard color transform to \"Lossless SmartScale,\" which is neither a community nor industry standard (only supported in libjpeg v9 and no other library or image capture device). See here about why libjpeg-turbo only goes until libjpeg v8 support. So, it's a bit odd that there's an issue since unless there's an API incompatibility, libjpeg-turbo is a drop-in for libjpeg. I'll keep you posted what I find and then share a branch on a fork or something. Like I said, my solution may not be ideal, it's tricky dealing with assembly-based builds, and it's tricker still to know what's preferable from the project's overall standards point of view for custom code like this.", "body": "@jhseu Regarding the runtime failure after swapping out the libjpeg v9-based libjpeg.a with libjpeg-turbo based lib (API and ABI-compatible with libjpeg v8), I swapped out both the static lib (compiled with -fPIC) and the headers, the Bazel build completed on my machine, but there's a runtime failure while decoding. There's no clear exception, the queues that run the jpeg decoding just shut down with an OutOfRangeError (must be a silent error). I'm planning to start debugging that tomorrow. Generally, libjpeg-turbo with API and ABI support for libjpeg v8 should be good enough, because libjpeg v9 only added a nonstandard color transform to \"Lossless SmartScale,\" which is neither a community nor industry standard (only supported in libjpeg v9 and no other library or image capture device). See [here](http://www.libjpeg-turbo.org/About/Jpeg-9) about why libjpeg-turbo only goes until libjpeg v8 support. So, it's a bit odd that there's an issue since unless there's an API incompatibility, libjpeg-turbo is a drop-in for libjpeg. I'll keep you posted what I find and then share a branch on a fork or something. Like I said, my solution may not be ideal, it's tricky dealing with assembly-based builds, and it's tricker still to know what's preferable from the project's overall standards point of view for custom code like this.\n"}