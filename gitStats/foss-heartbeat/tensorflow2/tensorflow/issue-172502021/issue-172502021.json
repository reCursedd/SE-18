{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3957", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3957/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3957/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3957/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3957", "id": 172502021, "node_id": "MDU6SXNzdWUxNzI1MDIwMjE=", "number": 3957, "title": "Optimizer + tf.reduce_prod() + GPU = Cannot assign a device to node 'gradients/Prod_grad/ListDiff'", "user": {"login": "bsautermeister", "id": 2537736, "node_id": "MDQ6VXNlcjI1Mzc3MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2537736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsautermeister", "html_url": "https://github.com/bsautermeister", "followers_url": "https://api.github.com/users/bsautermeister/followers", "following_url": "https://api.github.com/users/bsautermeister/following{/other_user}", "gists_url": "https://api.github.com/users/bsautermeister/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsautermeister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsautermeister/subscriptions", "organizations_url": "https://api.github.com/users/bsautermeister/orgs", "repos_url": "https://api.github.com/users/bsautermeister/repos", "events_url": "https://api.github.com/users/bsautermeister/events{/privacy}", "received_events_url": "https://api.github.com/users/bsautermeister/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2016-08-22T16:55:20Z", "updated_at": "2018-07-20T02:47:03Z", "closed_at": "2016-09-06T18:19:04Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: <em>Ubuntu 14.4.5 LTS</em></p>\n<p>Installed version of CUDA and cuDNN:<br>\n<em>CUDA 7.5.18</em> and <em>cuDNN 4.0.7</em></p>\n<pre><code>-rw-r--r-- 1 root root 322936 Aug 15  2015 libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jul 12 08:24 libcudart.so -&gt; libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jul 12 08:24 libcudart.so.7.5 -&gt; libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 383336 Aug 15  2015 libcudart.so.7.5.18\n-rw-r--r-- 1 root root 720192 Aug 15  2015 libcudart_static.a\n\n-rw-r--r-- 1 sauterme tumuser        0 Aug 22 18:29 libcudart.so.7.5\n-rw-r--r-- 1 sauterme tumuser        0 Aug 22 18:29 libcudart.so.7.5.18\nlrwxrwxrwx 1 sauterme tumuser       13 Feb  9  2016 libcudnn.so -&gt; libcudnn.so.4\nlrwxrwxrwx 1 sauterme tumuser       17 Feb  9  2016 libcudnn.so.4 -&gt; libcudnn.so.4.0.7\n-rwxr-xr-x 1 sauterme tumuser 61453024 Feb  8  2016 libcudnn.so.4.0.7\n-rw-r--r-- 1 sauterme tumuser 62025862 Feb  8  2016 libcudnn_static.a\n</code></pre>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>Which pip package you installed:<br>\npip package version 0.10 for Python 2.7 with GPU support:<br>\n<em><a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl</a></em></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.<br>\n<em>0.10.0rc0</em></li>\n</ol>\n<h3>Steps to reproduce</h3>\n<ol>\n<li>\n<p>Use a system with GPU</p>\n</li>\n<li>\n<p>Use this code snippet</p>\n<pre><code>import tensorflow as tf\n\ng = tf.Graph()\nwith g.as_default():\n    with tf.Session(config=tf.ConfigProto(log_device_placement=True)) as sess:\n\n        with tf.device('/gpu:0'):\n\n            a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\n            b = tf.Variable([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]], name='b')\n\n            c = tf.matmul(a, b)\n            res = tf.reduce_prod(c)\n\n            #with tf.device('/cpu:0'): # &lt;&lt;&lt; adding this solves the issue!\n            train_op = tf.train.AdagradOptimizer(1e-3).minimize(res)\n\n        sess.run(tf.initialize_all_variables())    \n\n        print sess.run(res)\n        print sess.run(train_op)\n\n</code></pre>\n</li>\n<li>\n<p>You will get an InvalidArgumentError:<br>\n_InvalidArgumentError: Cannot assign a device to node 'gradients/Prod_grad/ListDiff': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.<br>\n[[Node: gradients/Prod_grad/ListDiff = ListDiff[T=DT_INT32, _device=\"/device:GPU:0\"](gradients/Prod_grad/range_1, Const)]]<br>\nCaused by op u'gradients/Prod_grad/ListDiff', defined at:<br>\nFile \"/usr/lib/python2.7/runpy.py\", line 162, in _run_module_as_main<br>\n\"<strong>main</strong>\", fname, loader, pkg_name)<br>\nFile \"/usr/lib/python2.7/runpy.py\", line 72, in <em>run_code<br>\nexec code in run_globals</em></p>\n</li>\n<li>\n<p>Cause of the issue: tf.reduce_prod() when running the train_op. So, the problem takes place while back-propagation through this op.</p>\n</li>\n</ol>\n<h3>What have you tried?</h3>\n<ol>\n<li>\n<p>Wrapping the tf.reduce_prod() with tf.device('/cpu:0'):</p>\n<p>Result: still getting this error!</p>\n</li>\n<li>\n<p>Exchangeing tf.reduce_prod() with other reduce_*() ops:</p>\n<p>Result: no error!</p>\n</li>\n<li>\n<p>Wrapping the Optimizer with  tf.device('/cpu:0'):</p>\n<p><strong>Result: Solves the error!</strong></p>\n</li>\n</ol>", "body_text": "Environment info\nOperating System: Ubuntu 14.4.5 LTS\nInstalled version of CUDA and cuDNN:\nCUDA 7.5.18 and cuDNN 4.0.7\n-rw-r--r-- 1 root root 322936 Aug 15  2015 libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jul 12 08:24 libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jul 12 08:24 libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 383336 Aug 15  2015 libcudart.so.7.5.18\n-rw-r--r-- 1 root root 720192 Aug 15  2015 libcudart_static.a\n\n-rw-r--r-- 1 sauterme tumuser        0 Aug 22 18:29 libcudart.so.7.5\n-rw-r--r-- 1 sauterme tumuser        0 Aug 22 18:29 libcudart.so.7.5.18\nlrwxrwxrwx 1 sauterme tumuser       13 Feb  9  2016 libcudnn.so -> libcudnn.so.4\nlrwxrwxrwx 1 sauterme tumuser       17 Feb  9  2016 libcudnn.so.4 -> libcudnn.so.4.0.7\n-rwxr-xr-x 1 sauterme tumuser 61453024 Feb  8  2016 libcudnn.so.4.0.7\n-rw-r--r-- 1 sauterme tumuser 62025862 Feb  8  2016 libcudnn_static.a\n\nIf installed from binary pip package, provide:\n\nWhich pip package you installed:\npip package version 0.10 for Python 2.7 with GPU support:\nhttps://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n0.10.0rc0\n\nSteps to reproduce\n\n\nUse a system with GPU\n\n\nUse this code snippet\nimport tensorflow as tf\n\ng = tf.Graph()\nwith g.as_default():\n    with tf.Session(config=tf.ConfigProto(log_device_placement=True)) as sess:\n\n        with tf.device('/gpu:0'):\n\n            a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\n            b = tf.Variable([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]], name='b')\n\n            c = tf.matmul(a, b)\n            res = tf.reduce_prod(c)\n\n            #with tf.device('/cpu:0'): # <<< adding this solves the issue!\n            train_op = tf.train.AdagradOptimizer(1e-3).minimize(res)\n\n        sess.run(tf.initialize_all_variables())    \n\n        print sess.run(res)\n        print sess.run(train_op)\n\n\n\n\nYou will get an InvalidArgumentError:\n_InvalidArgumentError: Cannot assign a device to node 'gradients/Prod_grad/ListDiff': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n[[Node: gradients/Prod_grad/ListDiff = ListDiff[T=DT_INT32, _device=\"/device:GPU:0\"](gradients/Prod_grad/range_1, Const)]]\nCaused by op u'gradients/Prod_grad/ListDiff', defined at:\nFile \"/usr/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\n\"main\", fname, loader, pkg_name)\nFile \"/usr/lib/python2.7/runpy.py\", line 72, in run_code\nexec code in run_globals\n\n\nCause of the issue: tf.reduce_prod() when running the train_op. So, the problem takes place while back-propagation through this op.\n\n\nWhat have you tried?\n\n\nWrapping the tf.reduce_prod() with tf.device('/cpu:0'):\nResult: still getting this error!\n\n\nExchangeing tf.reduce_prod() with other reduce_*() ops:\nResult: no error!\n\n\nWrapping the Optimizer with  tf.device('/cpu:0'):\nResult: Solves the error!", "body": "### Environment info\n\nOperating System: _Ubuntu 14.4.5 LTS_\n\nInstalled version of CUDA and cuDNN: \n_CUDA 7.5.18_ and _cuDNN 4.0.7_\n\n```\n-rw-r--r-- 1 root root 322936 Aug 15  2015 libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jul 12 08:24 libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jul 12 08:24 libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 383336 Aug 15  2015 libcudart.so.7.5.18\n-rw-r--r-- 1 root root 720192 Aug 15  2015 libcudart_static.a\n\n-rw-r--r-- 1 sauterme tumuser        0 Aug 22 18:29 libcudart.so.7.5\n-rw-r--r-- 1 sauterme tumuser        0 Aug 22 18:29 libcudart.so.7.5.18\nlrwxrwxrwx 1 sauterme tumuser       13 Feb  9  2016 libcudnn.so -> libcudnn.so.4\nlrwxrwxrwx 1 sauterme tumuser       17 Feb  9  2016 libcudnn.so.4 -> libcudnn.so.4.0.7\n-rwxr-xr-x 1 sauterme tumuser 61453024 Feb  8  2016 libcudnn.so.4.0.7\n-rw-r--r-- 1 sauterme tumuser 62025862 Feb  8  2016 libcudnn_static.a\n```\n\nIf installed from binary pip package, provide:\n1. Which pip package you installed:\n   pip package version 0.10 for Python 2.7 with GPU support:\n   _https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl_\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n   _0.10.0rc0_\n### Steps to reproduce\n1. Use a system with GPU\n2. Use this code snippet\n   \n   ```\n   import tensorflow as tf\n   \n   g = tf.Graph()\n   with g.as_default():\n       with tf.Session(config=tf.ConfigProto(log_device_placement=True)) as sess:\n   \n           with tf.device('/gpu:0'):\n   \n               a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\n               b = tf.Variable([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]], name='b')\n   \n               c = tf.matmul(a, b)\n               res = tf.reduce_prod(c)\n   \n               #with tf.device('/cpu:0'): # <<< adding this solves the issue!\n               train_op = tf.train.AdagradOptimizer(1e-3).minimize(res)\n   \n           sess.run(tf.initialize_all_variables())    \n   \n           print sess.run(res)\n           print sess.run(train_op)\n   \n   ```\n3. You will get an InvalidArgumentError:\n   _InvalidArgumentError: Cannot assign a device to node 'gradients/Prod_grad/ListDiff': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n    [[Node: gradients/Prod_grad/ListDiff = ListDiff[T=DT_INT32, _device=\"/device:GPU:0\"](gradients/Prod_grad/range_1, Const)]]\n   Caused by op u'gradients/Prod_grad/ListDiff', defined at:\n   File \"/usr/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\n     \"__main__\", fname, loader, pkg_name)\n   File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n     exec code in run_globals_ \n4. Cause of the issue: tf.reduce_prod() when running the train_op. So, the problem takes place while back-propagation through this op.\n### What have you tried?\n1. Wrapping the tf.reduce_prod() with tf.device('/cpu:0'):\n   \n   Result: still getting this error!\n2. Exchangeing tf.reduce_prod() with other reduce_*() ops:\n   \n   Result: no error!\n3. Wrapping the Optimizer with  tf.device('/cpu:0'):\n   \n   **Result: Solves the error!**\n"}