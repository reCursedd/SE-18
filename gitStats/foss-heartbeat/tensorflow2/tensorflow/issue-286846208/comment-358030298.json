{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/358030298", "html_url": "https://github.com/tensorflow/tensorflow/issues/15956#issuecomment-358030298", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15956", "id": 358030298, "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODAzMDI5OA==", "user": {"login": "andrehentz", "id": 25754898, "node_id": "MDQ6VXNlcjI1NzU0ODk4", "avatar_url": "https://avatars3.githubusercontent.com/u/25754898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrehentz", "html_url": "https://github.com/andrehentz", "followers_url": "https://api.github.com/users/andrehentz/followers", "following_url": "https://api.github.com/users/andrehentz/following{/other_user}", "gists_url": "https://api.github.com/users/andrehentz/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrehentz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrehentz/subscriptions", "organizations_url": "https://api.github.com/users/andrehentz/orgs", "repos_url": "https://api.github.com/users/andrehentz/repos", "events_url": "https://api.github.com/users/andrehentz/events{/privacy}", "received_events_url": "https://api.github.com/users/andrehentz/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-16T17:00:31Z", "updated_at": "2018-01-16T17:00:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p>We are working on scripting this step. For now, you can try placing the following script in tensorflow/contrib/lite/java. You should be able to invoke it from your toplevel tensorflow dir.</p>\n<pre><code>#!/bin/bash\n# Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\nset -e\nset -x\n\nTMPDIR=`mktemp -d`\ntrap \"rm -rf $TMPDIR\" EXIT\n\nVERSION=1.0\n\nBUILDER=bazel\nBASEDIR=tensorflow/contrib/lite\nCROSSTOOL=\"//external:android/crosstool\"\nHOST_CROSSTOOL=\"@bazel_tools//tools/cpp:toolchain\"\n\nBUILD_OPTS=\"--cxxopt=--std=c++11 -c opt\"\nCROSSTOOL_OPTS=\"--crosstool_top=$CROSSTOOL --host_crosstool_top=$HOST_CROSSTOOL\"\n\ntest -d $BASEDIR || (echo \"Aborting: not at top-level build directory\"; exit 1)\n\nfunction build_basic_aar() {\n  local OUTDIR=$1\n  $BUILDER build $BUILD_OPTS $BASEDIR/java:tensorflowlite.aar\n  unzip -d $OUTDIR $BUILDER-bin/$BASEDIR/java/tensorflowlite.aar\n  # targetSdkVersion is here to prevent the app from requesting spurious\n  # permissions, such as permission to make phone calls. It worked for v1.0,\n  # but minSdkVersion might be the preferred way to handle this.\n  sed -i -e 's/&lt;application&gt;/&lt;uses-sdk android:targetSdkVersion=\"25\"\\/&gt;&lt;application&gt;/' $OUTDIR/AndroidManifest.xml\n}\n\nfunction build_arch() {\n  local ARCH=$1\n  local CONFIG=$2\n  local OUTDIR=$3\n  mkdir -p $OUTDIR/jni/$ARCH/\n  $BUILDER build $BUILD_OPTS $CROSSTOOL_OPTS --cpu=$CONFIG \\\n    $BASEDIR/java:libtensorflowlite_jni.so\n  cp $BUILDER-bin/$BASEDIR/java/libtensorflowlite_jni.so $OUTDIR/jni/$ARCH/\n}\n\nrm -rf $TMPDIR\nmkdir -p $TMPDIR/jni\n\nbuild_basic_aar $TMPDIR\nbuild_arch arm64-v8a arm64-v8a $TMPDIR\nbuild_arch armeabi-v7a armeabi-v7a $TMPDIR\nbuild_arch x86 x86 $TMPDIR\nbuild_arch x86_64 x86_64 $TMPDIR\n\nAAR_FILE=`realpath tflite-${VERSION}.aar`\n(cd $TMPDIR &amp;&amp; zip $AAR_FILE -r *)\necho \"New AAR file is $AAR_FILE\"\n</code></pre>", "body_text": "We are working on scripting this step. For now, you can try placing the following script in tensorflow/contrib/lite/java. You should be able to invoke it from your toplevel tensorflow dir.\n#!/bin/bash\n# Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\nset -e\nset -x\n\nTMPDIR=`mktemp -d`\ntrap \"rm -rf $TMPDIR\" EXIT\n\nVERSION=1.0\n\nBUILDER=bazel\nBASEDIR=tensorflow/contrib/lite\nCROSSTOOL=\"//external:android/crosstool\"\nHOST_CROSSTOOL=\"@bazel_tools//tools/cpp:toolchain\"\n\nBUILD_OPTS=\"--cxxopt=--std=c++11 -c opt\"\nCROSSTOOL_OPTS=\"--crosstool_top=$CROSSTOOL --host_crosstool_top=$HOST_CROSSTOOL\"\n\ntest -d $BASEDIR || (echo \"Aborting: not at top-level build directory\"; exit 1)\n\nfunction build_basic_aar() {\n  local OUTDIR=$1\n  $BUILDER build $BUILD_OPTS $BASEDIR/java:tensorflowlite.aar\n  unzip -d $OUTDIR $BUILDER-bin/$BASEDIR/java/tensorflowlite.aar\n  # targetSdkVersion is here to prevent the app from requesting spurious\n  # permissions, such as permission to make phone calls. It worked for v1.0,\n  # but minSdkVersion might be the preferred way to handle this.\n  sed -i -e 's/<application>/<uses-sdk android:targetSdkVersion=\"25\"\\/><application>/' $OUTDIR/AndroidManifest.xml\n}\n\nfunction build_arch() {\n  local ARCH=$1\n  local CONFIG=$2\n  local OUTDIR=$3\n  mkdir -p $OUTDIR/jni/$ARCH/\n  $BUILDER build $BUILD_OPTS $CROSSTOOL_OPTS --cpu=$CONFIG \\\n    $BASEDIR/java:libtensorflowlite_jni.so\n  cp $BUILDER-bin/$BASEDIR/java/libtensorflowlite_jni.so $OUTDIR/jni/$ARCH/\n}\n\nrm -rf $TMPDIR\nmkdir -p $TMPDIR/jni\n\nbuild_basic_aar $TMPDIR\nbuild_arch arm64-v8a arm64-v8a $TMPDIR\nbuild_arch armeabi-v7a armeabi-v7a $TMPDIR\nbuild_arch x86 x86 $TMPDIR\nbuild_arch x86_64 x86_64 $TMPDIR\n\nAAR_FILE=`realpath tflite-${VERSION}.aar`\n(cd $TMPDIR && zip $AAR_FILE -r *)\necho \"New AAR file is $AAR_FILE\"", "body": "We are working on scripting this step. For now, you can try placing the following script in tensorflow/contrib/lite/java. You should be able to invoke it from your toplevel tensorflow dir.\r\n\r\n```\r\n#!/bin/bash\r\n# Copyright 2017 The TensorFlow Authors. All Rights Reserved.\r\n#\r\n# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n# you may not use this file except in compliance with the License.\r\n# You may obtain a copy of the License at\r\n#\r\n#     http://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n# Unless required by applicable law or agreed to in writing, software\r\n# distributed under the License is distributed on an \"AS IS\" BASIS,\r\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n# See the License for the specific language governing permissions and\r\n# limitations under the License.\r\n# ==============================================================================\r\nset -e\r\nset -x\r\n\r\nTMPDIR=`mktemp -d`\r\ntrap \"rm -rf $TMPDIR\" EXIT\r\n\r\nVERSION=1.0\r\n\r\nBUILDER=bazel\r\nBASEDIR=tensorflow/contrib/lite\r\nCROSSTOOL=\"//external:android/crosstool\"\r\nHOST_CROSSTOOL=\"@bazel_tools//tools/cpp:toolchain\"\r\n\r\nBUILD_OPTS=\"--cxxopt=--std=c++11 -c opt\"\r\nCROSSTOOL_OPTS=\"--crosstool_top=$CROSSTOOL --host_crosstool_top=$HOST_CROSSTOOL\"\r\n\r\ntest -d $BASEDIR || (echo \"Aborting: not at top-level build directory\"; exit 1)\r\n\r\nfunction build_basic_aar() {\r\n  local OUTDIR=$1\r\n  $BUILDER build $BUILD_OPTS $BASEDIR/java:tensorflowlite.aar\r\n  unzip -d $OUTDIR $BUILDER-bin/$BASEDIR/java/tensorflowlite.aar\r\n  # targetSdkVersion is here to prevent the app from requesting spurious\r\n  # permissions, such as permission to make phone calls. It worked for v1.0,\r\n  # but minSdkVersion might be the preferred way to handle this.\r\n  sed -i -e 's/<application>/<uses-sdk android:targetSdkVersion=\"25\"\\/><application>/' $OUTDIR/AndroidManifest.xml\r\n}\r\n\r\nfunction build_arch() {\r\n  local ARCH=$1\r\n  local CONFIG=$2\r\n  local OUTDIR=$3\r\n  mkdir -p $OUTDIR/jni/$ARCH/\r\n  $BUILDER build $BUILD_OPTS $CROSSTOOL_OPTS --cpu=$CONFIG \\\r\n    $BASEDIR/java:libtensorflowlite_jni.so\r\n  cp $BUILDER-bin/$BASEDIR/java/libtensorflowlite_jni.so $OUTDIR/jni/$ARCH/\r\n}\r\n\r\nrm -rf $TMPDIR\r\nmkdir -p $TMPDIR/jni\r\n\r\nbuild_basic_aar $TMPDIR\r\nbuild_arch arm64-v8a arm64-v8a $TMPDIR\r\nbuild_arch armeabi-v7a armeabi-v7a $TMPDIR\r\nbuild_arch x86 x86 $TMPDIR\r\nbuild_arch x86_64 x86_64 $TMPDIR\r\n\r\nAAR_FILE=`realpath tflite-${VERSION}.aar`\r\n(cd $TMPDIR && zip $AAR_FILE -r *)\r\necho \"New AAR file is $AAR_FILE\"\r\n```\r\n"}