{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/244244506", "html_url": "https://github.com/tensorflow/tensorflow/pull/4145#issuecomment-244244506", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4145", "id": 244244506, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDI0NDUwNg==", "user": {"login": "jmhodges", "id": 598, "node_id": "MDQ6VXNlcjU5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmhodges", "html_url": "https://github.com/jmhodges", "followers_url": "https://api.github.com/users/jmhodges/followers", "following_url": "https://api.github.com/users/jmhodges/following{/other_user}", "gists_url": "https://api.github.com/users/jmhodges/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmhodges/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmhodges/subscriptions", "organizations_url": "https://api.github.com/users/jmhodges/orgs", "repos_url": "https://api.github.com/users/jmhodges/repos", "events_url": "https://api.github.com/users/jmhodges/events{/privacy}", "received_events_url": "https://api.github.com/users/jmhodges/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-01T23:39:11Z", "updated_at": "2016-09-01T23:39:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yeah, ugh, it looks like the DYLD_LIBRARY_PATH isn't being seen by crosstool_wrapper_driver_is_not_gcc.tpl</p>\n<p>I put</p>\n<pre><code>pa = os.getenv(\"DYLD_LIBRARY_PATH\")\nprint('DYLDCUDA')\nprint(pa)\n</code></pre>\n<p>return before the <code>return subprocess.call([CPU_COMPILER] + cpu_compiler_flags)</code> and its spitting out <code>None</code>s when it is for sure set in my shell.</p>\n<p>This happens on OS X 10.11 El Capitan when your code gets run through binaries that live in /usr/bin (and, I believe, /bin) when you have System Integrity Protection on (which it is by default).</p>\n<p>I'm trying to come up with what binary that's the problem. Current hypothesis is bash</p>", "body_text": "Yeah, ugh, it looks like the DYLD_LIBRARY_PATH isn't being seen by crosstool_wrapper_driver_is_not_gcc.tpl\nI put\npa = os.getenv(\"DYLD_LIBRARY_PATH\")\nprint('DYLDCUDA')\nprint(pa)\n\nreturn before the return subprocess.call([CPU_COMPILER] + cpu_compiler_flags) and its spitting out Nones when it is for sure set in my shell.\nThis happens on OS X 10.11 El Capitan when your code gets run through binaries that live in /usr/bin (and, I believe, /bin) when you have System Integrity Protection on (which it is by default).\nI'm trying to come up with what binary that's the problem. Current hypothesis is bash", "body": "Yeah, ugh, it looks like the DYLD_LIBRARY_PATH isn't being seen by crosstool_wrapper_driver_is_not_gcc.tpl\n\nI put\n\n```\npa = os.getenv(\"DYLD_LIBRARY_PATH\")\nprint('DYLDCUDA')\nprint(pa)\n```\n\nreturn before the `return subprocess.call([CPU_COMPILER] + cpu_compiler_flags)` and its spitting out `None`s when it is for sure set in my shell.\n\nThis happens on OS X 10.11 El Capitan when your code gets run through binaries that live in /usr/bin (and, I believe, /bin) when you have System Integrity Protection on (which it is by default).\n\nI'm trying to come up with what binary that's the problem. Current hypothesis is bash\n"}