{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/390869637", "html_url": "https://github.com/tensorflow/tensorflow/pull/18224#issuecomment-390869637", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18224", "id": 390869637, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDg2OTYzNw==", "user": {"login": "galv", "id": 4767568, "node_id": "MDQ6VXNlcjQ3Njc1Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4767568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galv", "html_url": "https://github.com/galv", "followers_url": "https://api.github.com/users/galv/followers", "following_url": "https://api.github.com/users/galv/following{/other_user}", "gists_url": "https://api.github.com/users/galv/gists{/gist_id}", "starred_url": "https://api.github.com/users/galv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galv/subscriptions", "organizations_url": "https://api.github.com/users/galv/orgs", "repos_url": "https://api.github.com/users/galv/repos", "events_url": "https://api.github.com/users/galv/events{/privacy}", "received_events_url": "https://api.github.com/users/galv/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-22T05:42:44Z", "updated_at": "2018-05-22T05:42:44Z", "author_association": "NONE", "body_html": "<p>We need to get the libavro.so binary blob out of there.</p>\n<p>I've seen a couple of ways that tensorflow specifies external dependencies.</p>\n<ol>\n<li>TF_USE_MPI and MPI_HOME: The user must specify the location of a pre-built MPI install directory.</li>\n<li>Kafka and NCCLv1: Build locally. Probably pretty reasonable if you pin the dependency version.</li>\n<li>TF_USE_HDFS: Tensorflow contains a copy-pasted hdfs.h header file, but doesn't link to libhdfs.so until runtime. I consider this pretty ugly since it is possible that hdfs.h could change upstream.</li>\n<li>I've also seen a pre-built artifact of a dependency be downloaded as well.</li>\n</ol>\n<p>I consider (1) easiest. I expect (2) to be harder since you have to consider cross-platform considerations. I dislike (3). (4) would be nice, but unfortunately, <a href=\"https://github.com/apache/avro\">https://github.com/apache/avro</a> does not make binary releases.</p>\n<p>If a tensorflow maintainer can comment on a preferred method to specify an external dependency, that would be helpful.</p>", "body_text": "We need to get the libavro.so binary blob out of there.\nI've seen a couple of ways that tensorflow specifies external dependencies.\n\nTF_USE_MPI and MPI_HOME: The user must specify the location of a pre-built MPI install directory.\nKafka and NCCLv1: Build locally. Probably pretty reasonable if you pin the dependency version.\nTF_USE_HDFS: Tensorflow contains a copy-pasted hdfs.h header file, but doesn't link to libhdfs.so until runtime. I consider this pretty ugly since it is possible that hdfs.h could change upstream.\nI've also seen a pre-built artifact of a dependency be downloaded as well.\n\nI consider (1) easiest. I expect (2) to be harder since you have to consider cross-platform considerations. I dislike (3). (4) would be nice, but unfortunately, https://github.com/apache/avro does not make binary releases.\nIf a tensorflow maintainer can comment on a preferred method to specify an external dependency, that would be helpful.", "body": "We need to get the libavro.so binary blob out of there.\r\n\r\nI've seen a couple of ways that tensorflow specifies external dependencies.\r\n\r\n1) TF_USE_MPI and MPI_HOME: The user must specify the location of a pre-built MPI install directory.\r\n2) Kafka and NCCLv1: Build locally. Probably pretty reasonable if you pin the dependency version.\r\n3) TF_USE_HDFS: Tensorflow contains a copy-pasted hdfs.h header file, but doesn't link to libhdfs.so until runtime. I consider this pretty ugly since it is possible that hdfs.h could change upstream.\r\n4) I've also seen a pre-built artifact of a dependency be downloaded as well.\r\n\r\nI consider (1) easiest. I expect (2) to be harder since you have to consider cross-platform considerations. I dislike (3). (4) would be nice, but unfortunately, https://github.com/apache/avro does not make binary releases.\r\n\r\nIf a tensorflow maintainer can comment on a preferred method to specify an external dependency, that would be helpful."}