{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/226751478", "pull_request_review_id": 166657104, "id": 226751478, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjc1MTQ3OA==", "diff_hunk": "@@ -0,0 +1,419 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include <avro.h>\n+\n+#include \"tensorflow/core/framework/dataset.h\"\n+#include \"tensorflow/core/framework/common_shape_fns.h\"\n+#include \"tensorflow/core/framework/partial_tensor_shape.h\"\n+#include \"tensorflow/core/framework/shape_inference.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/lib/core/errors.h\"\n+#include \"tensorflow/core/lib/io/buffered_inputstream.h\"\n+#include \"tensorflow/core/lib/io/inputbuffer.h\"\n+\n+// As boiler plate I used\n+// https://github.com/tensorflow/tensorflow/core/kernels/reader_dataset_ops.cc\n+// https://github.com/tensorflow/tensorflow/blob/v1.4.1/tensorflow/core/ops/dataset_ops.cc\n+// (register op)\n+\n+namespace tensorflow {\n+\n+// Register the avro record dataset operator\n+REGISTER_OP(\"AvroRecordDataset\")\n+    .Input(\"filenames: string\")\n+    .Input(\"schema: string\")\n+    .Input(\"buffer_size: int64\")\n+    .Output(\"handle: variant\")\n+    .SetIsStateful()\n+    .SetShapeFn(shape_inference::ScalarShape)\n+    .Doc(R\"doc(\n+Creates a dataset that emits the avro records from one or more files.\n+filenames: A scalar or vector containing the name(s) of the file(s) to be\n+  read.\n+schema: A string used that is used for schema resolution.\n+)doc\");\n+\n+// This class represents the avro reader options\n+class AvroReaderOptions {\n+ public:\n+  // Creates avro reader options with the given schema and buffer size.\n+  //\n+  static AvroReaderOptions CreateAvroReaderOptions(const string& schema,\n+                                                   int64 buffer_size) {\n+    AvroReaderOptions options;\n+    options.schema = schema;\n+    options.buffer_size = buffer_size;\n+    return options;\n+  }\n+  string schema;\n+  int64 buffer_size =\n+      256 * 1024;  // 256 kB as default but this can be overwritten by the user\n+};\n+\n+void AvroFileReaderDestructor(avro_file_reader_t reader) {\n+  // I don't think we need the CHECK_NOTNULL\n+  CHECK_GE(avro_file_reader_close(reader), 0);\n+}\n+\n+void AvroSchemaDestructor(avro_schema_t schema) {\n+  // Confusingly, it appears that the avro_file_reader_t creates its\n+  // own reference to this schema, so the schema is not really\n+  // \"uniquely\" owned...\n+  CHECK_GE(avro_schema_decref(schema), 0);\n+};\n+\n+void AvroValueInterfaceDestructor(avro_value_iface_t * iface)  {\n+  avro_value_iface_decref(iface);\n+}\n+\n+\n+// This reader is not thread safe\n+class SequentialAvroRecordReader {\n+ public:\n+  // Construct a sequential avro record reader\n+  //\n+  // 'file' is the random access file\n+  //\n+  // 'file_size' is the size of the file\n+  //\n+  // 'filename' is the name of the file\n+  //\n+  // 'options' are avro reader options\n+  //\n+  SequentialAvroRecordReader(RandomAccessFile* file, const uint64 file_size,\n+                             const string& filename,\n+                             const AvroReaderOptions& options =\n+                                 AvroReaderOptions())\n+    : initialized_(false),\n+      filename_(filename),\n+      file_buffer_(file_size, '\\0'),\n+      input_buffer_size_(options.buffer_size),\n+      input_buffer_(new io::InputBuffer(file, options.buffer_size)),\n+      reader_schema_str_(options.schema),\n+      file_reader_(nullptr, AvroFileReaderDestructor),\n+      reader_schema_(nullptr, AvroSchemaDestructor),\n+      writer_schema_(nullptr, AvroSchemaDestructor),\n+      p_reader_iface_(nullptr, AvroValueInterfaceDestructor),\n+      p_writer_iface_(nullptr, AvroValueInterfaceDestructor) { }", "path": "tensorflow/contrib/avro/ops/avro_record_dataset.cc", "position": null, "original_position": 110, "commit_id": "bdf790d5c888e59d593230286edaaf5314daaee5", "original_commit_id": "d1be9e544357e72eb37f6adb626670f745e79a9b", "user": {"login": "fraudies", "id": 1770877, "node_id": "MDQ6VXNlcjE3NzA4Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1770877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fraudies", "html_url": "https://github.com/fraudies", "followers_url": "https://api.github.com/users/fraudies/followers", "following_url": "https://api.github.com/users/fraudies/following{/other_user}", "gists_url": "https://api.github.com/users/fraudies/gists{/gist_id}", "starred_url": "https://api.github.com/users/fraudies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fraudies/subscriptions", "organizations_url": "https://api.github.com/users/fraudies/orgs", "repos_url": "https://api.github.com/users/fraudies/repos", "events_url": "https://api.github.com/users/fraudies/events{/privacy}", "received_events_url": "https://api.github.com/users/fraudies/received_events", "type": "User", "site_admin": false}, "body": "Added line, removed space", "created_at": "2018-10-19T19:04:10Z", "updated_at": "2018-10-22T21:28:38Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18224#discussion_r226751478", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18224", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/226751478"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18224#discussion_r226751478"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18224"}}, "body_html": "<p>Added line, removed space</p>", "body_text": "Added line, removed space", "in_reply_to_id": 209778525}