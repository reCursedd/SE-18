{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20191", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20191/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20191/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20191/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20191", "id": 334570747, "node_id": "MDU6SXNzdWUzMzQ1NzA3NDc=", "number": 20191, "title": "`tf.contrib.data.sliding_window_batch` cannot slide further than the window size", "user": {"login": "danielwatson6", "id": 3270063, "node_id": "MDQ6VXNlcjMyNzAwNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3270063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielwatson6", "html_url": "https://github.com/danielwatson6", "followers_url": "https://api.github.com/users/danielwatson6/followers", "following_url": "https://api.github.com/users/danielwatson6/following{/other_user}", "gists_url": "https://api.github.com/users/danielwatson6/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielwatson6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielwatson6/subscriptions", "organizations_url": "https://api.github.com/users/danielwatson6/orgs", "repos_url": "https://api.github.com/users/danielwatson6/repos", "events_url": "https://api.github.com/users/danielwatson6/events{/privacy}", "received_events_url": "https://api.github.com/users/danielwatson6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-21T16:35:54Z", "updated_at": "2018-06-22T19:00:26Z", "closed_at": "2018-06-22T19:00:26Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code: yes</strong>:</li>\n<li><strong>OS Platform and Distribution: macOS High Sierra 10.13.4</strong>:</li>\n<li><strong>TensorFlow installed from: binary</strong>:</li>\n<li><strong>TensorFlow version: 1.8.0</strong>:</li>\n<li><strong>Python version: 3.6.5</strong>:</li>\n<li><strong>CUDA/cuDNN version, GPU info: N/A; not using GPU support</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Problem</h3>\n<p><code>tf.contrib.data.sliding_window_batch</code> requires that the <code>stride</code> argument lie in the range <code>[1, window_size)</code>. This limits potential uses for this function. For example; consider the following scenario where the model is fed an element and must predict the previous and next element. Here is the description of the task more precisely:</p>\n<p>We have data elements <code>(e0, e1, e2, ...)</code>. The model has to learn to predict <code>e_{i-1}, e_{i+1}</code> given <code>e_i</code>. To give the model triples of batches from the original sequence <code>(e0, e1, e2, ...)</code>, we could use <code>tf.contrib.data.sliding_window_batch</code> as follows, assuming <code>dataset</code> yields <code>(e0, e1, e_2, ...)</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre>dataset <span class=\"pl-k\">=</span> dataset.apply(<span class=\"pl-v\">window_size</span><span class=\"pl-k\">=</span>batch_size, <span class=\"pl-v\">stride</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> yields ([e_0, ..., e_{b-1}], [e_1, ..., e_b], [e_2, ..., e_{b+1}], ...)</span>\n\ndataset <span class=\"pl-k\">=</span> dataset.apply(<span class=\"pl-v\">window_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>, <span class=\"pl-v\">stride</span><span class=\"pl-k\">=</span>batch_size)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> yields:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> [[e_0, ..., e_{b-1}],     [[  e_b  , ..., e_{2b-1}],</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  [e_1, ...,   e_b  ],  ;   [e_{b+1}, ...,   e_2b  ],  ;  ...</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  [e_2, ..., e_{b+1}]]      [e_{b+2}, ..., e_{2b+1}]]</span></pre></div>\n<p>Notice how the training inputs would be the middle row, and if the stride size were smaller, we would feed the same input-labels triples to the model twice. So the stride size in this case needs to be larger than the window size, but the existing implementation does not allow that.</p>\n<h3>Source code / logs</h3>\n<p>As soon as one attempts to run the iterator within a session, one gets an error log with this relevant line:</p>\n<pre><code>...\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Stride must be in [1, window_size).\n</code></pre>", "body_text": "System information\n\nHave I written custom code: yes:\nOS Platform and Distribution: macOS High Sierra 10.13.4:\nTensorFlow installed from: binary:\nTensorFlow version: 1.8.0:\nPython version: 3.6.5:\nCUDA/cuDNN version, GPU info: N/A; not using GPU support:\nExact command to reproduce:\n\nProblem\ntf.contrib.data.sliding_window_batch requires that the stride argument lie in the range [1, window_size). This limits potential uses for this function. For example; consider the following scenario where the model is fed an element and must predict the previous and next element. Here is the description of the task more precisely:\nWe have data elements (e0, e1, e2, ...). The model has to learn to predict e_{i-1}, e_{i+1} given e_i. To give the model triples of batches from the original sequence (e0, e1, e2, ...), we could use tf.contrib.data.sliding_window_batch as follows, assuming dataset yields (e0, e1, e_2, ...):\ndataset = dataset.apply(window_size=batch_size, stride=1)\n# yields ([e_0, ..., e_{b-1}], [e_1, ..., e_b], [e_2, ..., e_{b+1}], ...)\n\ndataset = dataset.apply(window_size=3, stride=batch_size)\n# yields:\n# [[e_0, ..., e_{b-1}],     [[  e_b  , ..., e_{2b-1}],\n#  [e_1, ...,   e_b  ],  ;   [e_{b+1}, ...,   e_2b  ],  ;  ...\n#  [e_2, ..., e_{b+1}]]      [e_{b+2}, ..., e_{2b+1}]]\nNotice how the training inputs would be the middle row, and if the stride size were smaller, we would feed the same input-labels triples to the model twice. So the stride size in this case needs to be larger than the window size, but the existing implementation does not allow that.\nSource code / logs\nAs soon as one attempts to run the iterator within a session, one gets an error log with this relevant line:\n...\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Stride must be in [1, window_size).", "body": "### System information\r\n- **Have I written custom code: yes**:\r\n- **OS Platform and Distribution: macOS High Sierra 10.13.4**:\r\n- **TensorFlow installed from: binary**:\r\n- **TensorFlow version: 1.8.0**:\r\n- **Python version: 3.6.5**: \r\n- **CUDA/cuDNN version, GPU info: N/A; not using GPU support**:\r\n- **Exact command to reproduce**:\r\n\r\n### Problem\r\n`tf.contrib.data.sliding_window_batch` requires that the `stride` argument lie in the range `[1, window_size)`. This limits potential uses for this function. For example; consider the following scenario where the model is fed an element and must predict the previous and next element. Here is the description of the task more precisely:\r\n\r\nWe have data elements `(e0, e1, e2, ...)`. The model has to learn to predict `e_{i-1}, e_{i+1}` given `e_i`. To give the model triples of batches from the original sequence `(e0, e1, e2, ...)`, we could use `tf.contrib.data.sliding_window_batch` as follows, assuming `dataset` yields `(e0, e1, e_2, ...)`:\r\n\r\n```python\r\ndataset = dataset.apply(window_size=batch_size, stride=1)\r\n# yields ([e_0, ..., e_{b-1}], [e_1, ..., e_b], [e_2, ..., e_{b+1}], ...)\r\n\r\ndataset = dataset.apply(window_size=3, stride=batch_size)\r\n# yields:\r\n# [[e_0, ..., e_{b-1}],     [[  e_b  , ..., e_{2b-1}],\r\n#  [e_1, ...,   e_b  ],  ;   [e_{b+1}, ...,   e_2b  ],  ;  ...\r\n#  [e_2, ..., e_{b+1}]]      [e_{b+2}, ..., e_{2b+1}]]\r\n```\r\n\r\nNotice how the training inputs would be the middle row, and if the stride size were smaller, we would feed the same input-labels triples to the model twice. So the stride size in this case needs to be larger than the window size, but the existing implementation does not allow that.\r\n\r\n### Source code / logs\r\nAs soon as one attempts to run the iterator within a session, one gets an error log with this relevant line:\r\n```\r\n...\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Stride must be in [1, window_size).\r\n```\r\n"}