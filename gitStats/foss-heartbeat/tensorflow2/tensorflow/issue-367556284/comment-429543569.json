{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/429543569", "html_url": "https://github.com/tensorflow/tensorflow/issues/22804#issuecomment-429543569", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22804", "id": 429543569, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTU0MzU2OQ==", "user": {"login": "calid", "id": 494405, "node_id": "MDQ6VXNlcjQ5NDQwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/494405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calid", "html_url": "https://github.com/calid", "followers_url": "https://api.github.com/users/calid/followers", "following_url": "https://api.github.com/users/calid/following{/other_user}", "gists_url": "https://api.github.com/users/calid/gists{/gist_id}", "starred_url": "https://api.github.com/users/calid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calid/subscriptions", "organizations_url": "https://api.github.com/users/calid/orgs", "repos_url": "https://api.github.com/users/calid/repos", "events_url": "https://api.github.com/users/calid/events{/privacy}", "received_events_url": "https://api.github.com/users/calid/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-13T13:50:40Z", "updated_at": "2018-10-13T13:50:40Z", "author_association": "NONE", "body_html": "<p>After digging into this further the specific issue seems to be with using multiprocessing.  Every test that has <code>use_multiprocessing=True</code> hangs for me.  For example <code>test_ordered_enqueuer_processes</code>: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/c19e29306ce1777456b2dbb3a14f511edf7883a8/tensorflow/python/keras/utils/data_utils_test.py#L215-L224\">tensorflow/tensorflow/python/keras/utils/data_utils_test.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 215 to 224\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/c19e29306ce1777456b2dbb3a14f511edf7883a8\">c19e293</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L215\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"215\"></td>\n          <td id=\"LC215\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_ordered_enqueuer_processes</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L216\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"216\"></td>\n          <td id=\"LC216\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   enqueuer <span class=\"pl-k\">=</span> keras.utils.data_utils.OrderedEnqueuer( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L217\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"217\"></td>\n          <td id=\"LC217\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       TestSequence([<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">200</span>, <span class=\"pl-c1\">200</span>, <span class=\"pl-c1\">3</span>]), <span class=\"pl-v\">use_multiprocessing</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L218\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"218\"></td>\n          <td id=\"LC218\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   enqueuer.start(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">10</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L219\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"219\"></td>\n          <td id=\"LC219\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   gen_output <span class=\"pl-k\">=</span> enqueuer.get() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L220\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"220\"></td>\n          <td id=\"LC220\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   acc <span class=\"pl-k\">=</span> [] </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L221\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"221\"></td>\n          <td id=\"LC221\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">100</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L222\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"222\"></td>\n          <td id=\"LC222\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     acc.append(<span class=\"pl-c1\">next</span>(gen_output)[<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>]) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L223\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"223\"></td>\n          <td id=\"LC223\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">self</span>.assertEqual(acc, <span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">100</span>))) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L224\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"224\"></td>\n          <td id=\"LC224\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   enqueuer.stop() </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Specifically, it hangs on <code>queue.get()</code> in <code>data_utils.py</code>: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/c19e29306ce1777456b2dbb3a14f511edf7883a8/tensorflow/python/keras/utils/data_utils.py#L605-L613\">tensorflow/tensorflow/python/keras/utils/data_utils.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 605 to 613\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/c19e29306ce1777456b2dbb3a14f511edf7883a8\">c19e293</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L605\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"605\"></td>\n          <td id=\"LC605\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">try</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L606\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"606\"></td>\n          <td id=\"LC606\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">while</span> <span class=\"pl-c1\">self</span>.is_running(): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L607\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"607\"></td>\n          <td id=\"LC607\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     inputs <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.queue.get(<span class=\"pl-v\">block</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>).get() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L608\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"608\"></td>\n          <td id=\"LC608\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.queue.task_done() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L609\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"609\"></td>\n          <td id=\"LC609\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> inputs <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L610\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"610\"></td>\n          <td id=\"LC610\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-k\">yield</span> inputs </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L611\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"611\"></td>\n          <td id=\"LC611\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">except</span> <span class=\"pl-c1\">Exception</span> <span class=\"pl-k\">as</span> e:  <span class=\"pl-c\"><span class=\"pl-c\">#</span> pylint: disable=broad-except</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L612\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"612\"></td>\n          <td id=\"LC612\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">self</span>.stop() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L613\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"613\"></td>\n          <td id=\"LC613\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   six.raise_from(<span class=\"pl-c1\">StopIteration</span>(e), e) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "After digging into this further the specific issue seems to be with using multiprocessing.  Every test that has use_multiprocessing=True hangs for me.  For example test_ordered_enqueuer_processes: \n  \n    \n      tensorflow/tensorflow/python/keras/utils/data_utils_test.py\n    \n    \n        Lines 215 to 224\n      in\n      c19e293\n    \n    \n    \n    \n\n        \n          \n           def test_ordered_enqueuer_processes(self): \n        \n\n        \n          \n             enqueuer = keras.utils.data_utils.OrderedEnqueuer( \n        \n\n        \n          \n                 TestSequence([3, 200, 200, 3]), use_multiprocessing=True) \n        \n\n        \n          \n             enqueuer.start(3, 10) \n        \n\n        \n          \n             gen_output = enqueuer.get() \n        \n\n        \n          \n             acc = [] \n        \n\n        \n          \n             for _ in range(100): \n        \n\n        \n          \n               acc.append(next(gen_output)[0, 0, 0, 0]) \n        \n\n        \n          \n             self.assertEqual(acc, list(range(100))) \n        \n\n        \n          \n             enqueuer.stop() \n        \n    \n  \n\n\nSpecifically, it hangs on queue.get() in data_utils.py: \n  \n    \n      tensorflow/tensorflow/python/keras/utils/data_utils.py\n    \n    \n        Lines 605 to 613\n      in\n      c19e293\n    \n    \n    \n    \n\n        \n          \n           try: \n        \n\n        \n          \n             while self.is_running(): \n        \n\n        \n          \n               inputs = self.queue.get(block=True).get() \n        \n\n        \n          \n               self.queue.task_done() \n        \n\n        \n          \n               if inputs is not None: \n        \n\n        \n          \n                 yield inputs \n        \n\n        \n          \n           except Exception as e:  # pylint: disable=broad-except \n        \n\n        \n          \n             self.stop() \n        \n\n        \n          \n             six.raise_from(StopIteration(e), e)", "body": "After digging into this further the specific issue seems to be with using multiprocessing.  Every test that has `use_multiprocessing=True` hangs for me.  For example `test_ordered_enqueuer_processes`: https://github.com/tensorflow/tensorflow/blob/c19e29306ce1777456b2dbb3a14f511edf7883a8/tensorflow/python/keras/utils/data_utils_test.py#L215-L224\r\n\r\nSpecifically, it hangs on `queue.get()` in `data_utils.py`: https://github.com/tensorflow/tensorflow/blob/c19e29306ce1777456b2dbb3a14f511edf7883a8/tensorflow/python/keras/utils/data_utils.py#L605-L613"}