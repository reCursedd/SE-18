{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/294265362", "html_url": "https://github.com/tensorflow/tensorflow/issues/9182#issuecomment-294265362", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9182", "id": 294265362, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI2NTM2Mg==", "user": {"login": "qianglan", "id": 4480291, "node_id": "MDQ6VXNlcjQ0ODAyOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4480291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qianglan", "html_url": "https://github.com/qianglan", "followers_url": "https://api.github.com/users/qianglan/followers", "following_url": "https://api.github.com/users/qianglan/following{/other_user}", "gists_url": "https://api.github.com/users/qianglan/gists{/gist_id}", "starred_url": "https://api.github.com/users/qianglan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qianglan/subscriptions", "organizations_url": "https://api.github.com/users/qianglan/orgs", "repos_url": "https://api.github.com/users/qianglan/repos", "events_url": "https://api.github.com/users/qianglan/events{/privacy}", "received_events_url": "https://api.github.com/users/qianglan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-15T01:57:01Z", "updated_at": "2017-04-15T01:57:01Z", "author_association": "NONE", "body_html": "<p>Thanks,</p>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes, see below</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: linux Ubuntu 14.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>:  1.0.0</li>\n<li><strong>Bazel version (if compiling from source)</strong>:0.4.5</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0/5</li>\n<li><strong>GPU model and memory</strong>: K40</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I want to use tensorflow to implement a 3D neural network, so I test conv3d first. I use tf.layers.conv3d to test a 3D convolutional layer. You can refer the source code below, there is one parameter to set for tf.layers.conv3d, which is 'data_format', there are two options for that parameter, one is 'channels_first' , the other is 'channels_last', there is no problem with 'channels_last', however, there are problems when I set 'data_format' to 'channels_first'. The output is like following:</p>\n<p>$python  conv3d_test.py<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally<br>\nTraceback (most recent call last):<br>\nFile \"/home/deng/qianglan/Opensource/3DModelParallel/conv3d_test.py\", line 26, in <br>\ntf.app.run()<br>\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 44, in run<br>\n_sys.exit(main(_sys.argv[:1] + flags_passthrough))<br>\nFile \"/home/deng/qianglan/Opensource/3DModelParallel/conv3d_test.py\", line 23, in main<br>\nrun_benchmark()<br>\nFile \"/home/deng/qianglan/Opensource/3DModelParallel/conv3d_test.py\", line 14, in run_benchmark<br>\ntest_output = tf.layers.conv3d(test_input, filters, kernel_size=(3,3,3), strides=[1, 1,1], padding='SAME', data_format='channels_first', trainable=False)<br>\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/convolutional.py\", line 682, in conv3d<br>\nreturn layer.apply(inputs)<br>\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 303, in apply<br>\nreturn self.<strong>call</strong>(inputs, **kwargs)<br>\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 273, in <strong>call</strong><br>\noutputs = self.call(inputs, **kwargs)<br>\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/convolutional.py\", line 156, in call<br>\ndata_format=utils.convert_data_format(self.data_format, self.rank + 2))<br>\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/utils.py\", line 49, in convert_data_format<br>\nraise ValueError('Data format \"channels_first\" not supported for '<br>\nValueError: Data format \"channels_first\" not supported for inputs with rank 5.</p>\n<p>Process finished with exit code 1</p>\n<h3>Source code / logs</h3>\n<p>import tensorflow as tf</p>\n<p>def run_benchmark():<br>\nwith tf.Graph().as_default():<br>\ninput_shape = [1,64,224,224,224]<br>\ntest_input = tf.Variable(tf.random_normal(input_shape, dtype=tf.float32, stddev=1e-1))<br>\nfilters = 64<br>\nwith tf.variable_scope('test_conv_layer'):<br>\ntest_output = tf.layers.conv3d(test_input, filters, kernel_size=(3,3,3), strides=[1, 1,1],           padding='SAME', data_format='channels_first', trainable=False)</p>\n<pre><code>    init = tf.global_variables_initializer()\n    sess = tf.Session()\n    sess.run(init)\n    result = sess.run(test_output)\n    print result.shape\n</code></pre>\n<p>def main(_):<br>\nrun_benchmark()</p>\n<p>if <strong>name</strong> == '<strong>main</strong>':<br>\ntf.app.run()</p>", "body_text": "Thanks,\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes, see below\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): linux Ubuntu 14.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below):  1.0.0\nBazel version (if compiling from source):0.4.5\nCUDA/cuDNN version: 8.0/5\nGPU model and memory: K40\nExact command to reproduce:\n\nDescribe the problem\nI want to use tensorflow to implement a 3D neural network, so I test conv3d first. I use tf.layers.conv3d to test a 3D convolutional layer. You can refer the source code below, there is one parameter to set for tf.layers.conv3d, which is 'data_format', there are two options for that parameter, one is 'channels_first' , the other is 'channels_last', there is no problem with 'channels_last', however, there are problems when I set 'data_format' to 'channels_first'. The output is like following:\n$python  conv3d_test.py\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\nTraceback (most recent call last):\nFile \"/home/deng/qianglan/Opensource/3DModelParallel/conv3d_test.py\", line 26, in \ntf.app.run()\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 44, in run\n_sys.exit(main(_sys.argv[:1] + flags_passthrough))\nFile \"/home/deng/qianglan/Opensource/3DModelParallel/conv3d_test.py\", line 23, in main\nrun_benchmark()\nFile \"/home/deng/qianglan/Opensource/3DModelParallel/conv3d_test.py\", line 14, in run_benchmark\ntest_output = tf.layers.conv3d(test_input, filters, kernel_size=(3,3,3), strides=[1, 1,1], padding='SAME', data_format='channels_first', trainable=False)\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/convolutional.py\", line 682, in conv3d\nreturn layer.apply(inputs)\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 303, in apply\nreturn self.call(inputs, **kwargs)\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 273, in call\noutputs = self.call(inputs, **kwargs)\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/convolutional.py\", line 156, in call\ndata_format=utils.convert_data_format(self.data_format, self.rank + 2))\nFile \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/utils.py\", line 49, in convert_data_format\nraise ValueError('Data format \"channels_first\" not supported for '\nValueError: Data format \"channels_first\" not supported for inputs with rank 5.\nProcess finished with exit code 1\nSource code / logs\nimport tensorflow as tf\ndef run_benchmark():\nwith tf.Graph().as_default():\ninput_shape = [1,64,224,224,224]\ntest_input = tf.Variable(tf.random_normal(input_shape, dtype=tf.float32, stddev=1e-1))\nfilters = 64\nwith tf.variable_scope('test_conv_layer'):\ntest_output = tf.layers.conv3d(test_input, filters, kernel_size=(3,3,3), strides=[1, 1,1],           padding='SAME', data_format='channels_first', trainable=False)\n    init = tf.global_variables_initializer()\n    sess = tf.Session()\n    sess.run(init)\n    result = sess.run(test_output)\n    print result.shape\n\ndef main(_):\nrun_benchmark()\nif name == 'main':\ntf.app.run()", "body": "Thanks,\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes, see below\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: linux Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**:  1.0.0\r\n- **Bazel version (if compiling from source)**:0.4.5\r\n- **CUDA/cuDNN version**: 8.0/5\r\n- **GPU model and memory**: K40\r\n- **Exact command to reproduce**: \r\n\r\n\r\n### Describe the problem\r\n\r\nI want to use tensorflow to implement a 3D neural network, so I test conv3d first. I use tf.layers.conv3d to test a 3D convolutional layer. You can refer the source code below, there is one parameter to set for tf.layers.conv3d, which is 'data_format', there are two options for that parameter, one is 'channels_first' , the other is 'channels_last', there is no problem with 'channels_last', however, there are problems when I set 'data_format' to 'channels_first'. The output is like following:\r\n\r\n$python  conv3d_test.py\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\r\nTraceback (most recent call last):\r\n  File \"/home/deng/qianglan/Opensource/3DModelParallel/conv3d_test.py\", line 26, in <module>\r\n    tf.app.run()\r\n  File \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 44, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"/home/deng/qianglan/Opensource/3DModelParallel/conv3d_test.py\", line 23, in main\r\n    run_benchmark()\r\n  File \"/home/deng/qianglan/Opensource/3DModelParallel/conv3d_test.py\", line 14, in run_benchmark\r\n    test_output = tf.layers.conv3d(test_input, filters, kernel_size=(3,3,3), strides=[1, 1,1], padding='SAME', data_format='channels_first', trainable=False)\r\n  File \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/convolutional.py\", line 682, in conv3d\r\n    return layer.apply(inputs)\r\n  File \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 303, in apply\r\n    return self.__call__(inputs, **kwargs)\r\n  File \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 273, in __call__\r\n    outputs = self.call(inputs, **kwargs)\r\n  File \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/convolutional.py\", line 156, in call\r\n    data_format=utils.convert_data_format(self.data_format, self.rank + 2))\r\n  File \"/home/deng/anaconda/lib/python2.7/site-packages/tensorflow/python/layers/utils.py\", line 49, in convert_data_format\r\n    raise ValueError('Data format \"channels_first\" not supported for '\r\nValueError: Data format \"channels_first\" not supported for inputs with rank 5.\r\n\r\nProcess finished with exit code 1\r\n\r\n\r\n### Source code / logs\r\n\r\nimport tensorflow as tf\r\n\r\ndef run_benchmark():\r\n    with tf.Graph().as_default():\r\n        input_shape = [1,64,224,224,224]\r\n        test_input = tf.Variable(tf.random_normal(input_shape, dtype=tf.float32, stddev=1e-1))\r\n        filters = 64\r\n        with tf.variable_scope('test_conv_layer'):\r\n            test_output = tf.layers.conv3d(test_input, filters, kernel_size=(3,3,3), strides=[1, 1,1],           padding='SAME', data_format='channels_first', trainable=False)\r\n\r\n        init = tf.global_variables_initializer()\r\n        sess = tf.Session()\r\n        sess.run(init)\r\n        result = sess.run(test_output)\r\n        print result.shape\r\n\r\ndef main(_):\r\n    run_benchmark()\r\n\r\nif __name__ == '__main__':\r\n    tf.app.run()\r\n"}