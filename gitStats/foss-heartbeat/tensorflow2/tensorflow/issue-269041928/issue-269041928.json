{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14027", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14027/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14027/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14027/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14027", "id": 269041928, "node_id": "MDU6SXNzdWUyNjkwNDE5Mjg=", "number": 14027, "title": "Problem with parameters use_bias=True and bias_initializer=None", "user": {"login": "Irlyue", "id": 18070969, "node_id": "MDQ6VXNlcjE4MDcwOTY5", "avatar_url": "https://avatars0.githubusercontent.com/u/18070969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Irlyue", "html_url": "https://github.com/Irlyue", "followers_url": "https://api.github.com/users/Irlyue/followers", "following_url": "https://api.github.com/users/Irlyue/following{/other_user}", "gists_url": "https://api.github.com/users/Irlyue/gists{/gist_id}", "starred_url": "https://api.github.com/users/Irlyue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Irlyue/subscriptions", "organizations_url": "https://api.github.com/users/Irlyue/orgs", "repos_url": "https://api.github.com/users/Irlyue/repos", "events_url": "https://api.github.com/users/Irlyue/events{/privacy}", "received_events_url": "https://api.github.com/users/Irlyue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-10-27T09:24:14Z", "updated_at": "2017-11-08T22:34:58Z", "closed_at": "2017-11-08T22:34:58Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug or a feature request.</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04.3 LTS</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip install</li>\n<li><strong>TensorFlow version (use command below)</strong>: tensorflow (1.3.0)</li>\n<li><strong>Python version</strong>: Python 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Something weird is happening when I'm using both the parameter use_bias and bias_initializer like this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\ntf.reset_default_graph()\ninp <span class=\"pl-k\">=</span> np.ones((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">1</span>))\ninputs_ <span class=\"pl-k\">=</span> tf.constant(inp, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\nn_filters <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>\nconv2d_tp <span class=\"pl-k\">=</span> tf.layers.conv2d_transpose(inputs_, n_filters, [<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>], \n                                       <span class=\"pl-v\">kernel_initializer</span><span class=\"pl-k\">=</span>tf.ones_initializer(),\n                                       <span class=\"pl-v\">use_bias</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,\n                                       <span class=\"pl-v\">bias_initializer</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>,\n                                       <span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>),\n                                       <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>same<span class=\"pl-pds\">'</span></span>)\n\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    tf.global_variables_initializer().run()\n    out <span class=\"pl-k\">=</span> sess.run(conv2d_tp)\n    <span class=\"pl-c1\">print</span>(out)</pre></div>\n<p>And I got output like this(may differ at different runtime):<br>\n[[[[ 3.28321671]<br>\n[ 3.28321671]]</p>\n<p>[[ 3.28321671]<br>\n[ 3.28321671]]]]<br>\nAs far as I'm concerned, the output element should all be integers, not floating numbers. I know setting the use_bias to True doesn't agree with setting bias_initializer to None in the first place since it's contradictory. But bad things happen when we ignore the use_bias and use the default value, at the same time setting the bias_initializer to None.</p>\n<h3>Source code / logs</h3>\n<p>The source code above should be enough to reproduce the output.</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug or a feature request.\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.3 LTS\nTensorFlow installed from (source or binary): pip install\nTensorFlow version (use command below): tensorflow (1.3.0)\nPython version: Python 3.5\nBazel version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nSomething weird is happening when I'm using both the parameter use_bias and bias_initializer like this:\nimport numpy as np\nimport tensorflow as tf\ntf.reset_default_graph()\ninp = np.ones((1, 2, 2, 1))\ninputs_ = tf.constant(inp, dtype=tf.float32)\nn_filters = 1\nconv2d_tp = tf.layers.conv2d_transpose(inputs_, n_filters, [3, 3], \n                                       kernel_initializer=tf.ones_initializer(),\n                                       use_bias=True,\n                                       bias_initializer=None,\n                                       strides=(1, 1),\n                                       padding='same')\n\n\nwith tf.Session() as sess:\n    tf.global_variables_initializer().run()\n    out = sess.run(conv2d_tp)\n    print(out)\nAnd I got output like this(may differ at different runtime):\n[[[[ 3.28321671]\n[ 3.28321671]]\n[[ 3.28321671]\n[ 3.28321671]]]]\nAs far as I'm concerned, the output element should all be integers, not floating numbers. I know setting the use_bias to True doesn't agree with setting bias_initializer to None in the first place since it's contradictory. But bad things happen when we ignore the use_bias and use the default value, at the same time setting the bias_initializer to None.\nSource code / logs\nThe source code above should be enough to reproduce the output.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04.3 LTS\r\n- **TensorFlow installed from (source or binary)**: pip install\r\n- **TensorFlow version (use command below)**: tensorflow (1.3.0)\r\n- **Python version**: Python 3.5\r\n- **Bazel version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nSomething weird is happening when I'm using both the parameter use_bias and bias_initializer like this:\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\ntf.reset_default_graph()\r\ninp = np.ones((1, 2, 2, 1))\r\ninputs_ = tf.constant(inp, dtype=tf.float32)\r\nn_filters = 1\r\nconv2d_tp = tf.layers.conv2d_transpose(inputs_, n_filters, [3, 3], \r\n                                       kernel_initializer=tf.ones_initializer(),\r\n                                       use_bias=True,\r\n                                       bias_initializer=None,\r\n                                       strides=(1, 1),\r\n                                       padding='same')\r\n\r\n\r\nwith tf.Session() as sess:\r\n    tf.global_variables_initializer().run()\r\n    out = sess.run(conv2d_tp)\r\n    print(out)\r\n```\r\nAnd I got output like this(may differ at different runtime):\r\n[[[[ 3.28321671]\r\n   [ 3.28321671]]\r\n\r\n  [[ 3.28321671]\r\n   [ 3.28321671]]]]\r\nAs far as I'm concerned, the output element should all be integers, not floating numbers. I know setting the use_bias to True doesn't agree with setting bias_initializer to None in the first place since it's contradictory. But bad things happen when we ignore the use_bias and use the default value, at the same time setting the bias_initializer to None.\r\n### Source code / logs\r\nThe source code above should be enough to reproduce the output.\r\n"}