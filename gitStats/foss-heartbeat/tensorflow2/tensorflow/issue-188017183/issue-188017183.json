{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5477", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5477/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5477/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5477/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5477", "id": 188017183, "node_id": "MDU6SXNzdWUxODgwMTcxODM=", "number": 5477, "title": "Deal with _control_flow_context when copying op", "user": {"login": "thjashin", "id": 5267554, "node_id": "MDQ6VXNlcjUyNjc1NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5267554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thjashin", "html_url": "https://github.com/thjashin", "followers_url": "https://api.github.com/users/thjashin/followers", "following_url": "https://api.github.com/users/thjashin/following{/other_user}", "gists_url": "https://api.github.com/users/thjashin/gists{/gist_id}", "starred_url": "https://api.github.com/users/thjashin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thjashin/subscriptions", "organizations_url": "https://api.github.com/users/thjashin/orgs", "repos_url": "https://api.github.com/users/thjashin/repos", "events_url": "https://api.github.com/users/thjashin/events{/privacy}", "received_events_url": "https://api.github.com/users/thjashin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "frankchn", "id": 691628, "node_id": "MDQ6VXNlcjY5MTYyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/691628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankchn", "html_url": "https://github.com/frankchn", "followers_url": "https://api.github.com/users/frankchn/followers", "following_url": "https://api.github.com/users/frankchn/following{/other_user}", "gists_url": "https://api.github.com/users/frankchn/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankchn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankchn/subscriptions", "organizations_url": "https://api.github.com/users/frankchn/orgs", "repos_url": "https://api.github.com/users/frankchn/repos", "events_url": "https://api.github.com/users/frankchn/events{/privacy}", "received_events_url": "https://api.github.com/users/frankchn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "frankchn", "id": 691628, "node_id": "MDQ6VXNlcjY5MTYyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/691628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankchn", "html_url": "https://github.com/frankchn", "followers_url": "https://api.github.com/users/frankchn/followers", "following_url": "https://api.github.com/users/frankchn/following{/other_user}", "gists_url": "https://api.github.com/users/frankchn/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankchn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankchn/subscriptions", "organizations_url": "https://api.github.com/users/frankchn/orgs", "repos_url": "https://api.github.com/users/frankchn/repos", "events_url": "https://api.github.com/users/frankchn/events{/privacy}", "received_events_url": "https://api.github.com/users/frankchn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2016-11-08T15:12:30Z", "updated_at": "2018-11-22T12:44:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>In the current implementation of copying ops (both <code>tf.contrib.copy_graph</code> and <code>tf.contrib.graph_editor</code>)<br>\nThe code of copying an op looks like this</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> copy inputs</span>\ninputs_ <span class=\"pl-k\">=</span> copy_func(op.inputs)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> copy control_inputs</span>\ncontrol_inputs_ <span class=\"pl-k\">=</span> copy_func(control_inputs)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> copy _node_def, _op_def</span>\nnode_def_ <span class=\"pl-k\">=</span> deepcopy(op._node_def)\nop_def_ <span class=\"pl-k\">=</span> deepcopy(op._op_def)\noutput_types_ <span class=\"pl-k\">=</span> op._output_types[:]\ninput_types_ <span class=\"pl-k\">=</span> op._input_types[:]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> copy name</span>\nname_ <span class=\"pl-k\">=</span> copy_func(op.name)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> init the new op with above copies</span>\nnew_op <span class=\"pl-k\">=</span> tf_ops.Operation(node_def_, <span class=\"pl-c1\">...</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ... copy shape and add to graph</span></pre></div>\n<p>But the <code>op._control_flow_context</code> is not copied at all. This causes problems when trying to compute gradients on a copied subgraph with control flow op like <code>tf.cond</code>. The error looks like</p>\n<div class=\"highlight highlight-source-python\"><pre>    grads <span class=\"pl-k\">=</span> optimizer.compute_gradients(<span class=\"pl-k\">-</span>lower_bound)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/optimizer.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">253</span>, <span class=\"pl-k\">in</span> compute_gradients\n    colocate_gradients_with_ops<span class=\"pl-k\">=</span>colocate_gradients_with_ops)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">461</span>, <span class=\"pl-k\">in</span> gradients\n    out_grads[i] <span class=\"pl-k\">=</span> control_flow_ops.ZerosLikeOutsideLoop(op, i)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1310</span>, <span class=\"pl-k\">in</span> ZerosLikeOutsideLoop\n    pred <span class=\"pl-k\">=</span> op_ctxt.pred\n<span class=\"pl-c1\">AttributeError</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>NoneType<span class=\"pl-pds\">'</span></span> <span class=\"pl-c1\">object</span> has no attribute <span class=\"pl-s\"><span class=\"pl-pds\">'</span>pred<span class=\"pl-pds\">'</span></span></pre></div>\n<p>This is because the function <code>ZerosLikeOutsideLoop</code> uses <code>_control_flow_context</code> when the op is <code>tf.switch</code></p>\n<pre><code>def ZerosLikeOutsideLoop(op, index):\n  \"\"\"Create zeros_like for the specified output of an op.\"\"\"\n  val = op.outputs[index]\n  if not IsSwitch(op):\n    return array_ops.zeros_like(val, optimize=False)\n  else:\n    op_ctxt = op._get_control_flow_context()\n    pred = op_ctxt.pred\n    branch = op_ctxt.branch\n    switch_val = switch(op.inputs[0], pred)[1 - branch]\n    zeros_shape = array_ops.shape_internal(switch_val, optimize=False)\n    return array_ops.zeros(zeros_shape, dtype=val.dtype)\n</code></pre>\n<p>I tried setting <code>new_op. _control_flow_context</code> as <code>op._control_flow_context</code><br>\nNow the error step passed. But I'm not sure whether this is right for dealing with _control_flow_context copy. Do you have some advice?</p>", "body_text": "In the current implementation of copying ops (both tf.contrib.copy_graph and tf.contrib.graph_editor)\nThe code of copying an op looks like this\n# copy inputs\ninputs_ = copy_func(op.inputs)\n# copy control_inputs\ncontrol_inputs_ = copy_func(control_inputs)\n# copy _node_def, _op_def\nnode_def_ = deepcopy(op._node_def)\nop_def_ = deepcopy(op._op_def)\noutput_types_ = op._output_types[:]\ninput_types_ = op._input_types[:]\n# copy name\nname_ = copy_func(op.name)\n# init the new op with above copies\nnew_op = tf_ops.Operation(node_def_, ...)\n# ... copy shape and add to graph\nBut the op._control_flow_context is not copied at all. This causes problems when trying to compute gradients on a copied subgraph with control flow op like tf.cond. The error looks like\n    grads = optimizer.compute_gradients(-lower_bound)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/optimizer.py\", line 253, in compute_gradients\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients.py\", line 461, in gradients\n    out_grads[i] = control_flow_ops.ZerosLikeOutsideLoop(op, i)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1310, in ZerosLikeOutsideLoop\n    pred = op_ctxt.pred\nAttributeError: 'NoneType' object has no attribute 'pred'\nThis is because the function ZerosLikeOutsideLoop uses _control_flow_context when the op is tf.switch\ndef ZerosLikeOutsideLoop(op, index):\n  \"\"\"Create zeros_like for the specified output of an op.\"\"\"\n  val = op.outputs[index]\n  if not IsSwitch(op):\n    return array_ops.zeros_like(val, optimize=False)\n  else:\n    op_ctxt = op._get_control_flow_context()\n    pred = op_ctxt.pred\n    branch = op_ctxt.branch\n    switch_val = switch(op.inputs[0], pred)[1 - branch]\n    zeros_shape = array_ops.shape_internal(switch_val, optimize=False)\n    return array_ops.zeros(zeros_shape, dtype=val.dtype)\n\nI tried setting new_op. _control_flow_context as op._control_flow_context\nNow the error step passed. But I'm not sure whether this is right for dealing with _control_flow_context copy. Do you have some advice?", "body": "In the current implementation of copying ops (both `tf.contrib.copy_graph` and `tf.contrib.graph_editor`)\r\nThe code of copying an op looks like this\r\n```python\r\n# copy inputs\r\ninputs_ = copy_func(op.inputs)\r\n# copy control_inputs\r\ncontrol_inputs_ = copy_func(control_inputs)\r\n# copy _node_def, _op_def\r\nnode_def_ = deepcopy(op._node_def)\r\nop_def_ = deepcopy(op._op_def)\r\noutput_types_ = op._output_types[:]\r\ninput_types_ = op._input_types[:]\r\n# copy name\r\nname_ = copy_func(op.name)\r\n# init the new op with above copies\r\nnew_op = tf_ops.Operation(node_def_, ...)\r\n# ... copy shape and add to graph\r\n```\r\nBut the `op._control_flow_context` is not copied at all. This causes problems when trying to compute gradients on a copied subgraph with control flow op like `tf.cond`. The error looks like\r\n```python\r\n    grads = optimizer.compute_gradients(-lower_bound)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/optimizer.py\", line 253, in compute_gradients\r\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients.py\", line 461, in gradients\r\n    out_grads[i] = control_flow_ops.ZerosLikeOutsideLoop(op, i)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1310, in ZerosLikeOutsideLoop\r\n    pred = op_ctxt.pred\r\nAttributeError: 'NoneType' object has no attribute 'pred'\r\n```\r\nThis is because the function `ZerosLikeOutsideLoop` uses `_control_flow_context` when the op is `tf.switch`\r\n```\r\ndef ZerosLikeOutsideLoop(op, index):\r\n  \"\"\"Create zeros_like for the specified output of an op.\"\"\"\r\n  val = op.outputs[index]\r\n  if not IsSwitch(op):\r\n    return array_ops.zeros_like(val, optimize=False)\r\n  else:\r\n    op_ctxt = op._get_control_flow_context()\r\n    pred = op_ctxt.pred\r\n    branch = op_ctxt.branch\r\n    switch_val = switch(op.inputs[0], pred)[1 - branch]\r\n    zeros_shape = array_ops.shape_internal(switch_val, optimize=False)\r\n    return array_ops.zeros(zeros_shape, dtype=val.dtype)\r\n```\r\nI tried setting `new_op. _control_flow_context` as `op._control_flow_context`\r\nNow the error step passed. But I'm not sure whether this is right for dealing with _control_flow_context copy. Do you have some advice?"}