{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/406382691", "html_url": "https://github.com/tensorflow/tensorflow/issues/20937#issuecomment-406382691", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20937", "id": 406382691, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjM4MjY5MQ==", "user": {"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-19T19:07:31Z", "updated_at": "2018-07-19T19:07:31Z", "author_association": "MEMBER", "body_html": "<p>I have a few options for you and I am cover some other scenarios so I can point any other issues back to this one.  Please let me know how it goes so I can modify anything to be more helpful.</p>\n<p>Below are instructions on how to build with NCCL 2.x for a variety of situations.  If you are not using NCCL you can take a short-cut and specify NCCL 1.3 to ./configure and it will compile with open source NCCL 1.3 and put it in the binary just as before.  If you are using single-GPU there is no reason to get NCCL 2.x just say NCCL 1.3 and be done.</p>\n<p><strong>Building with NCCL 2.x</strong></p>\n<ol>\n<li>\n<p>Use the <a href=\"https://hub.docker.com/r/tensorflow/tensorflow/tags/\" rel=\"nofollow\">nightly-devel-gpu</a> docker and then go back to using the latest nightly-devel-gpu when TF 1.10 is released.</p>\n</li>\n<li>\n<p>Upgrade your current devel-gpu docker with NCCL 2.x.</p>\n</li>\n</ol>\n<div class=\"highlight highlight-source-shell\"><pre>apt-get update <span class=\"pl-k\">&amp;&amp;</span> \\\n        apt-get install \\\n        libnccl2=2.2.13-1+cuda9.0 \\\n        libnccl-dev=2.2.13-1+cuda9.0 \\</pre></div>\n<ol start=\"3\">\n<li>If you are not using Docker you can install NCCL (<a href=\"https://developer.nvidia.com/ncc\" rel=\"nofollow\">NVIDIA NCCL landing page</a>) by following one of NVIDIA's suggested methods.  The easiest for builds is to get <code>NCCL 2.x.x O/S agnoatic</code> and most likely the CUDA 9.0 edition.  Unzip it into a folder and provide that path to ./configure when asked for the path.  Note the path is to the parent directory which has lib and include inside.</li>\n</ol>\n<p><strong>Installing just the NCCL 2.x binary:</strong></p>\n<p>If you just need to upgrade a system running (not building) TensorFlow to have NCCL 2.x I suggest using the \"NVIDIA Network Installer approach\" as that installed the .deb package that you get to from the <a href=\"https://developer.nvidia.com/nccl\" rel=\"nofollow\">NCCL landing page</a> and puts everything into the right path.  Or you can use the NVIDIA <code>apt-get repo</code> as follows</p>\n<div class=\"highlight highlight-source-shell\"><pre>sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub\nwget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.1.85-1_amd64.deb\nwget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb\nsudo dpkg -i cuda-repo-ubuntu1604_9.1.85-1_amd64.deb\nsudo dpkg -i nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb\nsudo apt-get update\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Includes optional NCCL 2.x.</span>\nsudo apt-get install libnccl2=2.2.13-1+cuda9.0 \n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> or just install everything</span>\nsudo apt-get install cuda9.0 cuda-cublas-9-0 cuda-cufft-9-0 cuda-curand-9-0 \\\n  cuda-cusolver-9-0 cuda-cusparse-9-0 libcudnn7=7.1.4.18-1+cuda9.0 \\\n   libnccl2=2.2.13-1+cuda9.0 cuda-command-line-tools-9-0</pre></div>\n<p>p.s. I will attempt to edit this over time to be more clear and based on feedback.  The install guides will be updated with TF 1.10 RC0 release.  Leaving ticket open until original poster's issue is resolved.</p>", "body_text": "I have a few options for you and I am cover some other scenarios so I can point any other issues back to this one.  Please let me know how it goes so I can modify anything to be more helpful.\nBelow are instructions on how to build with NCCL 2.x for a variety of situations.  If you are not using NCCL you can take a short-cut and specify NCCL 1.3 to ./configure and it will compile with open source NCCL 1.3 and put it in the binary just as before.  If you are using single-GPU there is no reason to get NCCL 2.x just say NCCL 1.3 and be done.\nBuilding with NCCL 2.x\n\n\nUse the nightly-devel-gpu docker and then go back to using the latest nightly-devel-gpu when TF 1.10 is released.\n\n\nUpgrade your current devel-gpu docker with NCCL 2.x.\n\n\napt-get update && \\\n        apt-get install \\\n        libnccl2=2.2.13-1+cuda9.0 \\\n        libnccl-dev=2.2.13-1+cuda9.0 \\\n\nIf you are not using Docker you can install NCCL (NVIDIA NCCL landing page) by following one of NVIDIA's suggested methods.  The easiest for builds is to get NCCL 2.x.x O/S agnoatic and most likely the CUDA 9.0 edition.  Unzip it into a folder and provide that path to ./configure when asked for the path.  Note the path is to the parent directory which has lib and include inside.\n\nInstalling just the NCCL 2.x binary:\nIf you just need to upgrade a system running (not building) TensorFlow to have NCCL 2.x I suggest using the \"NVIDIA Network Installer approach\" as that installed the .deb package that you get to from the NCCL landing page and puts everything into the right path.  Or you can use the NVIDIA apt-get repo as follows\nsudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub\nwget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.1.85-1_amd64.deb\nwget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb\nsudo dpkg -i cuda-repo-ubuntu1604_9.1.85-1_amd64.deb\nsudo dpkg -i nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb\nsudo apt-get update\n# Includes optional NCCL 2.x.\nsudo apt-get install libnccl2=2.2.13-1+cuda9.0 \n\n# or just install everything\nsudo apt-get install cuda9.0 cuda-cublas-9-0 cuda-cufft-9-0 cuda-curand-9-0 \\\n  cuda-cusolver-9-0 cuda-cusparse-9-0 libcudnn7=7.1.4.18-1+cuda9.0 \\\n   libnccl2=2.2.13-1+cuda9.0 cuda-command-line-tools-9-0\np.s. I will attempt to edit this over time to be more clear and based on feedback.  The install guides will be updated with TF 1.10 RC0 release.  Leaving ticket open until original poster's issue is resolved.", "body": "I have a few options for you and I am cover some other scenarios so I can point any other issues back to this one.  Please let me know how it goes so I can modify anything to be more helpful.  \r\n\r\nBelow are instructions on how to build with NCCL 2.x for a variety of situations.  If you are not using NCCL you can take a short-cut and specify NCCL 1.3 to ./configure and it will compile with open source NCCL 1.3 and put it in the binary just as before.  If you are using single-GPU there is no reason to get NCCL 2.x just say NCCL 1.3 and be done.  \r\n\r\n**Building with NCCL 2.x**\r\n\r\n1. Use the [nightly-devel-gpu](https://hub.docker.com/r/tensorflow/tensorflow/tags/) docker and then go back to using the latest nightly-devel-gpu when TF 1.10 is released.\r\n\r\n2.  Upgrade your current devel-gpu docker with NCCL 2.x. \r\n```bash\r\napt-get update && \\\r\n        apt-get install \\\r\n        libnccl2=2.2.13-1+cuda9.0 \\\r\n        libnccl-dev=2.2.13-1+cuda9.0 \\\r\n```\r\n\r\n3. If you are not using Docker you can install NCCL ([NVIDIA NCCL landing page](https://developer.nvidia.com/ncc)) by following one of NVIDIA's suggested methods.  The easiest for builds is to get `NCCL 2.x.x O/S agnoatic` and most likely the CUDA 9.0 edition.  Unzip it into a folder and provide that path to ./configure when asked for the path.  Note the path is to the parent directory which has lib and include inside.  \r\n\r\n**Installing just the NCCL 2.x binary:**\r\n\r\nIf you just need to upgrade a system running (not building) TensorFlow to have NCCL 2.x I suggest using the \"NVIDIA Network Installer approach\" as that installed the .deb package that you get to from the [NCCL landing page](https://developer.nvidia.com/nccl) and puts everything into the right path.  Or you can use the NVIDIA `apt-get repo` as follows\r\n\r\n```bash\r\nsudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub\r\nwget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.1.85-1_amd64.deb\r\nwget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb\r\nsudo dpkg -i cuda-repo-ubuntu1604_9.1.85-1_amd64.deb\r\nsudo dpkg -i nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb\r\nsudo apt-get update\r\n# Includes optional NCCL 2.x.\r\nsudo apt-get install libnccl2=2.2.13-1+cuda9.0 \r\n\r\n# or just install everything\r\nsudo apt-get install cuda9.0 cuda-cublas-9-0 cuda-cufft-9-0 cuda-curand-9-0 \\\r\n  cuda-cusolver-9-0 cuda-cusparse-9-0 libcudnn7=7.1.4.18-1+cuda9.0 \\\r\n   libnccl2=2.2.13-1+cuda9.0 cuda-command-line-tools-9-0\r\n```\r\n\r\np.s. I will attempt to edit this over time to be more clear and based on feedback.  The install guides will be updated with TF 1.10 RC0 release.  Leaving ticket open until original poster's issue is resolved.\r\n"}