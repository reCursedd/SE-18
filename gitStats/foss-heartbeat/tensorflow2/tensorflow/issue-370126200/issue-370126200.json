{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22986", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22986/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22986/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22986/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22986", "id": 370126200, "node_id": "MDU6SXNzdWUzNzAxMjYyMDA=", "number": 22986, "title": "tensorflow keras random seeds not working", "user": {"login": "volvador", "id": 15655730, "node_id": "MDQ6VXNlcjE1NjU1NzMw", "avatar_url": "https://avatars1.githubusercontent.com/u/15655730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/volvador", "html_url": "https://github.com/volvador", "followers_url": "https://api.github.com/users/volvador/followers", "following_url": "https://api.github.com/users/volvador/following{/other_user}", "gists_url": "https://api.github.com/users/volvador/gists{/gist_id}", "starred_url": "https://api.github.com/users/volvador/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/volvador/subscriptions", "organizations_url": "https://api.github.com/users/volvador/orgs", "repos_url": "https://api.github.com/users/volvador/repos", "events_url": "https://api.github.com/users/volvador/events{/privacy}", "received_events_url": "https://api.github.com/users/volvador/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097546578, "node_id": "MDU6TGFiZWwxMDk3NTQ2NTc4", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:keras", "name": "comp:keras", "color": "0052cc", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-10-15T11:50:26Z", "updated_at": "2018-10-30T22:40:37Z", "closed_at": "2018-10-30T22:40:36Z", "author_association": "NONE", "body_html": "<p>Hello,<br>\nI am using Tensorflow 1.5 and its embedded Keras on CPU.<br>\nThe following simple program does not produce the same results at every run despite setting the random seeds for keras and TF</p>\n<pre><code>import numpy as np\nnp.random.seed(123)\n\nimport tensorflow as tf\ntf.set_random_seed(123)\nfrom tensorflow.python.keras.models import Sequential\nfrom tensorflow.python.keras.layers import Dense\n\n\ndef create_model(input_dim, output_dim, training=True):\n    from tensorflow.python.keras.models import Sequential\n    from tensorflow.python.keras.layers import Dense\n    hidden_dim = 8 \n    model = Sequential()\n    model.add(Dense(input_dim=input_dim, units=hidden_dim))\n    model.add(Dense(units=output_dim, activation='linear'))\n    model.compile(loss='mse', optimizer='adam')\n    return model\n\nN = 100000\nX = np.random.normal(loc=0.0, scale=1.0, size=(N, 20))\nY = np.random.normal(loc=0.0, scale=1.0, size=(N, 2)) \ninput_dim = X.shape[1]\noutput_dim = Y.shape[1]\n\ntf.reset_default_graph()\ntf.set_random_seed(123)\nmodel = create_model(input_dim, output_dim)\nmodel.fit(X, Y, batch_size=100, epochs=1, verbose=1)\n\nY_pred = model.predict(X, batch_size=1)\n\nprint Y_pred[0:5]\n</code></pre>", "body_text": "Hello,\nI am using Tensorflow 1.5 and its embedded Keras on CPU.\nThe following simple program does not produce the same results at every run despite setting the random seeds for keras and TF\nimport numpy as np\nnp.random.seed(123)\n\nimport tensorflow as tf\ntf.set_random_seed(123)\nfrom tensorflow.python.keras.models import Sequential\nfrom tensorflow.python.keras.layers import Dense\n\n\ndef create_model(input_dim, output_dim, training=True):\n    from tensorflow.python.keras.models import Sequential\n    from tensorflow.python.keras.layers import Dense\n    hidden_dim = 8 \n    model = Sequential()\n    model.add(Dense(input_dim=input_dim, units=hidden_dim))\n    model.add(Dense(units=output_dim, activation='linear'))\n    model.compile(loss='mse', optimizer='adam')\n    return model\n\nN = 100000\nX = np.random.normal(loc=0.0, scale=1.0, size=(N, 20))\nY = np.random.normal(loc=0.0, scale=1.0, size=(N, 2)) \ninput_dim = X.shape[1]\noutput_dim = Y.shape[1]\n\ntf.reset_default_graph()\ntf.set_random_seed(123)\nmodel = create_model(input_dim, output_dim)\nmodel.fit(X, Y, batch_size=100, epochs=1, verbose=1)\n\nY_pred = model.predict(X, batch_size=1)\n\nprint Y_pred[0:5]", "body": "Hello,\r\nI am using Tensorflow 1.5 and its embedded Keras on CPU.\r\nThe following simple program does not produce the same results at every run despite setting the random seeds for keras and TF\r\n\r\n    import numpy as np\r\n    np.random.seed(123)\r\n\r\n    import tensorflow as tf\r\n    tf.set_random_seed(123)\r\n    from tensorflow.python.keras.models import Sequential\r\n    from tensorflow.python.keras.layers import Dense\r\n\r\n\r\n    def create_model(input_dim, output_dim, training=True):\r\n        from tensorflow.python.keras.models import Sequential\r\n        from tensorflow.python.keras.layers import Dense\r\n        hidden_dim = 8 \r\n        model = Sequential()\r\n        model.add(Dense(input_dim=input_dim, units=hidden_dim))\r\n        model.add(Dense(units=output_dim, activation='linear'))\r\n        model.compile(loss='mse', optimizer='adam')\r\n        return model\r\n\r\n    N = 100000\r\n    X = np.random.normal(loc=0.0, scale=1.0, size=(N, 20))\r\n    Y = np.random.normal(loc=0.0, scale=1.0, size=(N, 2)) \r\n    input_dim = X.shape[1]\r\n    output_dim = Y.shape[1]\r\n\r\n    tf.reset_default_graph()\r\n    tf.set_random_seed(123)\r\n    model = create_model(input_dim, output_dim)\r\n    model.fit(X, Y, batch_size=100, epochs=1, verbose=1)\r\n\r\n    Y_pred = model.predict(X, batch_size=1)\r\n\r\n    print Y_pred[0:5]\r\n"}