{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6506", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6506/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6506/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6506/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6506", "id": 197606129, "node_id": "MDU6SXNzdWUxOTc2MDYxMjk=", "number": 6506, "title": "Error in `python': free(): invalid pointer: when running example frac.cc op", "user": {"login": "nmiculinic", "id": 3183610, "node_id": "MDQ6VXNlcjMxODM2MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3183610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmiculinic", "html_url": "https://github.com/nmiculinic", "followers_url": "https://api.github.com/users/nmiculinic/followers", "following_url": "https://api.github.com/users/nmiculinic/following{/other_user}", "gists_url": "https://api.github.com/users/nmiculinic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmiculinic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmiculinic/subscriptions", "organizations_url": "https://api.github.com/users/nmiculinic/orgs", "repos_url": "https://api.github.com/users/nmiculinic/repos", "events_url": "https://api.github.com/users/nmiculinic/events{/privacy}", "received_events_url": "https://api.github.com/users/nmiculinic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-12-26T17:16:47Z", "updated_at": "2017-01-17T19:20:29Z", "closed_at": "2017-01-17T19:20:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Frac.cc as in repo:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> legal stuff</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> An example Op.</span>\n\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tensorflow/core/framework/op.h<span class=\"pl-pds\">\"</span></span>\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tensorflow/core/framework/op_kernel.h<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-k\">using</span> <span class=\"pl-k\">namespace</span> <span class=\"pl-en\">tensorflow</span><span class=\"pl-k\">;</span>\n\n<span class=\"pl-en\">REGISTER_OP</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Fact<span class=\"pl-pds\">\"</span></span>)\n    .Output(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fact: string<span class=\"pl-pds\">\"</span></span>)\n    .Doc(<span class=\"pl-s\"><span class=\"pl-pds\">R\"doc(</span></span>\n<span class=\"pl-s\">Output a fact about factorials.</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">)doc\"</span></span>);\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">FactOp</span> : <span class=\"pl-k\">public</span> <span class=\"pl-en\">OpKernel</span> {\n <span class=\"pl-k\">public:</span>\n  <span class=\"pl-k\">explicit</span> <span class=\"pl-en\">FactOp</span>(OpKernelConstruction* context) : OpKernel(context) {}\n\n  <span class=\"pl-k\">void</span> <span class=\"pl-en\">Compute</span>(OpKernelContext* context) <span class=\"pl-k\">override</span> {\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> Output a scalar string.</span>\n    Tensor* output_tensor = <span class=\"pl-c1\">NULL</span>;\n    <span class=\"pl-c1\">OP_REQUIRES_OK</span>(context,\n                   context-&gt;<span class=\"pl-c1\">allocate_output</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">TensorShape</span>(), &amp;output_tensor));\n    <span class=\"pl-k\">auto</span> output = output_tensor-&gt;<span class=\"pl-k\">template</span> <span class=\"pl-smi\">scalar</span>&lt;string&gt;();\n\n    <span class=\"pl-c1\">output</span>() = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0! == 1<span class=\"pl-pds\">\"</span></span>;\n  }\n};\n\n<span class=\"pl-en\">REGISTER_KERNEL_BUILDER</span>(Name(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Fact<span class=\"pl-pds\">\"</span></span>).Device(DEVICE_CPU), FactOp);</pre></div>\n<p>bazel build:</p>\n<pre lang=\"bazel\"><code>load(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n\ntf_custom_op_library(\n    name = \"fact.so\",\n    srcs = [\"fact.cc\"],\n)\n</code></pre>\n<p>Test script:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nfact_module <span class=\"pl-k\">=</span> tf.load_op_library(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>tensorflow/bazel-bin/tensorflow/core/user_ops/fact.so<span class=\"pl-pds\">'</span></span>)</pre></div>\n<p>full core dump: <a href=\"http://pastebin.com/69rLzybC\" rel=\"nofollow\">http://pastebin.com/69rLzybC</a></p>\n<p>I'm trying to write tf op. Tf repo is on origin/r0.12 tag</p>\n<p>What is going on and how do I fix it/implement my custom op?<br>\nPython version 3.5.2<br>\nLinux protagonist 4.8.13-1-ARCH <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115886302\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1\">#1</a> SMP PREEMPT Fri Dec 9 07:24:34 CET 2016 x86_64 GNU/Linux</p>", "body_text": "Frac.cc as in repo:\n// legal stuff\n\n// An example Op.\n\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n\nusing namespace tensorflow;\n\nREGISTER_OP(\"Fact\")\n    .Output(\"fact: string\")\n    .Doc(R\"doc(\nOutput a fact about factorials.\n)doc\");\n\nclass FactOp : public OpKernel {\n public:\n  explicit FactOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Output a scalar string.\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context,\n                   context->allocate_output(0, TensorShape(), &output_tensor));\n    auto output = output_tensor->template scalar<string>();\n\n    output() = \"0! == 1\";\n  }\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"Fact\").Device(DEVICE_CPU), FactOp);\nbazel build:\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n\ntf_custom_op_library(\n    name = \"fact.so\",\n    srcs = [\"fact.cc\"],\n)\n\nTest script:\nimport tensorflow as tf\nfact_module = tf.load_op_library('tensorflow/bazel-bin/tensorflow/core/user_ops/fact.so')\nfull core dump: http://pastebin.com/69rLzybC\nI'm trying to write tf op. Tf repo is on origin/r0.12 tag\nWhat is going on and how do I fix it/implement my custom op?\nPython version 3.5.2\nLinux protagonist 4.8.13-1-ARCH #1 SMP PREEMPT Fri Dec 9 07:24:34 CET 2016 x86_64 GNU/Linux", "body": "Frac.cc as in repo:\r\n```c++\r\n// legal stuff\r\n\r\n// An example Op.\r\n\r\n#include \"tensorflow/core/framework/op.h\"\r\n#include \"tensorflow/core/framework/op_kernel.h\"\r\n\r\nusing namespace tensorflow;\r\n\r\nREGISTER_OP(\"Fact\")\r\n    .Output(\"fact: string\")\r\n    .Doc(R\"doc(\r\nOutput a fact about factorials.\r\n)doc\");\r\n\r\nclass FactOp : public OpKernel {\r\n public:\r\n  explicit FactOp(OpKernelConstruction* context) : OpKernel(context) {}\r\n\r\n  void Compute(OpKernelContext* context) override {\r\n    // Output a scalar string.\r\n    Tensor* output_tensor = NULL;\r\n    OP_REQUIRES_OK(context,\r\n                   context->allocate_output(0, TensorShape(), &output_tensor));\r\n    auto output = output_tensor->template scalar<string>();\r\n\r\n    output() = \"0! == 1\";\r\n  }\r\n};\r\n\r\nREGISTER_KERNEL_BUILDER(Name(\"Fact\").Device(DEVICE_CPU), FactOp);\r\n```\r\n\r\nbazel build:\r\n```bazel\r\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\r\n\r\ntf_custom_op_library(\r\n    name = \"fact.so\",\r\n    srcs = [\"fact.cc\"],\r\n)\r\n```\r\n\r\nTest script:\r\n```python\r\nimport tensorflow as tf\r\nfact_module = tf.load_op_library('tensorflow/bazel-bin/tensorflow/core/user_ops/fact.so')\r\n```\r\n\r\nfull core dump: http://pastebin.com/69rLzybC\r\n\r\nI'm trying to write tf op. Tf repo is on origin/r0.12 tag\r\n\r\nWhat is going on and how do I fix it/implement my custom op?\r\nPython version 3.5.2\r\nLinux protagonist 4.8.13-1-ARCH #1 SMP PREEMPT Fri Dec 9 07:24:34 CET 2016 x86_64 GNU/Linux\r\n"}