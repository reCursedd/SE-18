{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15563", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15563/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15563/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15563/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15563", "id": 283997101, "node_id": "MDU6SXNzdWUyODM5OTcxMDE=", "number": 15563, "title": "Cannot statically link against Tensorflow library in Golang", "user": {"login": "metral", "id": 1112768, "node_id": "MDQ6VXNlcjExMTI3Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1112768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metral", "html_url": "https://github.com/metral", "followers_url": "https://api.github.com/users/metral/followers", "following_url": "https://api.github.com/users/metral/following{/other_user}", "gists_url": "https://api.github.com/users/metral/gists{/gist_id}", "starred_url": "https://api.github.com/users/metral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metral/subscriptions", "organizations_url": "https://api.github.com/users/metral/orgs", "repos_url": "https://api.github.com/users/metral/repos", "events_url": "https://api.github.com/users/metral/events{/privacy}", "received_events_url": "https://api.github.com/users/metral/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-21T20:35:00Z", "updated_at": "2017-12-24T18:10:46Z", "closed_at": "2017-12-24T18:10:46Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.0</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: <code>go build -a -v -o hellotf --ldflags '-linkmode external -extldflags \"-static -L /usr/local/lib\"' -x &lt;GITHUB_PROJ_NAME&gt;/hellotf</code></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I'm trying to compile a <strong>statically-linked</strong> binary of the hello world app against the TF 1.4.0 binary per the <a href=\"https://www.tensorflow.org/install/install_go\" rel=\"nofollow\">golang install &amp; hello-world instructions</a> and am not able to successfully link against the TF library as it reports that <code>ltensorflow</code> cannot be found by <code>/usr/bin/ld</code> in the <code>go build</code>.</p>\n<p>The command used is:<br>\n<code>go build -a -v -o hellotf --ldflags '-linkmode external -extldflags \"-static -L /usr/local/lib\"' -x &lt;GITHUB_PROJ_NAME&gt;/hellotf</code></p>\n<p>I've tried linking against <code>/usr/local/lib</code> (where libtensorflow lives) using <code>-extldflags</code>, CGO_LDFLAGS, LDFLAGS etc, done <code>sudo ldconfig</code> and the env setup with LD_LIBRARY_PATH and LIBRARY_PATH, but cannot move past this step and always get the error status:</p>\n<pre><code>/.gvm/gos/go1.8.3/pkg/tool/linux_amd64/link: running gcc failed: exit status 1\n/usr/bin/ld: cannot find -ltensorflow\n</code></pre>\n<p>The only related issue I've encountered for this is: <a href=\"https://stackoverflow.com/questions/44428816/tensorflow-for-go-demo-example-run-failed\" rel=\"nofollow\">https://stackoverflow.com/questions/44428816/tensorflow-for-go-demo-example-run-failed</a>, but that didn't help much either.</p>\n<p>That being said, I can dynamically link and build the helloworld go code e.g. <code>go build hello_tf.go</code> and <code>go test github.com/tensorflow/tensorflow/tensorflow/go</code> all work successfully; the issue arises when I try to statically link and cannot link to libtensorflow after it compiles, no matter what settings I try using.</p>\n<p>Any help or advice would be greatly appreciated. Thanks!</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): 1.4.0\nBazel version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: go build -a -v -o hellotf --ldflags '-linkmode external -extldflags \"-static -L /usr/local/lib\"' -x <GITHUB_PROJ_NAME>/hellotf\n\nDescribe the problem\nI'm trying to compile a statically-linked binary of the hello world app against the TF 1.4.0 binary per the golang install & hello-world instructions and am not able to successfully link against the TF library as it reports that ltensorflow cannot be found by /usr/bin/ld in the go build.\nThe command used is:\ngo build -a -v -o hellotf --ldflags '-linkmode external -extldflags \"-static -L /usr/local/lib\"' -x <GITHUB_PROJ_NAME>/hellotf\nI've tried linking against /usr/local/lib (where libtensorflow lives) using -extldflags, CGO_LDFLAGS, LDFLAGS etc, done sudo ldconfig and the env setup with LD_LIBRARY_PATH and LIBRARY_PATH, but cannot move past this step and always get the error status:\n/.gvm/gos/go1.8.3/pkg/tool/linux_amd64/link: running gcc failed: exit status 1\n/usr/bin/ld: cannot find -ltensorflow\n\nThe only related issue I've encountered for this is: https://stackoverflow.com/questions/44428816/tensorflow-for-go-demo-example-run-failed, but that didn't help much either.\nThat being said, I can dynamically link and build the helloworld go code e.g. go build hello_tf.go and go test github.com/tensorflow/tensorflow/tensorflow/go all work successfully; the issue arises when I try to statically link and cannot link to libtensorflow after it compiles, no matter what settings I try using.\nAny help or advice would be greatly appreciated. Thanks!", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: `go build -a -v -o hellotf --ldflags '-linkmode external -extldflags \"-static -L /usr/local/lib\"' -x <GITHUB_PROJ_NAME>/hellotf`\r\n\r\n### Describe the problem\r\nI'm trying to compile a **statically-linked** binary of the hello world app against the TF 1.4.0 binary per the [golang install & hello-world instructions](https://www.tensorflow.org/install/install_go) and am not able to successfully link against the TF library as it reports that `ltensorflow` cannot be found by `/usr/bin/ld` in the `go build`.\r\n\r\nThe command used is:\r\n`go build -a -v -o hellotf --ldflags '-linkmode external -extldflags \"-static -L /usr/local/lib\"' -x <GITHUB_PROJ_NAME>/hellotf`\r\n\r\nI've tried linking against `/usr/local/lib` (where libtensorflow lives) using `-extldflags`, CGO_LDFLAGS, LDFLAGS etc, done `sudo ldconfig` and the env setup with LD_LIBRARY_PATH and LIBRARY_PATH, but cannot move past this step and always get the error status:\r\n\r\n```\r\n/.gvm/gos/go1.8.3/pkg/tool/linux_amd64/link: running gcc failed: exit status 1\r\n/usr/bin/ld: cannot find -ltensorflow\r\n```\r\n\r\nThe only related issue I've encountered for this is: https://stackoverflow.com/questions/44428816/tensorflow-for-go-demo-example-run-failed, but that didn't help much either.\r\n\r\nThat being said, I can dynamically link and build the helloworld go code e.g. `go build hello_tf.go` and `go test github.com/tensorflow/tensorflow/tensorflow/go` all work successfully; the issue arises when I try to statically link and cannot link to libtensorflow after it compiles, no matter what settings I try using.\r\n\r\nAny help or advice would be greatly appreciated. Thanks!"}