{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20099", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20099/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20099/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20099/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20099", "id": 333348978, "node_id": "MDU6SXNzdWUzMzMzNDg5Nzg=", "number": 20099, "title": "QR factorization unstable on GPU", "user": {"login": "lucasb-eyer", "id": 1476029, "node_id": "MDQ6VXNlcjE0NzYwMjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1476029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucasb-eyer", "html_url": "https://github.com/lucasb-eyer", "followers_url": "https://api.github.com/users/lucasb-eyer/followers", "following_url": "https://api.github.com/users/lucasb-eyer/following{/other_user}", "gists_url": "https://api.github.com/users/lucasb-eyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucasb-eyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucasb-eyer/subscriptions", "organizations_url": "https://api.github.com/users/lucasb-eyer/orgs", "repos_url": "https://api.github.com/users/lucasb-eyer/repos", "events_url": "https://api.github.com/users/lucasb-eyer/events{/privacy}", "received_events_url": "https://api.github.com/users/lucasb-eyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "azaks2", "id": 40365382, "node_id": "MDQ6VXNlcjQwMzY1Mzgy", "avatar_url": "https://avatars2.githubusercontent.com/u/40365382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azaks2", "html_url": "https://github.com/azaks2", "followers_url": "https://api.github.com/users/azaks2/followers", "following_url": "https://api.github.com/users/azaks2/following{/other_user}", "gists_url": "https://api.github.com/users/azaks2/gists{/gist_id}", "starred_url": "https://api.github.com/users/azaks2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azaks2/subscriptions", "organizations_url": "https://api.github.com/users/azaks2/orgs", "repos_url": "https://api.github.com/users/azaks2/repos", "events_url": "https://api.github.com/users/azaks2/events{/privacy}", "received_events_url": "https://api.github.com/users/azaks2/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "azaks2", "id": 40365382, "node_id": "MDQ6VXNlcjQwMzY1Mzgy", "avatar_url": "https://avatars2.githubusercontent.com/u/40365382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azaks2", "html_url": "https://github.com/azaks2", "followers_url": "https://api.github.com/users/azaks2/followers", "following_url": "https://api.github.com/users/azaks2/following{/other_user}", "gists_url": "https://api.github.com/users/azaks2/gists{/gist_id}", "starred_url": "https://api.github.com/users/azaks2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azaks2/subscriptions", "organizations_url": "https://api.github.com/users/azaks2/orgs", "repos_url": "https://api.github.com/users/azaks2/repos", "events_url": "https://api.github.com/users/azaks2/events{/privacy}", "received_events_url": "https://api.github.com/users/azaks2/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-06-18T16:39:24Z", "updated_at": "2018-11-15T23:56:57Z", "closed_at": "2018-11-15T23:56:57Z", "author_association": "NONE", "body_html": "<h3>Describe the problem</h3>\n<p>Performing QR factorization of relatively large matrices on the GPU is numerically unstable. I am unsure if it's a tensorflow issue, or an upstrea cuSOLVE issue, as I don't have the time to write a custom cuSOLVE C call to test. The issue is neither present on the CPU, nor in numpy.</p>\n<p>Steps to reproduce:</p>\n<pre><code>import tensorflow as tf\ntf.enable_eager_execution()\n\nwith tf.device('/gpu:0'):\n    q, r = tf.qr(tf.random_normal((2048, 1024))\n    print(tf.norm(q, axis=0))\n    print(tf.reduce_sum(tf.cast(tf.abs(tf.norm(q, axis=0) - 1) &gt; 1, tf.float32)))\n</code></pre>\n<p>Run this multiple times and you get <em>wildly</em> different results, sometimes all norms are almost 1.0, sometimes the last entries have \"slightly\" larger norms 1-10, sometimes the last norms are huge (example: 3.1662303e+11), and sometimes they are NaN.</p>\n<p>Running in float64 does not solve the issue.</p>\n<p>Running on the CPU does solve the issue.</p>\n<h3>System information</h3>\n<p>Tensorflow version as per <code>print(tf.GIT_VERSION, tf.VERSION)</code>:  <code>v1.7.0-3-g024aecf414 1.7.0</code></p>\n<p>What follows is the output of <code>tf_env_collect.sh</code>:</p>\n<p>Note 1: I cannot upgrade to latest TF to check it there right now.<br>\nNote 2: Multiple cuda versions are shown below, but only 9.0 is the first one in all <code>*PATH</code> variables.</p>\n<pre><code>== cat /etc/issue ===============================================\nLinux grimbergen 4.4.0-116-generic #140~14.04.1-Ubuntu SMP Fri Feb 16 09:25:20 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\nVERSION_ID=\"14.04\"\n\n== are we in docker =============================================\nNo\n\n== compiler =====================================================\nc++ (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4\nCopyright (C) 2013 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\n== uname -a =====================================================\nLinux grimbergen 4.4.0-116-generic #140~14.04.1-Ubuntu SMP Fri Feb 16 09:25:20 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n\n== check pips ===================================================\nnumpy              1.14.2      \nprotobuf           3.5.2.post1 \ntensorflow-gpu     1.7.0       \n\n== check for virtualenv =========================================\nFalse\n\n== tensorflow import ============================================\ntf.VERSION = 1.7.0\ntf.GIT_VERSION = v1.7.0-3-g024aecf414\ntf.COMPILER_VERSION = v1.7.0-3-g024aecf414\n/home/beyer/.pyenv/versions/tensorflow-latest/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n  from ._conv import register_converters as _register_converters\n\n== env ==========================================================\nLD_LIBRARY_PATH /home/beyer/inst/cudnn7/lib64:/usr/local/cuda-9.0/extras/CUPTI/lib64/:/usr/local/cuda-9.0/lib64:/home/beyer/inst/cudnn6/lib64:/usr/local/cuda-8.0/extras/CUPTI/lib64/:/usr/local/cuda-8.0/lib64:/home/beyer/inst/lib64:/home/beyer/inst/lib:\nDYLD_LIBRARY_PATH is unset\n\n== nvidia-smi ===================================================\nMon Jun 18 18:14:33 2018       \n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 384.111                Driver Version: 384.111                   |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  TITAN X (Pascal)    Off  | 00000000:01:00.0 Off |                  N/A |\n| 30%   50C    P8    22W / 250W |  11591MiB / 12187MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n|   1  GeForce GTX 108...  Off  | 00000000:02:00.0 Off |                  N/A |\n| 44%   39C    P2    60W / 250W |  10625MiB / 11172MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n                                                                               \n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID   Type   Process name                             Usage      |\n|=============================================================================|\n|    0      4713      C   ...3.6.2/envs/tensorflow-latest/bin/python 11581MiB |\n|    1      4713      C   ...3.6.2/envs/tensorflow-latest/bin/python 10615MiB |\n+-----------------------------------------------------------------------------+\n\n== cuda libs  ===================================================\n/usr/local/cuda-8.0/doc/man/man7/libcudart.7\n/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7\n/usr/local/cuda-8.0/lib64/libcudart_static.a\n/usr/local/cuda-8.0/lib64/libcudart.so.8.0.44\n/usr/local/cuda-9.0/doc/man/man7/libcudart.7\n/usr/local/cuda-9.0/doc/man/man7/libcudart.so.7\n/usr/local/cuda-9.0/lib64/libcudart_static.a\n/usr/local/cuda-9.0/lib64/libcudart.so.9.0.176\n/usr/local/cuda-7.5/lib/libcudart_static.a\n/usr/local/cuda-7.5/lib/libcudart.so.7.5.18\n/usr/local/cuda-7.5/doc/man/man7/libcudart.7\n/usr/local/cuda-7.5/doc/man/man7/libcudart.so.7\n/usr/local/cuda-7.5/lib64/libcudart_static.a\n/usr/local/cuda-7.5/lib64/libcudart.so.7.5.18\n\n</code></pre>", "body_text": "Describe the problem\nPerforming QR factorization of relatively large matrices on the GPU is numerically unstable. I am unsure if it's a tensorflow issue, or an upstrea cuSOLVE issue, as I don't have the time to write a custom cuSOLVE C call to test. The issue is neither present on the CPU, nor in numpy.\nSteps to reproduce:\nimport tensorflow as tf\ntf.enable_eager_execution()\n\nwith tf.device('/gpu:0'):\n    q, r = tf.qr(tf.random_normal((2048, 1024))\n    print(tf.norm(q, axis=0))\n    print(tf.reduce_sum(tf.cast(tf.abs(tf.norm(q, axis=0) - 1) > 1, tf.float32)))\n\nRun this multiple times and you get wildly different results, sometimes all norms are almost 1.0, sometimes the last entries have \"slightly\" larger norms 1-10, sometimes the last norms are huge (example: 3.1662303e+11), and sometimes they are NaN.\nRunning in float64 does not solve the issue.\nRunning on the CPU does solve the issue.\nSystem information\nTensorflow version as per print(tf.GIT_VERSION, tf.VERSION):  v1.7.0-3-g024aecf414 1.7.0\nWhat follows is the output of tf_env_collect.sh:\nNote 1: I cannot upgrade to latest TF to check it there right now.\nNote 2: Multiple cuda versions are shown below, but only 9.0 is the first one in all *PATH variables.\n== cat /etc/issue ===============================================\nLinux grimbergen 4.4.0-116-generic #140~14.04.1-Ubuntu SMP Fri Feb 16 09:25:20 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\nVERSION_ID=\"14.04\"\n\n== are we in docker =============================================\nNo\n\n== compiler =====================================================\nc++ (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4\nCopyright (C) 2013 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\n== uname -a =====================================================\nLinux grimbergen 4.4.0-116-generic #140~14.04.1-Ubuntu SMP Fri Feb 16 09:25:20 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n\n== check pips ===================================================\nnumpy              1.14.2      \nprotobuf           3.5.2.post1 \ntensorflow-gpu     1.7.0       \n\n== check for virtualenv =========================================\nFalse\n\n== tensorflow import ============================================\ntf.VERSION = 1.7.0\ntf.GIT_VERSION = v1.7.0-3-g024aecf414\ntf.COMPILER_VERSION = v1.7.0-3-g024aecf414\n/home/beyer/.pyenv/versions/tensorflow-latest/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n  from ._conv import register_converters as _register_converters\n\n== env ==========================================================\nLD_LIBRARY_PATH /home/beyer/inst/cudnn7/lib64:/usr/local/cuda-9.0/extras/CUPTI/lib64/:/usr/local/cuda-9.0/lib64:/home/beyer/inst/cudnn6/lib64:/usr/local/cuda-8.0/extras/CUPTI/lib64/:/usr/local/cuda-8.0/lib64:/home/beyer/inst/lib64:/home/beyer/inst/lib:\nDYLD_LIBRARY_PATH is unset\n\n== nvidia-smi ===================================================\nMon Jun 18 18:14:33 2018       \n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 384.111                Driver Version: 384.111                   |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  TITAN X (Pascal)    Off  | 00000000:01:00.0 Off |                  N/A |\n| 30%   50C    P8    22W / 250W |  11591MiB / 12187MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n|   1  GeForce GTX 108...  Off  | 00000000:02:00.0 Off |                  N/A |\n| 44%   39C    P2    60W / 250W |  10625MiB / 11172MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n                                                                               \n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID   Type   Process name                             Usage      |\n|=============================================================================|\n|    0      4713      C   ...3.6.2/envs/tensorflow-latest/bin/python 11581MiB |\n|    1      4713      C   ...3.6.2/envs/tensorflow-latest/bin/python 10615MiB |\n+-----------------------------------------------------------------------------+\n\n== cuda libs  ===================================================\n/usr/local/cuda-8.0/doc/man/man7/libcudart.7\n/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7\n/usr/local/cuda-8.0/lib64/libcudart_static.a\n/usr/local/cuda-8.0/lib64/libcudart.so.8.0.44\n/usr/local/cuda-9.0/doc/man/man7/libcudart.7\n/usr/local/cuda-9.0/doc/man/man7/libcudart.so.7\n/usr/local/cuda-9.0/lib64/libcudart_static.a\n/usr/local/cuda-9.0/lib64/libcudart.so.9.0.176\n/usr/local/cuda-7.5/lib/libcudart_static.a\n/usr/local/cuda-7.5/lib/libcudart.so.7.5.18\n/usr/local/cuda-7.5/doc/man/man7/libcudart.7\n/usr/local/cuda-7.5/doc/man/man7/libcudart.so.7\n/usr/local/cuda-7.5/lib64/libcudart_static.a\n/usr/local/cuda-7.5/lib64/libcudart.so.7.5.18", "body": "### Describe the problem\r\nPerforming QR factorization of relatively large matrices on the GPU is numerically unstable. I am unsure if it's a tensorflow issue, or an upstrea cuSOLVE issue, as I don't have the time to write a custom cuSOLVE C call to test. The issue is neither present on the CPU, nor in numpy.\r\n\r\nSteps to reproduce:\r\n\r\n```\r\nimport tensorflow as tf\r\ntf.enable_eager_execution()\r\n\r\nwith tf.device('/gpu:0'):\r\n    q, r = tf.qr(tf.random_normal((2048, 1024))\r\n    print(tf.norm(q, axis=0))\r\n    print(tf.reduce_sum(tf.cast(tf.abs(tf.norm(q, axis=0) - 1) > 1, tf.float32)))\r\n```\r\n\r\nRun this multiple times and you get *wildly* different results, sometimes all norms are almost 1.0, sometimes the last entries have \"slightly\" larger norms 1-10, sometimes the last norms are huge (example: 3.1662303e+11), and sometimes they are NaN.\r\n\r\nRunning in float64 does not solve the issue.\r\n\r\nRunning on the CPU does solve the issue.\r\n\r\n### System information\r\n\r\nTensorflow version as per `print(tf.GIT_VERSION, tf.VERSION)`:  `v1.7.0-3-g024aecf414 1.7.0` \r\n\r\nWhat follows is the output of `tf_env_collect.sh`:\r\n\r\nNote 1: I cannot upgrade to latest TF to check it there right now.\r\nNote 2: Multiple cuda versions are shown below, but only 9.0 is the first one in all `*PATH` variables.\r\n\r\n```\r\n== cat /etc/issue ===============================================\r\nLinux grimbergen 4.4.0-116-generic #140~14.04.1-Ubuntu SMP Fri Feb 16 09:25:20 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\r\nVERSION_ID=\"14.04\"\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nc++ (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4\r\nCopyright (C) 2013 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n== uname -a =====================================================\r\nLinux grimbergen 4.4.0-116-generic #140~14.04.1-Ubuntu SMP Fri Feb 16 09:25:20 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n== check pips ===================================================\r\nnumpy              1.14.2      \r\nprotobuf           3.5.2.post1 \r\ntensorflow-gpu     1.7.0       \r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.7.0\r\ntf.GIT_VERSION = v1.7.0-3-g024aecf414\r\ntf.COMPILER_VERSION = v1.7.0-3-g024aecf414\r\n/home/beyer/.pyenv/versions/tensorflow-latest/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH /home/beyer/inst/cudnn7/lib64:/usr/local/cuda-9.0/extras/CUPTI/lib64/:/usr/local/cuda-9.0/lib64:/home/beyer/inst/cudnn6/lib64:/usr/local/cuda-8.0/extras/CUPTI/lib64/:/usr/local/cuda-8.0/lib64:/home/beyer/inst/lib64:/home/beyer/inst/lib:\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\nMon Jun 18 18:14:33 2018       \r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 384.111                Driver Version: 384.111                   |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|===============================+======================+======================|\r\n|   0  TITAN X (Pascal)    Off  | 00000000:01:00.0 Off |                  N/A |\r\n| 30%   50C    P8    22W / 250W |  11591MiB / 12187MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   1  GeForce GTX 108...  Off  | 00000000:02:00.0 Off |                  N/A |\r\n| 44%   39C    P2    60W / 250W |  10625MiB / 11172MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID   Type   Process name                             Usage      |\r\n|=============================================================================|\r\n|    0      4713      C   ...3.6.2/envs/tensorflow-latest/bin/python 11581MiB |\r\n|    1      4713      C   ...3.6.2/envs/tensorflow-latest/bin/python 10615MiB |\r\n+-----------------------------------------------------------------------------+\r\n\r\n== cuda libs  ===================================================\r\n/usr/local/cuda-8.0/doc/man/man7/libcudart.7\r\n/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7\r\n/usr/local/cuda-8.0/lib64/libcudart_static.a\r\n/usr/local/cuda-8.0/lib64/libcudart.so.8.0.44\r\n/usr/local/cuda-9.0/doc/man/man7/libcudart.7\r\n/usr/local/cuda-9.0/doc/man/man7/libcudart.so.7\r\n/usr/local/cuda-9.0/lib64/libcudart_static.a\r\n/usr/local/cuda-9.0/lib64/libcudart.so.9.0.176\r\n/usr/local/cuda-7.5/lib/libcudart_static.a\r\n/usr/local/cuda-7.5/lib/libcudart.so.7.5.18\r\n/usr/local/cuda-7.5/doc/man/man7/libcudart.7\r\n/usr/local/cuda-7.5/doc/man/man7/libcudart.so.7\r\n/usr/local/cuda-7.5/lib64/libcudart_static.a\r\n/usr/local/cuda-7.5/lib64/libcudart.so.7.5.18\r\n\r\n"}