{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/227896775", "html_url": "https://github.com/tensorflow/tensorflow/issues/3000#issuecomment-227896775", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3000", "id": 227896775, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzg5Njc3NQ==", "user": {"login": "ibab", "id": 890531, "node_id": "MDQ6VXNlcjg5MDUzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/890531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibab", "html_url": "https://github.com/ibab", "followers_url": "https://api.github.com/users/ibab/followers", "following_url": "https://api.github.com/users/ibab/following{/other_user}", "gists_url": "https://api.github.com/users/ibab/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibab/subscriptions", "organizations_url": "https://api.github.com/users/ibab/orgs", "repos_url": "https://api.github.com/users/ibab/repos", "events_url": "https://api.github.com/users/ibab/events{/privacy}", "received_events_url": "https://api.github.com/users/ibab/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-22T22:28:08Z", "updated_at": "2016-06-22T22:28:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The problem might be that you're copying the contents of <code>arr</code> into the global tensorflow graph each time you call <code>tf.image.random_flip_left_right(arr)</code> (as this automatically creates a constant op to hold the contents of <code>arr</code>).<br>\nThe global graph persists until your script finishes.<br>\nYou could try to create an op that computes the flipped image and then pass in the array using <code>feed_dict</code>, as in this modified version of your script:</p>\n<pre><code>import tensorflow as tf\nimport psutil\nimport numpy as np\nimport Image\nimport sys\nimport gc\n\ndef printMemUsed(discript):\n    print(\"%s:\\t%d\" % (discript, psutil.virtual_memory().used))\n\ndef main(file):\n    sess = tf.InteractiveSession()\n    im = Image.open(file)\n    arr = np.array(im)\n    printMemUsed(\"After Array Creation\")\n    arr = flipArr(arr)\n    printMemUsed(\"After Tensor Conversion\")\n    del arr\n    printMemUsed(\"After Array Deletion\")\n\ndef flipArr(arr):\n    tf_arr = tf.placeholder(dtype=arr.dtype)\n    flipped = tf.image.random_flip_left_right(tf_arr)\n    arr = flipped.eval(feed_dict={tf_arr: arr})\n    return arr  \n\nif __name__ == '__main__':\n    main(sys.argv[1])\n    printMemUsed(\"After Scope Lost\")\n    gc.collect()\n    printMemUsed(\"After gc Collect\")\n</code></pre>\n<p>It could be helpful to run <code>print(tf.get_default_graph().as_graph_def())</code> to check what ends up in your graph after each iteration.</p>", "body_text": "The problem might be that you're copying the contents of arr into the global tensorflow graph each time you call tf.image.random_flip_left_right(arr) (as this automatically creates a constant op to hold the contents of arr).\nThe global graph persists until your script finishes.\nYou could try to create an op that computes the flipped image and then pass in the array using feed_dict, as in this modified version of your script:\nimport tensorflow as tf\nimport psutil\nimport numpy as np\nimport Image\nimport sys\nimport gc\n\ndef printMemUsed(discript):\n    print(\"%s:\\t%d\" % (discript, psutil.virtual_memory().used))\n\ndef main(file):\n    sess = tf.InteractiveSession()\n    im = Image.open(file)\n    arr = np.array(im)\n    printMemUsed(\"After Array Creation\")\n    arr = flipArr(arr)\n    printMemUsed(\"After Tensor Conversion\")\n    del arr\n    printMemUsed(\"After Array Deletion\")\n\ndef flipArr(arr):\n    tf_arr = tf.placeholder(dtype=arr.dtype)\n    flipped = tf.image.random_flip_left_right(tf_arr)\n    arr = flipped.eval(feed_dict={tf_arr: arr})\n    return arr  \n\nif __name__ == '__main__':\n    main(sys.argv[1])\n    printMemUsed(\"After Scope Lost\")\n    gc.collect()\n    printMemUsed(\"After gc Collect\")\n\nIt could be helpful to run print(tf.get_default_graph().as_graph_def()) to check what ends up in your graph after each iteration.", "body": "The problem might be that you're copying the contents of `arr` into the global tensorflow graph each time you call `tf.image.random_flip_left_right(arr)` (as this automatically creates a constant op to hold the contents of `arr`).\nThe global graph persists until your script finishes.\nYou could try to create an op that computes the flipped image and then pass in the array using `feed_dict`, as in this modified version of your script:\n\n```\nimport tensorflow as tf\nimport psutil\nimport numpy as np\nimport Image\nimport sys\nimport gc\n\ndef printMemUsed(discript):\n    print(\"%s:\\t%d\" % (discript, psutil.virtual_memory().used))\n\ndef main(file):\n    sess = tf.InteractiveSession()\n    im = Image.open(file)\n    arr = np.array(im)\n    printMemUsed(\"After Array Creation\")\n    arr = flipArr(arr)\n    printMemUsed(\"After Tensor Conversion\")\n    del arr\n    printMemUsed(\"After Array Deletion\")\n\ndef flipArr(arr):\n    tf_arr = tf.placeholder(dtype=arr.dtype)\n    flipped = tf.image.random_flip_left_right(tf_arr)\n    arr = flipped.eval(feed_dict={tf_arr: arr})\n    return arr  \n\nif __name__ == '__main__':\n    main(sys.argv[1])\n    printMemUsed(\"After Scope Lost\")\n    gc.collect()\n    printMemUsed(\"After gc Collect\")\n```\n\nIt could be helpful to run `print(tf.get_default_graph().as_graph_def())` to check what ends up in your graph after each iteration.\n"}