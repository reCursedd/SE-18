{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/228090424", "html_url": "https://github.com/tensorflow/tensorflow/issues/3000#issuecomment-228090424", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3000", "id": 228090424, "node_id": "MDEyOklzc3VlQ29tbWVudDIyODA5MDQyNA==", "user": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-23T15:37:05Z", "updated_at": "2016-06-23T15:37:05Z", "author_association": "MEMBER", "body_html": "<p>The comment by <a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/lbab/hovercard\" href=\"https://github.com/lbab\">@lbab</a> is correct - your original code was effectively adding all of the images to the graph as tensorflow constants!  (InteractiveSession probably increases the risk of this sort of mistake)  You could verify this by saving the graphdef to a file and opening it in an editor.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10762452\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zmimlitz\">@zmimlitz</a> Note: virtual address space size is not usually a good way to measure memory consumption (depending on all sorts of low level implementation details of the heap, thread stacks and other things, you may end up with lots of virtual pages not backed by physical memory).  Resident set size is usually a much better indicator of what pages are actually being used.  We have noticed that the default linux heap implementation seems to have some quite bad behavior in this respect when running TensorFlow.</p>\n<p>For problems like this, it is often informative to try running with the <a href=\"http://goog-perftools.sourceforge.net/doc/tcmalloc.html\" rel=\"nofollow\">TCMalloc</a> heap, which a) performs much better in both space and cost overheads, and b) includes a very useful heap profiler.</p>", "body_text": "The comment by @lbab is correct - your original code was effectively adding all of the images to the graph as tensorflow constants!  (InteractiveSession probably increases the risk of this sort of mistake)  You could verify this by saving the graphdef to a file and opening it in an editor.\n@zmimlitz Note: virtual address space size is not usually a good way to measure memory consumption (depending on all sorts of low level implementation details of the heap, thread stacks and other things, you may end up with lots of virtual pages not backed by physical memory).  Resident set size is usually a much better indicator of what pages are actually being used.  We have noticed that the default linux heap implementation seems to have some quite bad behavior in this respect when running TensorFlow.\nFor problems like this, it is often informative to try running with the TCMalloc heap, which a) performs much better in both space and cost overheads, and b) includes a very useful heap profiler.", "body": "The comment by @lbab is correct - your original code was effectively adding all of the images to the graph as tensorflow constants!  (InteractiveSession probably increases the risk of this sort of mistake)  You could verify this by saving the graphdef to a file and opening it in an editor. \n\n@zmimlitz Note: virtual address space size is not usually a good way to measure memory consumption (depending on all sorts of low level implementation details of the heap, thread stacks and other things, you may end up with lots of virtual pages not backed by physical memory).  Resident set size is usually a much better indicator of what pages are actually being used.  We have noticed that the default linux heap implementation seems to have some quite bad behavior in this respect when running TensorFlow.\n\nFor problems like this, it is often informative to try running with the [TCMalloc](http://goog-perftools.sourceforge.net/doc/tcmalloc.html) heap, which a) performs much better in both space and cost overheads, and b) includes a very useful heap profiler.\n"}