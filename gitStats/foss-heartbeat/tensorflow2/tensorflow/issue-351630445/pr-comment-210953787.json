{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210953787", "pull_request_review_id": 147281571, "id": 210953787, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1Mzc4Nw==", "diff_hunk": "@@ -228,61 +229,54 @@ struct CropAndResize<CPUDevice, T> {\n           continue;\n         }\n \n-        const float height_scale =\n-            (crop_height > 1)\n-                ? (y2 - y1) * (image_height - 1) / (crop_height - 1)\n-                : 0;\n-        const float width_scale =\n-            (crop_width > 1) ? (x2 - x1) * (image_width - 1) / (crop_width - 1)\n-                             : 0;\n-\n-        for (int y = 0; y < crop_height; ++y) {\n-          const float in_y = (crop_height > 1)\n-                                 ? y1 * (image_height - 1) + y * height_scale\n-                                 : 0.5 * (y1 + y2) * (image_height - 1);\n-          if (in_y < 0 || in_y > image_height - 1) {\n-            for (int x = 0; x < crop_width; ++x) {\n-              for (int d = 0; d < depth; ++d) {\n-                crops(b, y, x, d) = extrapolation_value;\n-              }\n-            }\n-            continue;\n+        if (method_name == \"bilinear\") {\n+          CachedInterpolation *interp_x = 0l, *interp_y = 0l;", "path": "tensorflow/core/kernels/crop_and_resize_op.cc", "position": null, "original_position": 44, "commit_id": "2bef68f68bb6dbbefee151ea853b92ac17bb5acc", "original_commit_id": "eecaed98a7b2b28cef76f6de55e173f490cb70f3", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "body": "Our style guides likes one declaration per line, and in the form \"CachedInterpolation* interp_x\" and we use nullptr instead of 0l for declaring the null pointer.\r\n\r\nAlso can you make these std::unique_ptrs for memory safety?", "created_at": "2018-08-17T15:49:26Z", "updated_at": "2018-11-05T16:08:34Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21681#discussion_r210953787", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21681", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210953787"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21681#discussion_r210953787"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21681"}}, "body_html": "<p>Our style guides likes one declaration per line, and in the form \"CachedInterpolation* interp_x\" and we use nullptr instead of 0l for declaring the null pointer.</p>\n<p>Also can you make these std::unique_ptrs for memory safety?</p>", "body_text": "Our style guides likes one declaration per line, and in the form \"CachedInterpolation* interp_x\" and we use nullptr instead of 0l for declaring the null pointer.\nAlso can you make these std::unique_ptrs for memory safety?"}