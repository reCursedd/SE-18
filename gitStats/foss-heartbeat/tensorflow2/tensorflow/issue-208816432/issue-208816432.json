{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7689", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7689/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7689/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7689/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7689", "id": 208816432, "node_id": "MDU6SXNzdWUyMDg4MTY0MzI=", "number": 7689, "title": "tf.nn.softmax errors out, when dim=<dim_size - 1> instead of -1", "user": {"login": "keven425", "id": 1742456, "node_id": "MDQ6VXNlcjE3NDI0NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1742456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keven425", "html_url": "https://github.com/keven425", "followers_url": "https://api.github.com/users/keven425/followers", "following_url": "https://api.github.com/users/keven425/following{/other_user}", "gists_url": "https://api.github.com/users/keven425/gists{/gist_id}", "starred_url": "https://api.github.com/users/keven425/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keven425/subscriptions", "organizations_url": "https://api.github.com/users/keven425/orgs", "repos_url": "https://api.github.com/users/keven425/repos", "events_url": "https://api.github.com/users/keven425/events{/privacy}", "received_events_url": "https://api.github.com/users/keven425/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "annarev", "id": 22060313, "node_id": "MDQ6VXNlcjIyMDYwMzEz", "avatar_url": "https://avatars0.githubusercontent.com/u/22060313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annarev", "html_url": "https://github.com/annarev", "followers_url": "https://api.github.com/users/annarev/followers", "following_url": "https://api.github.com/users/annarev/following{/other_user}", "gists_url": "https://api.github.com/users/annarev/gists{/gist_id}", "starred_url": "https://api.github.com/users/annarev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annarev/subscriptions", "organizations_url": "https://api.github.com/users/annarev/orgs", "repos_url": "https://api.github.com/users/annarev/repos", "events_url": "https://api.github.com/users/annarev/events{/privacy}", "received_events_url": "https://api.github.com/users/annarev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "annarev", "id": 22060313, "node_id": "MDQ6VXNlcjIyMDYwMzEz", "avatar_url": "https://avatars0.githubusercontent.com/u/22060313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annarev", "html_url": "https://github.com/annarev", "followers_url": "https://api.github.com/users/annarev/followers", "following_url": "https://api.github.com/users/annarev/following{/other_user}", "gists_url": "https://api.github.com/users/annarev/gists{/gist_id}", "starred_url": "https://api.github.com/users/annarev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annarev/subscriptions", "organizations_url": "https://api.github.com/users/annarev/orgs", "repos_url": "https://api.github.com/users/annarev/repos", "events_url": "https://api.github.com/users/annarev/events{/privacy}", "received_events_url": "https://api.github.com/users/annarev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-02-20T08:48:25Z", "updated_at": "2017-02-21T23:27:05Z", "closed_at": "2017-02-21T23:27:05Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>Environment info</h3>\n<p>Operating System:<br>\nMacOS 10.12.1</p>\n<p>Installed version of CUDA and cuDNN:<br>\nlrwxr-xr-x  1 root  wheel     50 Sep 26 15:00 /usr/local/cuda/lib/libcudart.8.0.dylib -&gt; /Developer/NVIDIA/CUDA-8.0/lib/libcudart.8.0.dylib<br>\nlrwxr-xr-x  1 root  wheel     47 Oct 24 21:11 /usr/local/cuda/lib/libcudnn.5.dylib -&gt; /Developer/NVIDIA/CUDA-8.0/lib/libcudnn.5.dylib</p>\n<p>Tensorflow version 0.12.1</p>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<pre><code>def test_softmax():\n  with tf.variable_scope(\"test_coattention_layer\"):\n    doc1_placeholder = tf.placeholder(tf.float32, shape=(None, 4, 3))\n\n  init = tf.global_variables_initializer()\n\n  with tf.Session() as session:\n    session.run(init)\n    input = np.array(range(2 * 4 * 3), dtype=np.float32).reshape((2, 4, 3))\n\n    softmax1 = tf.nn.softmax(doc1_placeholder, dim=-1) # &lt;======== THIS WORKS\n    softmax2 = tf.nn.softmax(doc1_placeholder, dim=2) # &lt;======== THIS BREAKS\n\n    print(\"doc1 = \" + str(input))\n    softmax1_out = session.run(softmax1, feed_dict={doc1_placeholder: input})\n    softmax2_out = session.run(softmax2, feed_dict={doc1_placeholder: input})\n    print(\"softmax1_out = \" + str(softmax1_out))\n    print(\"softmax2_out = \" + str(softmax2_out))\n\n</code></pre>\n<p>Error message:</p>\n<p>InvalidArgumentError (see above for traceback): Requires start &lt;= limit when delta &gt; 0: 3/2<br>\n[[Node: range_1 = Range[Tidx=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](range_1/start, Sub, range_1/delta)]]</p>", "body_text": "Environment info\nOperating System:\nMacOS 10.12.1\nInstalled version of CUDA and cuDNN:\nlrwxr-xr-x  1 root  wheel     50 Sep 26 15:00 /usr/local/cuda/lib/libcudart.8.0.dylib -> /Developer/NVIDIA/CUDA-8.0/lib/libcudart.8.0.dylib\nlrwxr-xr-x  1 root  wheel     47 Oct 24 21:11 /usr/local/cuda/lib/libcudnn.5.dylib -> /Developer/NVIDIA/CUDA-8.0/lib/libcudnn.5.dylib\nTensorflow version 0.12.1\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\ndef test_softmax():\n  with tf.variable_scope(\"test_coattention_layer\"):\n    doc1_placeholder = tf.placeholder(tf.float32, shape=(None, 4, 3))\n\n  init = tf.global_variables_initializer()\n\n  with tf.Session() as session:\n    session.run(init)\n    input = np.array(range(2 * 4 * 3), dtype=np.float32).reshape((2, 4, 3))\n\n    softmax1 = tf.nn.softmax(doc1_placeholder, dim=-1) # <======== THIS WORKS\n    softmax2 = tf.nn.softmax(doc1_placeholder, dim=2) # <======== THIS BREAKS\n\n    print(\"doc1 = \" + str(input))\n    softmax1_out = session.run(softmax1, feed_dict={doc1_placeholder: input})\n    softmax2_out = session.run(softmax2, feed_dict={doc1_placeholder: input})\n    print(\"softmax1_out = \" + str(softmax1_out))\n    print(\"softmax2_out = \" + str(softmax2_out))\n\n\nError message:\nInvalidArgumentError (see above for traceback): Requires start <= limit when delta > 0: 3/2\n[[Node: range_1 = Range[Tidx=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](range_1/start, Sub, range_1/delta)]]", "body": "### Environment info\r\nOperating System:\r\nMacOS 10.12.1\r\n\r\nInstalled version of CUDA and cuDNN: \r\nlrwxr-xr-x  1 root  wheel     50 Sep 26 15:00 /usr/local/cuda/lib/libcudart.8.0.dylib -> /Developer/NVIDIA/CUDA-8.0/lib/libcudart.8.0.dylib\r\nlrwxr-xr-x  1 root  wheel     47 Oct 24 21:11 /usr/local/cuda/lib/libcudnn.5.dylib -> /Developer/NVIDIA/CUDA-8.0/lib/libcudnn.5.dylib\r\n\r\nTensorflow version 0.12.1\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n```\r\ndef test_softmax():\r\n  with tf.variable_scope(\"test_coattention_layer\"):\r\n    doc1_placeholder = tf.placeholder(tf.float32, shape=(None, 4, 3))\r\n\r\n  init = tf.global_variables_initializer()\r\n\r\n  with tf.Session() as session:\r\n    session.run(init)\r\n    input = np.array(range(2 * 4 * 3), dtype=np.float32).reshape((2, 4, 3))\r\n\r\n    softmax1 = tf.nn.softmax(doc1_placeholder, dim=-1) # <======== THIS WORKS\r\n    softmax2 = tf.nn.softmax(doc1_placeholder, dim=2) # <======== THIS BREAKS\r\n\r\n    print(\"doc1 = \" + str(input))\r\n    softmax1_out = session.run(softmax1, feed_dict={doc1_placeholder: input})\r\n    softmax2_out = session.run(softmax2, feed_dict={doc1_placeholder: input})\r\n    print(\"softmax1_out = \" + str(softmax1_out))\r\n    print(\"softmax2_out = \" + str(softmax2_out))\r\n\r\n```\r\n\r\nError message:\r\n\r\nInvalidArgumentError (see above for traceback): Requires start <= limit when delta > 0: 3/2\r\n\t [[Node: range_1 = Range[Tidx=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](range_1/start, Sub, range_1/delta)]]\r\n"}