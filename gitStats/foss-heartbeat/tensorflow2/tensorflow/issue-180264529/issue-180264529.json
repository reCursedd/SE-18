{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4675", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4675/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4675/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4675/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4675", "id": 180264529, "node_id": "MDU6SXNzdWUxODAyNjQ1Mjk=", "number": 4675, "title": "LinearClassifier feature_columns overwritten in LinearClassifier.fit", "user": {"login": "benvand", "id": 3469840, "node_id": "MDQ6VXNlcjM0Njk4NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3469840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benvand", "html_url": "https://github.com/benvand", "followers_url": "https://api.github.com/users/benvand/followers", "following_url": "https://api.github.com/users/benvand/following{/other_user}", "gists_url": "https://api.github.com/users/benvand/gists{/gist_id}", "starred_url": "https://api.github.com/users/benvand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benvand/subscriptions", "organizations_url": "https://api.github.com/users/benvand/orgs", "repos_url": "https://api.github.com/users/benvand/repos", "events_url": "https://api.github.com/users/benvand/events{/privacy}", "received_events_url": "https://api.github.com/users/benvand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hengtze", "id": 1229575, "node_id": "MDQ6VXNlcjEyMjk1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1229575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hengtze", "html_url": "https://github.com/hengtze", "followers_url": "https://api.github.com/users/hengtze/followers", "following_url": "https://api.github.com/users/hengtze/following{/other_user}", "gists_url": "https://api.github.com/users/hengtze/gists{/gist_id}", "starred_url": "https://api.github.com/users/hengtze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hengtze/subscriptions", "organizations_url": "https://api.github.com/users/hengtze/orgs", "repos_url": "https://api.github.com/users/hengtze/repos", "events_url": "https://api.github.com/users/hengtze/events{/privacy}", "received_events_url": "https://api.github.com/users/hengtze/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hengtze", "id": 1229575, "node_id": "MDQ6VXNlcjEyMjk1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1229575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hengtze", "html_url": "https://github.com/hengtze", "followers_url": "https://api.github.com/users/hengtze/followers", "following_url": "https://api.github.com/users/hengtze/following{/other_user}", "gists_url": "https://api.github.com/users/hengtze/gists{/gist_id}", "starred_url": "https://api.github.com/users/hengtze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hengtze/subscriptions", "organizations_url": "https://api.github.com/users/hengtze/orgs", "repos_url": "https://api.github.com/users/hengtze/repos", "events_url": "https://api.github.com/users/hengtze/events{/privacy}", "received_events_url": "https://api.github.com/users/hengtze/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-09-30T09:51:54Z", "updated_at": "2017-06-16T23:35:01Z", "closed_at": "2017-06-16T23:35:01Z", "author_association": "NONE", "body_html": "<p><code>tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.fit</code><br>\neffectively returns<br>\n<code>tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator.fit</code><br>\n<code>Estimator.fit</code> calls:<br>\n<code>tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator._train_model</code><br>\nwhich has these lines:</p>\n<pre><code>      features, targets = input_fn()\n      self._check_inputs(features, targets)\n      train_op, loss_op = self._get_train_ops(features, targets)\n</code></pre>\n<p><code>tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator._check_inputs</code></p>\n<pre><code>    if self._features_info is not None:\n      ...\n    else:\n      self._features_info = tensor_signature.create_signatures(features)\n</code></pre>\n<p>So we get to a point where features, as derived from the input_fn, is treated as our feature columns set.</p>\n<p>In pseudo code:</p>\n<pre><code>def input_function()\n    return [foo, bar, baz], quux\n\nlc=LinearClassifier(feature_columns=[foo]) # We pass in what we want our feature column to be\nlc.fit(input_function) # run fit on out input function\nlc._feature_columns # repr _feature_columns on the instantiated classifier\n    [foo]\nlc.estimator._features_info # _features_info on the instantiated classifiers instantiated estimator\n    [foo, bar, baz]\n</code></pre>\n<h3>The issue is:</h3>\n<p>Although this line appears to indicate that we will be making an estimation based on the feature columns supplied:<br>\n<code>lc=LinearClassifier(feature_columns=[foo]) # We pass in what we want our feature column to be</code><br>\nWhat happens is that the passed in <code>feature_columns</code> is unused and instead the return from the input_function supplied to fit are used.</p>\n<p>Am I correct in thinking that if the <code>feature_columns</code> arg is supplied that only those columns should be used by the classifiers estimator?<br>\nThat when we instantiate the classifier we are setting the feature_columns we expect to be used?</p>\n<p>The work around for this is simply to only return the columns you need from your input function however I found this misleading.</p>\n<p>Point in the tutorial:<br>\nEither the code or the tutorial need to be changed.<br>\n<a href=\"https://www.tensorflow.org/versions/r0.10/tutorials/wide/index.html#defining-the-logistic-regression-model\" rel=\"nofollow\">https://www.tensorflow.org/versions/r0.10/tutorials/wide/index.html#defining-the-logistic-regression-model</a></p>\n<p>Error raised:<br>\n<code>WARNING:tensorflow:Setting feature info to</code><br>\nas per tensorflow/contrib/learn/python/learn/estimators/estimator.py:613</p>", "body_text": "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.fit\neffectively returns\ntensorflow.contrib.learn.python.learn.estimators.estimator.Estimator.fit\nEstimator.fit calls:\ntensorflow.contrib.learn.python.learn.estimators.estimator.Estimator._train_model\nwhich has these lines:\n      features, targets = input_fn()\n      self._check_inputs(features, targets)\n      train_op, loss_op = self._get_train_ops(features, targets)\n\ntensorflow.contrib.learn.python.learn.estimators.estimator.Estimator._check_inputs\n    if self._features_info is not None:\n      ...\n    else:\n      self._features_info = tensor_signature.create_signatures(features)\n\nSo we get to a point where features, as derived from the input_fn, is treated as our feature columns set.\nIn pseudo code:\ndef input_function()\n    return [foo, bar, baz], quux\n\nlc=LinearClassifier(feature_columns=[foo]) # We pass in what we want our feature column to be\nlc.fit(input_function) # run fit on out input function\nlc._feature_columns # repr _feature_columns on the instantiated classifier\n    [foo]\nlc.estimator._features_info # _features_info on the instantiated classifiers instantiated estimator\n    [foo, bar, baz]\n\nThe issue is:\nAlthough this line appears to indicate that we will be making an estimation based on the feature columns supplied:\nlc=LinearClassifier(feature_columns=[foo]) # We pass in what we want our feature column to be\nWhat happens is that the passed in feature_columns is unused and instead the return from the input_function supplied to fit are used.\nAm I correct in thinking that if the feature_columns arg is supplied that only those columns should be used by the classifiers estimator?\nThat when we instantiate the classifier we are setting the feature_columns we expect to be used?\nThe work around for this is simply to only return the columns you need from your input function however I found this misleading.\nPoint in the tutorial:\nEither the code or the tutorial need to be changed.\nhttps://www.tensorflow.org/versions/r0.10/tutorials/wide/index.html#defining-the-logistic-regression-model\nError raised:\nWARNING:tensorflow:Setting feature info to\nas per tensorflow/contrib/learn/python/learn/estimators/estimator.py:613", "body": "`tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.fit`\neffectively returns\n`tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator.fit`\n`Estimator.fit` calls:\n`tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator._train_model`\nwhich has these lines:\n\n```\n      features, targets = input_fn()\n      self._check_inputs(features, targets)\n      train_op, loss_op = self._get_train_ops(features, targets)\n```\n\n`tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator._check_inputs`\n\n```\n    if self._features_info is not None:\n      ...\n    else:\n      self._features_info = tensor_signature.create_signatures(features)\n```\n\nSo we get to a point where features, as derived from the input_fn, is treated as our feature columns set.\n\nIn pseudo code:\n\n```\ndef input_function()\n    return [foo, bar, baz], quux\n\nlc=LinearClassifier(feature_columns=[foo]) # We pass in what we want our feature column to be\nlc.fit(input_function) # run fit on out input function\nlc._feature_columns # repr _feature_columns on the instantiated classifier\n    [foo]\nlc.estimator._features_info # _features_info on the instantiated classifiers instantiated estimator\n    [foo, bar, baz]\n```\n### The issue is:\n\nAlthough this line appears to indicate that we will be making an estimation based on the feature columns supplied:\n`lc=LinearClassifier(feature_columns=[foo]) # We pass in what we want our feature column to be`\nWhat happens is that the passed in `feature_columns` is unused and instead the return from the input_function supplied to fit are used.\n\nAm I correct in thinking that if the `feature_columns` arg is supplied that only those columns should be used by the classifiers estimator?\nThat when we instantiate the classifier we are setting the feature_columns we expect to be used?\n\nThe work around for this is simply to only return the columns you need from your input function however I found this misleading.\n\nPoint in the tutorial:\nEither the code or the tutorial need to be changed.\nhttps://www.tensorflow.org/versions/r0.10/tutorials/wide/index.html#defining-the-logistic-regression-model\n\nError raised:\n`WARNING:tensorflow:Setting feature info to`\nas per tensorflow/contrib/learn/python/learn/estimators/estimator.py:613\n"}