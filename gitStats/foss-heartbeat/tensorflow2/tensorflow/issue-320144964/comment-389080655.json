{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/389080655", "html_url": "https://github.com/tensorflow/tensorflow/issues/19073#issuecomment-389080655", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19073", "id": 389080655, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTA4MDY1NQ==", "user": {"login": "ghostplant", "id": 12099308, "node_id": "MDQ6VXNlcjEyMDk5MzA4", "avatar_url": "https://avatars2.githubusercontent.com/u/12099308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghostplant", "html_url": "https://github.com/ghostplant", "followers_url": "https://api.github.com/users/ghostplant/followers", "following_url": "https://api.github.com/users/ghostplant/following{/other_user}", "gists_url": "https://api.github.com/users/ghostplant/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghostplant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghostplant/subscriptions", "organizations_url": "https://api.github.com/users/ghostplant/orgs", "repos_url": "https://api.github.com/users/ghostplant/repos", "events_url": "https://api.github.com/users/ghostplant/events{/privacy}", "received_events_url": "https://api.github.com/users/ghostplant/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-15T08:06:45Z", "updated_at": "2018-05-15T15:23:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6510203\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/reedwm\">@reedwm</a><br>\nBy using synthetic data source, here is the CUDA call counts:</p>\n<div class=\"highlight highlight-source-shell\"><pre>...\ncuEventQuery  x 23957788 <span class=\"pl-c1\">times</span>\n...\ncuMemcpyHtoDAsync_v2 x 590 <span class=\"pl-c1\">times</span>\ncuMemcpyDtoHAsync_v2 x 60 <span class=\"pl-c1\">times</span>\ncuMemcpyDtoDAsync_v2 x 63300 <span class=\"pl-c1\">times</span>\n...\ncudnnBatchNormalizationBackward x 12720\n...</pre></div>\n<p>It only costs ~400% cpus which is quick;</p>\n<p>However, by using real <code>--data-dir</code>, here is the CUDA call counts:</p>\n<div class=\"highlight highlight-source-shell\"><pre>...\ncuEventQuery  x 22843932 <span class=\"pl-c1\">times</span>\n...\ncuMemcpyHtoDAsync_v2 x 830 <span class=\"pl-c1\">times</span>\ncuMemcpyDtoHAsync_v2 x 60 <span class=\"pl-c1\">times</span>\ncuMemcpyDtoDAsync_v2 x 63300 <span class=\"pl-c1\">times</span>\n...\ncudnnBatchNormalizationBackward x 12720\n...</pre></div>\n<p>It displays that 99% CUDA calls are the same for 2 cases above, just except for <code>cuMemcpyHtoDAsync_v2</code>, in which the case of using <code>--data-dir</code> will have 240 (= 830 - 590) more of <code>cuMemcpyHtoDAsync_v2</code> (all these 240 additional calls are exactly 240 times of NCHW batch inputs for every mini-batch), but the CPU occupation increased to ~3200% CPUs. Can you explain what all these CPUs are doing in this case? e.g. Shuffling, argumentation? (even though, it still not necessary to cost so much CPU resources)</p>", "body_text": "@reedwm\nBy using synthetic data source, here is the CUDA call counts:\n...\ncuEventQuery  x 23957788 times\n...\ncuMemcpyHtoDAsync_v2 x 590 times\ncuMemcpyDtoHAsync_v2 x 60 times\ncuMemcpyDtoDAsync_v2 x 63300 times\n...\ncudnnBatchNormalizationBackward x 12720\n...\nIt only costs ~400% cpus which is quick;\nHowever, by using real --data-dir, here is the CUDA call counts:\n...\ncuEventQuery  x 22843932 times\n...\ncuMemcpyHtoDAsync_v2 x 830 times\ncuMemcpyDtoHAsync_v2 x 60 times\ncuMemcpyDtoDAsync_v2 x 63300 times\n...\ncudnnBatchNormalizationBackward x 12720\n...\nIt displays that 99% CUDA calls are the same for 2 cases above, just except for cuMemcpyHtoDAsync_v2, in which the case of using --data-dir will have 240 (= 830 - 590) more of cuMemcpyHtoDAsync_v2 (all these 240 additional calls are exactly 240 times of NCHW batch inputs for every mini-batch), but the CPU occupation increased to ~3200% CPUs. Can you explain what all these CPUs are doing in this case? e.g. Shuffling, argumentation? (even though, it still not necessary to cost so much CPU resources)", "body": "@reedwm \r\nBy using synthetic data source, here is the CUDA call counts:\r\n```sh\r\n...\r\ncuEventQuery  x 23957788 times\r\n...\r\ncuMemcpyHtoDAsync_v2 x 590 times\r\ncuMemcpyDtoHAsync_v2 x 60 times\r\ncuMemcpyDtoDAsync_v2 x 63300 times\r\n...\r\ncudnnBatchNormalizationBackward x 12720\r\n...\r\n```\r\nIt only costs ~400% cpus which is quick;\r\n\r\nHowever, by using real `--data-dir`, here is the CUDA call counts:\r\n```sh\r\n...\r\ncuEventQuery  x 22843932 times\r\n...\r\ncuMemcpyHtoDAsync_v2 x 830 times\r\ncuMemcpyDtoHAsync_v2 x 60 times\r\ncuMemcpyDtoDAsync_v2 x 63300 times\r\n...\r\ncudnnBatchNormalizationBackward x 12720\r\n...\r\n```\r\nIt displays that 99% CUDA calls are the same for 2 cases above, just except for `cuMemcpyHtoDAsync_v2`, in which the case of using `--data-dir` will have 240 (= 830 - 590) more of `cuMemcpyHtoDAsync_v2` (all these 240 additional calls are exactly 240 times of NCHW batch inputs for every mini-batch), but the CPU occupation increased to ~3200% CPUs. Can you explain what all these CPUs are doing in this case? e.g. Shuffling, argumentation? (even though, it still not necessary to cost so much CPU resources)\r\n"}