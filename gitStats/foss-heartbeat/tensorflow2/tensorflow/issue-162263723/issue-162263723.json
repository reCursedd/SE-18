{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3038", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3038/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3038/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3038/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3038", "id": 162263723, "node_id": "MDU6SXNzdWUxNjIyNjM3MjM=", "number": 3038, "title": "Incorrect tf.truncated_normal results on gpu", "user": {"login": "lovi9573", "id": 3078857, "node_id": "MDQ6VXNlcjMwNzg4NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3078857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lovi9573", "html_url": "https://github.com/lovi9573", "followers_url": "https://api.github.com/users/lovi9573/followers", "following_url": "https://api.github.com/users/lovi9573/following{/other_user}", "gists_url": "https://api.github.com/users/lovi9573/gists{/gist_id}", "starred_url": "https://api.github.com/users/lovi9573/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lovi9573/subscriptions", "organizations_url": "https://api.github.com/users/lovi9573/orgs", "repos_url": "https://api.github.com/users/lovi9573/repos", "events_url": "https://api.github.com/users/lovi9573/events{/privacy}", "received_events_url": "https://api.github.com/users/lovi9573/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-25T04:47:20Z", "updated_at": "2016-06-30T20:13:58Z", "closed_at": "2016-06-30T20:13:58Z", "author_association": "NONE", "body_html": "<p>I've narrowed the behavior I'm seeing to this small example</p>\n<pre><code>with tf.Session() as s : \n    with tf.device(DEVICE):\n      v = tf.Variable(tf.truncated_normal([2, 2], stddev=1.0, dtype=tf.float32))\n    with tf.device('/gpu:0'):\n      p = tf.placeholder( tf.float32, shape=(2,2))\n      product = tf.matmul(p,v)\n      s.run(tf.initialize_all_variables())\n      feed = {p: np.eye(2,2)}\n      product_res,v_res = s.run([product,v], feed_dict=feed)\n      print(v_res)\n      print(product_res)\n</code></pre>\n<p>When DEVICE is '/cpu:0' all is as expected.  With DEVICE as '/gpu:0', the output will be as expected for one execution, but output two identity matrices for all subsequent executions.  Running again with DEVICE='/cpu:0' resets the gpu behavior.</p>\n<h3>Environment info</h3>\n<p>Operating System: Fedora 23</p>\n<p>Installed version of CUDA and cuDNN:<br>\nI'm using CUDA 7.5 and cuDNN v5 with Driver Version: 367.27 on a gtx780<br>\n-rw-r--r--. 1 root    root      322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a<br>\nlrwxrwxrwx. 1 root    root          16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.7.5<br>\nlrwxrwxrwx. 1 root    root          19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -&gt; libcudart.so.7.5.18<br>\n-rwxr-xr-x. 1 root    root      383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18<br>\n-rw-r--r--. 1 root    root      720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a<br>\nlrwxrwxrwx. 1 jlovitt jlovitt       13 Apr 22 20:52 /usr/local/cuda/lib64/libcudnn.so -&gt; libcudnn.so.5<br>\nlrwxrwxrwx. 1 jlovitt jlovitt       17 Apr 22 20:52 /usr/local/cuda/lib64/libcudnn.so.5 -&gt; libcudnn.so.5.0.5<br>\n-rwxrwxr-x. 1 jlovitt jlovitt 59909104 Apr 22 18:15 /usr/local/cuda/lib64/libcudnn.so.5.0.5<br>\n-rw-rw-r--. 1 jlovitt jlovitt 58775484 Apr 22 18:15 /usr/local/cuda/lib64/libcudnn_static.a</p>\n<p>If installed from sources, provide the commit hash: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/84225a2b612fe748c9c923f0c1cb8471911c3b77/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/84225a2b612fe748c9c923f0c1cb8471911c3b77\"><tt>84225a2</tt></a><br>\nI've added the following lines to third_party/gpus/crosstool/CROSSTOOL to compile with gcc 4.9.3</p>\n<pre><code>cxx_builtin_include_directory: \"/home/jlovitt/opt/gcc-4.9.3/include\"\ncxx_builtin_include_directory: \"/home/jlovitt/opt/gcc-4.9.3/lib/gcc/x86_64-unknown-linux-gnu/4.9.3/include\"\ncxx_builtin_include_directory: \"/home/jlovitt/opt/gcc-4.9.3/lib/gcc/x86_64-unknown-linux-gnu/4.9.3/include-fixed\"\n</code></pre>\n<h3>Output from execution producing incorrect results</h3>\n<pre><code>$ipython3 util/tensorflowtest.py \nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 780\nmajor: 3 minor: 5 memoryClockRate (GHz) 1.0195\npciBusID 0000:01:00.0\nTotal memory: 2.95GiB\nFree memory: 2.60GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:844] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 780, pci bus id: 0000:01:00.0)\n[[ 1.  0.]\n [ 0.  1.]]\n[[ 1.  0.]\n [ 0.  1.]]\n</code></pre>\n<h2>Update:</h2>\n<p>Recompiling with CUDA 7.0 and cuDNN v4 fixes the problem.</p>", "body_text": "I've narrowed the behavior I'm seeing to this small example\nwith tf.Session() as s : \n    with tf.device(DEVICE):\n      v = tf.Variable(tf.truncated_normal([2, 2], stddev=1.0, dtype=tf.float32))\n    with tf.device('/gpu:0'):\n      p = tf.placeholder( tf.float32, shape=(2,2))\n      product = tf.matmul(p,v)\n      s.run(tf.initialize_all_variables())\n      feed = {p: np.eye(2,2)}\n      product_res,v_res = s.run([product,v], feed_dict=feed)\n      print(v_res)\n      print(product_res)\n\nWhen DEVICE is '/cpu:0' all is as expected.  With DEVICE as '/gpu:0', the output will be as expected for one execution, but output two identity matrices for all subsequent executions.  Running again with DEVICE='/cpu:0' resets the gpu behavior.\nEnvironment info\nOperating System: Fedora 23\nInstalled version of CUDA and cuDNN:\nI'm using CUDA 7.5 and cuDNN v5 with Driver Version: 367.27 on a gtx780\n-rw-r--r--. 1 root    root      322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx. 1 root    root          16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx. 1 root    root          19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x. 1 root    root      383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r--. 1 root    root      720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx. 1 jlovitt jlovitt       13 Apr 22 20:52 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5\nlrwxrwxrwx. 1 jlovitt jlovitt       17 Apr 22 20:52 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.0.5\n-rwxrwxr-x. 1 jlovitt jlovitt 59909104 Apr 22 18:15 /usr/local/cuda/lib64/libcudnn.so.5.0.5\n-rw-rw-r--. 1 jlovitt jlovitt 58775484 Apr 22 18:15 /usr/local/cuda/lib64/libcudnn_static.a\nIf installed from sources, provide the commit hash: 84225a2\nI've added the following lines to third_party/gpus/crosstool/CROSSTOOL to compile with gcc 4.9.3\ncxx_builtin_include_directory: \"/home/jlovitt/opt/gcc-4.9.3/include\"\ncxx_builtin_include_directory: \"/home/jlovitt/opt/gcc-4.9.3/lib/gcc/x86_64-unknown-linux-gnu/4.9.3/include\"\ncxx_builtin_include_directory: \"/home/jlovitt/opt/gcc-4.9.3/lib/gcc/x86_64-unknown-linux-gnu/4.9.3/include-fixed\"\n\nOutput from execution producing incorrect results\n$ipython3 util/tensorflowtest.py \nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 780\nmajor: 3 minor: 5 memoryClockRate (GHz) 1.0195\npciBusID 0000:01:00.0\nTotal memory: 2.95GiB\nFree memory: 2.60GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:844] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 780, pci bus id: 0000:01:00.0)\n[[ 1.  0.]\n [ 0.  1.]]\n[[ 1.  0.]\n [ 0.  1.]]\n\nUpdate:\nRecompiling with CUDA 7.0 and cuDNN v4 fixes the problem.", "body": "I've narrowed the behavior I'm seeing to this small example\n\n```\nwith tf.Session() as s : \n    with tf.device(DEVICE):\n      v = tf.Variable(tf.truncated_normal([2, 2], stddev=1.0, dtype=tf.float32))\n    with tf.device('/gpu:0'):\n      p = tf.placeholder( tf.float32, shape=(2,2))\n      product = tf.matmul(p,v)\n      s.run(tf.initialize_all_variables())\n      feed = {p: np.eye(2,2)}\n      product_res,v_res = s.run([product,v], feed_dict=feed)\n      print(v_res)\n      print(product_res)\n```\n\nWhen DEVICE is '/cpu:0' all is as expected.  With DEVICE as '/gpu:0', the output will be as expected for one execution, but output two identity matrices for all subsequent executions.  Running again with DEVICE='/cpu:0' resets the gpu behavior.\n### Environment info\n\nOperating System: Fedora 23\n\nInstalled version of CUDA and cuDNN: \nI'm using CUDA 7.5 and cuDNN v5 with Driver Version: 367.27 on a gtx780\n-rw-r--r--. 1 root    root      322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx. 1 root    root          16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx. 1 root    root          19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x. 1 root    root      383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r--. 1 root    root      720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx. 1 jlovitt jlovitt       13 Apr 22 20:52 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5\nlrwxrwxrwx. 1 jlovitt jlovitt       17 Apr 22 20:52 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.0.5\n-rwxrwxr-x. 1 jlovitt jlovitt 59909104 Apr 22 18:15 /usr/local/cuda/lib64/libcudnn.so.5.0.5\n-rw-rw-r--. 1 jlovitt jlovitt 58775484 Apr 22 18:15 /usr/local/cuda/lib64/libcudnn_static.a\n\nIf installed from sources, provide the commit hash: 84225a2b612fe748c9c923f0c1cb8471911c3b77\nI've added the following lines to third_party/gpus/crosstool/CROSSTOOL to compile with gcc 4.9.3\n\n```\ncxx_builtin_include_directory: \"/home/jlovitt/opt/gcc-4.9.3/include\"\ncxx_builtin_include_directory: \"/home/jlovitt/opt/gcc-4.9.3/lib/gcc/x86_64-unknown-linux-gnu/4.9.3/include\"\ncxx_builtin_include_directory: \"/home/jlovitt/opt/gcc-4.9.3/lib/gcc/x86_64-unknown-linux-gnu/4.9.3/include-fixed\"\n```\n### Output from execution producing incorrect results\n\n```\n$ipython3 util/tensorflowtest.py \nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 780\nmajor: 3 minor: 5 memoryClockRate (GHz) 1.0195\npciBusID 0000:01:00.0\nTotal memory: 2.95GiB\nFree memory: 2.60GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:844] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 780, pci bus id: 0000:01:00.0)\n[[ 1.  0.]\n [ 0.  1.]]\n[[ 1.  0.]\n [ 0.  1.]]\n```\n## Update:\n\nRecompiling with CUDA 7.0 and cuDNN v4 fixes the problem.\n"}