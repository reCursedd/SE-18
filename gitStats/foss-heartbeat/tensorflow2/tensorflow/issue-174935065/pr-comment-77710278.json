{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/77710278", "pull_request_review_id": null, "id": 77710278, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3NzEwMjc4", "diff_hunk": "@@ -282,8 +282,14 @@ def apply_gradients(self, grads_and_vars, global_step=None, name=None):\n     # This is a default implementation of apply_gradients() that can be shared\n     # by most optimizers.  It relies on the subclass implementing the following\n     # methods: _create_slots(), _prepare(), _apply_dense(), and _apply_sparse().\n+\n+    grads_to_tensors_list = []\n+    vars_list = []\n     grads_and_vars = tuple(grads_and_vars)  # Make sure repeat iteration works\n     for g, v in grads_and_vars:\n+      # Check if gradient is Variable. If so, convert it to tensor\n+      if isinstance(g, (variables.Variable)):\n+        g = tf.convert_to_tensor(g)", "path": "tensorflow/python/training/optimizer.py", "position": null, "original_position": 20, "commit_id": "06210b87746ae38351f0472041e47a26c4940d07", "original_commit_id": "a5130bdc84de94d98e81270adb1724fd28513a78", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "It seems like it would be simpler (and cover more cases) to do:\n\n``` python\nif g is not None:\n  try:\n    g = ops.convert_to_tensor_or_indexed_slices(g)\n  except TypeError:\n    raise TypeError(\n        \"Gradient must be convertible to a Tensor or IndexedSlices, or None: %s\" %g)\n```\n", "created_at": "2016-09-06T20:18:17Z", "updated_at": "2016-09-07T15:58:30Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4191#discussion_r77710278", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4191", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/77710278"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4191#discussion_r77710278"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4191"}}, "body_html": "<p>It seems like it would be simpler (and cover more cases) to do:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">if</span> g <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span>:\n  <span class=\"pl-k\">try</span>:\n    g <span class=\"pl-k\">=</span> ops.convert_to_tensor_or_indexed_slices(g)\n  <span class=\"pl-k\">except</span> <span class=\"pl-c1\">TypeError</span>:\n    <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">TypeError</span>(\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Gradient must be convertible to a Tensor or IndexedSlices, or None: <span class=\"pl-c1\">%s</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span>g)</pre></div>", "body_text": "It seems like it would be simpler (and cover more cases) to do:\nif g is not None:\n  try:\n    g = ops.convert_to_tensor_or_indexed_slices(g)\n  except TypeError:\n    raise TypeError(\n        \"Gradient must be convertible to a Tensor or IndexedSlices, or None: %s\" %g)"}