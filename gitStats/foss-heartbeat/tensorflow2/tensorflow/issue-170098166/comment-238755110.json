{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/238755110", "html_url": "https://github.com/tensorflow/tensorflow/issues/3705#issuecomment-238755110", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3705", "id": 238755110, "node_id": "MDEyOklzc3VlQ29tbWVudDIzODc1NTExMA==", "user": {"login": "DjangoPeng", "id": 16943353, "node_id": "MDQ6VXNlcjE2OTQzMzUz", "avatar_url": "https://avatars3.githubusercontent.com/u/16943353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DjangoPeng", "html_url": "https://github.com/DjangoPeng", "followers_url": "https://api.github.com/users/DjangoPeng/followers", "following_url": "https://api.github.com/users/DjangoPeng/following{/other_user}", "gists_url": "https://api.github.com/users/DjangoPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/DjangoPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DjangoPeng/subscriptions", "organizations_url": "https://api.github.com/users/DjangoPeng/orgs", "repos_url": "https://api.github.com/users/DjangoPeng/repos", "events_url": "https://api.github.com/users/DjangoPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/DjangoPeng/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-10T03:16:27Z", "updated_at": "2016-08-10T06:47:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Now I add the <code>init_tokens_op</code> and <code>chief_queue_runner</code>.  It cause a AttributeError!</p>\n<pre><code>Traceback (most recent call last):\n  File \"rnn/translate/translate.py\", line 378, in &lt;module&gt;\n    tf.app.run()\n  File \"/home/dl/anaconda2/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 30, in run\n    sys.exit(main(sys.argv))\n  File \"rnn/translate/translate.py\", line 375, in main\n    train()\n  File \"rnn/translate/translate.py\", line 197, in train\n    sv.start_queue_runners(sess, [model.chief_queue_runner])\n  File \"/home/dl/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/supervisor.py\", line 717, in start_queue_runners\n    threads.extend(qr.create_threads(sess, coord=self._coord, daemon=True,\nAttributeError: 'function' object has no attribute 'create_threads'\n</code></pre>\n<p>seq2seq_model.py:</p>\n<pre><code>    #part of __init__()\n    ...\n    params = tf.trainable_variables()\n    if not forward_only:\n      self.gradient_norms = []\n      self.updates = []\n      opt = tf.train.GradientDescentOptimizer(self.learning_rate)\n\n      opt = tf.train.SyncReplicasOptimizer(\n        opt,\n        replicas_to_aggregate=num_workers,\n        replica_id=task_id,\n        total_num_replicas=num_workers)\n        #variable_averages=self.exp_moving_averager,\n        #variable_to_average=self.variable_to_average)\n\n\n      for b in xrange(len(buckets)):\n        gradients = tf.gradients(self.losses[b], params)\n        clipped_gradients, norm = tf.clip_by_global_norm(gradients,\n                                                         max_gradient_norm)\n        self.gradient_norms.append(norm)\n        self.updates.append(opt.apply_gradients(\n              zip(clipped_gradients, params), global_step=self.global_step))\n\n\n    self.saver = tf.train.Saver(tf.all_variables())\n    print(\"finish creating model\")\n\n\n    self.init_tokens_op = opt.get_init_tokens_op\n    self.chief_queue_runner = opt.get_chief_queue_runner\n    ...\n\n</code></pre>\n<p>translate.py:</p>\n<pre><code>          ...\n          model = seq2seq_model.Seq2SeqModel(\n                FLAGS.en_vocab_size, FLAGS.fr_vocab_size, _buckets,\n                FLAGS.size, FLAGS.num_layers, FLAGS.max_gradient_norm, FLAGS.batch_size,\n                FLAGS.learning_rate, FLAGS.learning_rate_decay_factor,\n                forward_only=False, is_chief=is_chief, \n                num_workers=FLAGS.num_workers, task_id=FLAGS.task_index)\n\n          init_op = tf.initialize_all_variables()\n          summary_op = tf.merge_all_summaries()\n\n          sv = tf.train.Supervisor(is_chief=is_chief,\n                                  logdir=logdir,\n                                  init_op=init_op,\n                                  summary_op = None,\n                                  saver=model.saver,\n                                  save_model_secs=FLAGS.save_interval_secs,\n                                  global_step=model.global_step)          \n\n          sess_config = tf.ConfigProto(\n              allow_soft_placement=True,\n              log_device_placement=True)\n\n          with sv.managed_session(server.target, config=sess_config) as sess:\n              if FLAGS.sync_replicas and is_chief:\n                sv.start_queue_runners(sess, [model.chief_queue_runner])\n                sess.run(model.init_tokens_op)\n                ...\n</code></pre>", "body_text": "Now I add the init_tokens_op and chief_queue_runner.  It cause a AttributeError!\nTraceback (most recent call last):\n  File \"rnn/translate/translate.py\", line 378, in <module>\n    tf.app.run()\n  File \"/home/dl/anaconda2/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 30, in run\n    sys.exit(main(sys.argv))\n  File \"rnn/translate/translate.py\", line 375, in main\n    train()\n  File \"rnn/translate/translate.py\", line 197, in train\n    sv.start_queue_runners(sess, [model.chief_queue_runner])\n  File \"/home/dl/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/supervisor.py\", line 717, in start_queue_runners\n    threads.extend(qr.create_threads(sess, coord=self._coord, daemon=True,\nAttributeError: 'function' object has no attribute 'create_threads'\n\nseq2seq_model.py:\n    #part of __init__()\n    ...\n    params = tf.trainable_variables()\n    if not forward_only:\n      self.gradient_norms = []\n      self.updates = []\n      opt = tf.train.GradientDescentOptimizer(self.learning_rate)\n\n      opt = tf.train.SyncReplicasOptimizer(\n        opt,\n        replicas_to_aggregate=num_workers,\n        replica_id=task_id,\n        total_num_replicas=num_workers)\n        #variable_averages=self.exp_moving_averager,\n        #variable_to_average=self.variable_to_average)\n\n\n      for b in xrange(len(buckets)):\n        gradients = tf.gradients(self.losses[b], params)\n        clipped_gradients, norm = tf.clip_by_global_norm(gradients,\n                                                         max_gradient_norm)\n        self.gradient_norms.append(norm)\n        self.updates.append(opt.apply_gradients(\n              zip(clipped_gradients, params), global_step=self.global_step))\n\n\n    self.saver = tf.train.Saver(tf.all_variables())\n    print(\"finish creating model\")\n\n\n    self.init_tokens_op = opt.get_init_tokens_op\n    self.chief_queue_runner = opt.get_chief_queue_runner\n    ...\n\n\ntranslate.py:\n          ...\n          model = seq2seq_model.Seq2SeqModel(\n                FLAGS.en_vocab_size, FLAGS.fr_vocab_size, _buckets,\n                FLAGS.size, FLAGS.num_layers, FLAGS.max_gradient_norm, FLAGS.batch_size,\n                FLAGS.learning_rate, FLAGS.learning_rate_decay_factor,\n                forward_only=False, is_chief=is_chief, \n                num_workers=FLAGS.num_workers, task_id=FLAGS.task_index)\n\n          init_op = tf.initialize_all_variables()\n          summary_op = tf.merge_all_summaries()\n\n          sv = tf.train.Supervisor(is_chief=is_chief,\n                                  logdir=logdir,\n                                  init_op=init_op,\n                                  summary_op = None,\n                                  saver=model.saver,\n                                  save_model_secs=FLAGS.save_interval_secs,\n                                  global_step=model.global_step)          \n\n          sess_config = tf.ConfigProto(\n              allow_soft_placement=True,\n              log_device_placement=True)\n\n          with sv.managed_session(server.target, config=sess_config) as sess:\n              if FLAGS.sync_replicas and is_chief:\n                sv.start_queue_runners(sess, [model.chief_queue_runner])\n                sess.run(model.init_tokens_op)\n                ...", "body": "Now I add the `init_tokens_op` and `chief_queue_runner`.  It cause a AttributeError!\n\n```\nTraceback (most recent call last):\n  File \"rnn/translate/translate.py\", line 378, in <module>\n    tf.app.run()\n  File \"/home/dl/anaconda2/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 30, in run\n    sys.exit(main(sys.argv))\n  File \"rnn/translate/translate.py\", line 375, in main\n    train()\n  File \"rnn/translate/translate.py\", line 197, in train\n    sv.start_queue_runners(sess, [model.chief_queue_runner])\n  File \"/home/dl/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/supervisor.py\", line 717, in start_queue_runners\n    threads.extend(qr.create_threads(sess, coord=self._coord, daemon=True,\nAttributeError: 'function' object has no attribute 'create_threads'\n```\n\nseq2seq_model.py:\n\n```\n    #part of __init__()\n    ...\n    params = tf.trainable_variables()\n    if not forward_only:\n      self.gradient_norms = []\n      self.updates = []\n      opt = tf.train.GradientDescentOptimizer(self.learning_rate)\n\n      opt = tf.train.SyncReplicasOptimizer(\n        opt,\n        replicas_to_aggregate=num_workers,\n        replica_id=task_id,\n        total_num_replicas=num_workers)\n        #variable_averages=self.exp_moving_averager,\n        #variable_to_average=self.variable_to_average)\n\n\n      for b in xrange(len(buckets)):\n        gradients = tf.gradients(self.losses[b], params)\n        clipped_gradients, norm = tf.clip_by_global_norm(gradients,\n                                                         max_gradient_norm)\n        self.gradient_norms.append(norm)\n        self.updates.append(opt.apply_gradients(\n              zip(clipped_gradients, params), global_step=self.global_step))\n\n\n    self.saver = tf.train.Saver(tf.all_variables())\n    print(\"finish creating model\")\n\n\n    self.init_tokens_op = opt.get_init_tokens_op\n    self.chief_queue_runner = opt.get_chief_queue_runner\n    ...\n\n```\n\ntranslate.py:\n\n```\n          ...\n          model = seq2seq_model.Seq2SeqModel(\n                FLAGS.en_vocab_size, FLAGS.fr_vocab_size, _buckets,\n                FLAGS.size, FLAGS.num_layers, FLAGS.max_gradient_norm, FLAGS.batch_size,\n                FLAGS.learning_rate, FLAGS.learning_rate_decay_factor,\n                forward_only=False, is_chief=is_chief, \n                num_workers=FLAGS.num_workers, task_id=FLAGS.task_index)\n\n          init_op = tf.initialize_all_variables()\n          summary_op = tf.merge_all_summaries()\n\n          sv = tf.train.Supervisor(is_chief=is_chief,\n                                  logdir=logdir,\n                                  init_op=init_op,\n                                  summary_op = None,\n                                  saver=model.saver,\n                                  save_model_secs=FLAGS.save_interval_secs,\n                                  global_step=model.global_step)          \n\n          sess_config = tf.ConfigProto(\n              allow_soft_placement=True,\n              log_device_placement=True)\n\n          with sv.managed_session(server.target, config=sess_config) as sess:\n              if FLAGS.sync_replicas and is_chief:\n                sv.start_queue_runners(sess, [model.chief_queue_runner])\n                sess.run(model.init_tokens_op)\n                ...\n```\n"}