{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/413509448", "html_url": "https://github.com/tensorflow/tensorflow/issues/20334#issuecomment-413509448", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20334", "id": 413509448, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzUwOTQ0OA==", "user": {"login": "2649", "id": 17809849, "node_id": "MDQ6VXNlcjE3ODA5ODQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/17809849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/2649", "html_url": "https://github.com/2649", "followers_url": "https://api.github.com/users/2649/followers", "following_url": "https://api.github.com/users/2649/following{/other_user}", "gists_url": "https://api.github.com/users/2649/gists{/gist_id}", "starred_url": "https://api.github.com/users/2649/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/2649/subscriptions", "organizations_url": "https://api.github.com/users/2649/orgs", "repos_url": "https://api.github.com/users/2649/repos", "events_url": "https://api.github.com/users/2649/events{/privacy}", "received_events_url": "https://api.github.com/users/2649/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-16T11:11:17Z", "updated_at": "2018-08-16T11:14:19Z", "author_association": "NONE", "body_html": "<p>I extracted the variables of this layer and performed only one convolution. Now I get a different error, but the behaviour is the same. It falsely uses valid padding although I pass \"<code>SAME\"</code> as padding.</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\ninput_tensor = tf.placeholder(tf.float32, (30, 298, 298, 8))\ny_tensor = tf.placeholder(tf.float32, (30, 298, 298, 8))\nx = np.random.normal(size=(30, 298, 298, 8))\n\nweight = tf.get_variable(\"weight\", [2, 2, 8, 8])\nbias = tf.get_variable(\"bias\", [8])\nstride = [1, 2, 2, 1]\n\nconv = tf.nn.conv2d(input_tensor, weight, stride, padding=\"SAME\")\n\nloss = tf.losses.mean_squared_error(y_tensor, conv)\noptimizer = tf.train.GradientDescentOptimizer(0.001)\ntrain = optimizer.minimize(loss)\n\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\nsess.run(train, \n        feed_dict={\n            input_tensor: x,\n            y_tensor: x\n        })\n\n</code></pre>\n<p>The error:</p>\n<pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-23-fe1f6d95be60&gt; in &lt;module&gt;()\n     12 conv = tf.nn.conv2d(input_tensor, weight, stride, padding=\"SAME\")\n     13 \n---&gt; 14 loss = tf.losses.mean_squared_error(y_tensor, conv)\n     15 optimizer = tf.train.GradientDescentOptimizer(0.001)\n     16 train = optimizer.minimize(loss)\n\nC:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\losses\\losses_impl.py in mean_squared_error(labels, predictions, weights, scope, loss_collection, reduction)\n    627     predictions = math_ops.to_float(predictions)\n    628     labels = math_ops.to_float(labels)\n--&gt; 629     predictions.get_shape().assert_is_compatible_with(labels.get_shape())\n    630     losses = math_ops.squared_difference(predictions, labels)\n    631     return compute_weighted_loss(\n\nC:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_shape.py in assert_is_compatible_with(self, other)\n    842     \"\"\"\n    843     if not self.is_compatible_with(other):\n--&gt; 844       raise ValueError(\"Shapes %s and %s are incompatible\" % (self, other))\n    845 \n    846   def most_specific_compatible_shape(self, other):\n\nValueError: Shapes (30, 149, 149, 8) and (30, 298, 298, 8) are incompatible\n\n</code></pre>\n<p>I use version 1.8, but on my workstation 1.6 and it yields the same error.</p>", "body_text": "I extracted the variables of this layer and performed only one convolution. Now I get a different error, but the behaviour is the same. It falsely uses valid padding although I pass \"SAME\" as padding.\nimport tensorflow as tf\nimport numpy as np\n\ninput_tensor = tf.placeholder(tf.float32, (30, 298, 298, 8))\ny_tensor = tf.placeholder(tf.float32, (30, 298, 298, 8))\nx = np.random.normal(size=(30, 298, 298, 8))\n\nweight = tf.get_variable(\"weight\", [2, 2, 8, 8])\nbias = tf.get_variable(\"bias\", [8])\nstride = [1, 2, 2, 1]\n\nconv = tf.nn.conv2d(input_tensor, weight, stride, padding=\"SAME\")\n\nloss = tf.losses.mean_squared_error(y_tensor, conv)\noptimizer = tf.train.GradientDescentOptimizer(0.001)\ntrain = optimizer.minimize(loss)\n\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\nsess.run(train, \n        feed_dict={\n            input_tensor: x,\n            y_tensor: x\n        })\n\n\nThe error:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-23-fe1f6d95be60> in <module>()\n     12 conv = tf.nn.conv2d(input_tensor, weight, stride, padding=\"SAME\")\n     13 \n---> 14 loss = tf.losses.mean_squared_error(y_tensor, conv)\n     15 optimizer = tf.train.GradientDescentOptimizer(0.001)\n     16 train = optimizer.minimize(loss)\n\nC:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\losses\\losses_impl.py in mean_squared_error(labels, predictions, weights, scope, loss_collection, reduction)\n    627     predictions = math_ops.to_float(predictions)\n    628     labels = math_ops.to_float(labels)\n--> 629     predictions.get_shape().assert_is_compatible_with(labels.get_shape())\n    630     losses = math_ops.squared_difference(predictions, labels)\n    631     return compute_weighted_loss(\n\nC:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_shape.py in assert_is_compatible_with(self, other)\n    842     \"\"\"\n    843     if not self.is_compatible_with(other):\n--> 844       raise ValueError(\"Shapes %s and %s are incompatible\" % (self, other))\n    845 \n    846   def most_specific_compatible_shape(self, other):\n\nValueError: Shapes (30, 149, 149, 8) and (30, 298, 298, 8) are incompatible\n\n\nI use version 1.8, but on my workstation 1.6 and it yields the same error.", "body": "I extracted the variables of this layer and performed only one convolution. Now I get a different error, but the behaviour is the same. It falsely uses valid padding although I pass \"`SAME\"` as padding.\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ninput_tensor = tf.placeholder(tf.float32, (30, 298, 298, 8))\r\ny_tensor = tf.placeholder(tf.float32, (30, 298, 298, 8))\r\nx = np.random.normal(size=(30, 298, 298, 8))\r\n\r\nweight = tf.get_variable(\"weight\", [2, 2, 8, 8])\r\nbias = tf.get_variable(\"bias\", [8])\r\nstride = [1, 2, 2, 1]\r\n\r\nconv = tf.nn.conv2d(input_tensor, weight, stride, padding=\"SAME\")\r\n\r\nloss = tf.losses.mean_squared_error(y_tensor, conv)\r\noptimizer = tf.train.GradientDescentOptimizer(0.001)\r\ntrain = optimizer.minimize(loss)\r\n\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\nsess.run(train, \r\n        feed_dict={\r\n            input_tensor: x,\r\n            y_tensor: x\r\n        })\r\n\r\n```\r\nThe error:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-23-fe1f6d95be60> in <module>()\r\n     12 conv = tf.nn.conv2d(input_tensor, weight, stride, padding=\"SAME\")\r\n     13 \r\n---> 14 loss = tf.losses.mean_squared_error(y_tensor, conv)\r\n     15 optimizer = tf.train.GradientDescentOptimizer(0.001)\r\n     16 train = optimizer.minimize(loss)\r\n\r\nC:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\losses\\losses_impl.py in mean_squared_error(labels, predictions, weights, scope, loss_collection, reduction)\r\n    627     predictions = math_ops.to_float(predictions)\r\n    628     labels = math_ops.to_float(labels)\r\n--> 629     predictions.get_shape().assert_is_compatible_with(labels.get_shape())\r\n    630     losses = math_ops.squared_difference(predictions, labels)\r\n    631     return compute_weighted_loss(\r\n\r\nC:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_shape.py in assert_is_compatible_with(self, other)\r\n    842     \"\"\"\r\n    843     if not self.is_compatible_with(other):\r\n--> 844       raise ValueError(\"Shapes %s and %s are incompatible\" % (self, other))\r\n    845 \r\n    846   def most_specific_compatible_shape(self, other):\r\n\r\nValueError: Shapes (30, 149, 149, 8) and (30, 298, 298, 8) are incompatible\r\n\r\n```\r\n\r\nI use version 1.8, but on my workstation 1.6 and it yields the same error."}