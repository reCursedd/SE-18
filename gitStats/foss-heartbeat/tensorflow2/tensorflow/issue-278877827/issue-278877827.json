{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15086", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15086/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15086/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15086/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15086", "id": 278877827, "node_id": "MDU6SXNzdWUyNzg4Nzc4Mjc=", "number": 15086, "title": "ctc_loss value problem", "user": {"login": "xushenkun", "id": 1085843, "node_id": "MDQ6VXNlcjEwODU4NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xushenkun", "html_url": "https://github.com/xushenkun", "followers_url": "https://api.github.com/users/xushenkun/followers", "following_url": "https://api.github.com/users/xushenkun/following{/other_user}", "gists_url": "https://api.github.com/users/xushenkun/gists{/gist_id}", "starred_url": "https://api.github.com/users/xushenkun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xushenkun/subscriptions", "organizations_url": "https://api.github.com/users/xushenkun/orgs", "repos_url": "https://api.github.com/users/xushenkun/repos", "events_url": "https://api.github.com/users/xushenkun/events{/privacy}", "received_events_url": "https://api.github.com/users/xushenkun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-04T05:48:55Z", "updated_at": "2017-12-06T17:31:18Z", "closed_at": "2017-12-06T02:16:10Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 7 64bit</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.0</li>\n<li><strong>Python version</strong>: 3.6.0</li>\n<li><strong>Bazel version (if compiling from source)</strong>: None</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: None</li>\n<li><strong>CUDA/cuDNN version</strong>: None</li>\n<li><strong>GPU model and memory</strong>: None</li>\n<li><strong>Exact command to reproduce</strong>: None</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I used the source code below to calculate ctc loss. The logit and target should extremely have no loss between them. But the tf.nn.ctc_loss return 1.91309595. What's the meaning of the tf ctc_loss result?<br>\nBut I use my custom ctc loss function, which shows the loss is nearly zero.</p>\n<h3>Source code / logs</h3>\n<p>import numpy as np<br>\nimport tensorflow as tf<br>\nlogit = np.array([[[0.00001, 0.9999, 0.00001, 0.00001], [0.9999, 0.00001, 0.00001, 0.00001], [0.00001, 0.00001, 0.9999, 0.00001]]])<br>\nlogit = tf.constant(logit, dtype='float32')<br>\ntarget = tf.SparseTensor(indices=[[0, 0], [0, 2]], values=[1, 2], dense_shape=[1, 3])<br>\nseq = tf.constant(np.array([3]))<br>\nloss_tf = tf.nn.ctc_loss(target, logit, seq, time_major=False, ctc_merge_repeated=True)<br>\nsess = tf.InteractiveSession()<br>\ntf.global_variables_initializer().run()<br>\nprint(loss_tf.eval())</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 7 64bit\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.4.0\nPython version: 3.6.0\nBazel version (if compiling from source): None\nGCC/Compiler version (if compiling from source): None\nCUDA/cuDNN version: None\nGPU model and memory: None\nExact command to reproduce: None\n\nDescribe the problem\nI used the source code below to calculate ctc loss. The logit and target should extremely have no loss between them. But the tf.nn.ctc_loss return 1.91309595. What's the meaning of the tf ctc_loss result?\nBut I use my custom ctc loss function, which shows the loss is nearly zero.\nSource code / logs\nimport numpy as np\nimport tensorflow as tf\nlogit = np.array([[[0.00001, 0.9999, 0.00001, 0.00001], [0.9999, 0.00001, 0.00001, 0.00001], [0.00001, 0.00001, 0.9999, 0.00001]]])\nlogit = tf.constant(logit, dtype='float32')\ntarget = tf.SparseTensor(indices=[[0, 0], [0, 2]], values=[1, 2], dense_shape=[1, 3])\nseq = tf.constant(np.array([3]))\nloss_tf = tf.nn.ctc_loss(target, logit, seq, time_major=False, ctc_merge_repeated=True)\nsess = tf.InteractiveSession()\ntf.global_variables_initializer().run()\nprint(loss_tf.eval())", "body": "------------------------\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 7 64bit\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Python version**: 3.6.0\r\n- **Bazel version (if compiling from source)**: None\r\n- **GCC/Compiler version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: None\r\n- **Exact command to reproduce**: None\r\n\r\n### Describe the problem\r\nI used the source code below to calculate ctc loss. The logit and target should extremely have no loss between them. But the tf.nn.ctc_loss return 1.91309595. What's the meaning of the tf ctc_loss result? \r\nBut I use my custom ctc loss function, which shows the loss is nearly zero.\r\n\r\n### Source code / logs\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\nlogit = np.array([[[0.00001, 0.9999, 0.00001, 0.00001], [0.9999, 0.00001, 0.00001, 0.00001], [0.00001, 0.00001, 0.9999, 0.00001]]])\r\nlogit = tf.constant(logit, dtype='float32')\r\ntarget = tf.SparseTensor(indices=[[0, 0], [0, 2]], values=[1, 2], dense_shape=[1, 3])\r\nseq = tf.constant(np.array([3]))\r\nloss_tf = tf.nn.ctc_loss(target, logit, seq, time_major=False, ctc_merge_repeated=True)\r\nsess = tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\nprint(loss_tf.eval())\r\n"}