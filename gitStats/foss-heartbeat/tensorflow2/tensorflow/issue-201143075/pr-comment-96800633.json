{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/96800633", "pull_request_review_id": 17392705, "id": 96800633, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2ODAwNjMz", "diff_hunk": "@@ -1212,8 +1231,10 @@ def _get_predict_ops(self, features):\n     Returns:\n       `ModelFnOps` object.\n     \"\"\"\n+\n+    self._set_infer_mode_feature_signature(features)", "path": "tensorflow/contrib/learn/python/learn/estimators/estimator.py", "position": 123, "original_position": 106, "commit_id": "dfc7af0a8118555358076bac3237a62b9c824d93", "original_commit_id": "1221f1454a8897104db8da8cde10e87367b61cb2", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "body": "This line now implicitly disallows passing None as one of the elements in the features dict. This used to be allowed. \r\n\r\nThat is not wrong per se, but as it is now, the error you get is very obscure. We can disallow that (I cannot think of a good reason to pass None in features instead of not including a key). But can you add an explicit check and raise ValueError if any element of the features dict is None?", "created_at": "2017-01-19T06:49:16Z", "updated_at": "2017-02-19T20:26:24Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6887#discussion_r96800633", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6887", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/96800633"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6887#discussion_r96800633"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6887"}}, "body_html": "<p>This line now implicitly disallows passing None as one of the elements in the features dict. This used to be allowed.</p>\n<p>That is not wrong per se, but as it is now, the error you get is very obscure. We can disallow that (I cannot think of a good reason to pass None in features instead of not including a key). But can you add an explicit check and raise ValueError if any element of the features dict is None?</p>", "body_text": "This line now implicitly disallows passing None as one of the elements in the features dict. This used to be allowed.\nThat is not wrong per se, but as it is now, the error you get is very obscure. We can disallow that (I cannot think of a good reason to pass None in features instead of not including a key). But can you add an explicit check and raise ValueError if any element of the features dict is None?"}