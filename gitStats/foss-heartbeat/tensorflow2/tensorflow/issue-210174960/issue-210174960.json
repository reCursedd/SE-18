{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7866", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7866/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7866/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7866/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7866", "id": 210174960, "node_id": "MDU6SXNzdWUyMTAxNzQ5NjA=", "number": 7866, "title": "Build errors in versioned_computation_handle.{h,cc}", "user": {"login": "rajb245", "id": 10854480, "node_id": "MDQ6VXNlcjEwODU0NDgw", "avatar_url": "https://avatars0.githubusercontent.com/u/10854480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajb245", "html_url": "https://github.com/rajb245", "followers_url": "https://api.github.com/users/rajb245/followers", "following_url": "https://api.github.com/users/rajb245/following{/other_user}", "gists_url": "https://api.github.com/users/rajb245/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajb245/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajb245/subscriptions", "organizations_url": "https://api.github.com/users/rajb245/orgs", "repos_url": "https://api.github.com/users/rajb245/repos", "events_url": "https://api.github.com/users/rajb245/events{/privacy}", "received_events_url": "https://api.github.com/users/rajb245/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-02-24T22:26:28Z", "updated_at": "2017-04-18T16:21:27Z", "closed_at": "2017-04-18T16:21:27Z", "author_association": "NONE", "body_html": "<h3>Issue summary</h3>\n<p>I'm running on Ubuntu 16.04, working from Tensorflow commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/904510eeaa40b0c8f982fbb679d827688cb35b01/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/904510eeaa40b0c8f982fbb679d827688cb35b01\"><tt>904510e</tt></a>. I ./configure'd it to use XLA, CUDA 8.0, cuDNN 5.1, and compute capability 6.1 for a Titan X (Pascal). NVIDIA drivers and CUDA are installed from the NVIDIA repos, while the cuDNN 5.1 deb files are downloaded from NVIDIA's website and installed using dpkg. I'm trying to build tensorflow via</p>\n<p><code>bazel build --config opt --config=cuda --verbose_failures //tensorflow/tools/pip_package:build_pip_package</code></p>\n<p>Everything goes fine until it gets to compiling <code>./tensorflow/compiler/xla/service/versioned_computation_handle.h</code><br>\nand the associated cc file. The error seems to be that certain \"#includes\" aren't made in this file:</p>\n<pre><code>In file included from tensorflow/compiler/xla/service/versioned_computation_handle.cc:16:0:\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:33:19: error: 'int64' does not name a type\n   using Version = int64;\n                   ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:36:3: error: 'Version' does not name a type\n   Version version;\n   ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:38:3: error: 'string' does not name a type\n   string ToString() const;\n   ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h: In member function 'bool xla::VersionedComputationHandle::operator==(const xla::VersionedComputationHandle&amp;) const':\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:41:13: error: 'version' was not declared in this scope\n            (version == other.version);\n             ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:41:30: error: 'const struct xla::VersionedComputationHandle' has no member named 'version'\n            (version == other.version);\n                              ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h: In member function 'bool xla::VersionedComputationHandle::operator&lt;(const xla::VersionedComputationHandle&amp;) const':\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:46:15: error: 'version' was not declared in this scope\n              (version &lt; other.version)));\n               ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:46:31: error: 'const struct xla::VersionedComputationHandle' has no member named 'version'\n              (version &lt; other.version)));\n                               ^\ntensorflow/compiler/xla/service/versioned_computation_handle.cc: At global scope:\ntensorflow/compiler/xla/service/versioned_computation_handle.cc:22:1: error: 'string' does not name a type\n string VersionedComputationHandle::ToString() const {\n ^\ntensorflow/compiler/xla/service/versioned_computation_handle.cc: In function 'std::ostream&amp; xla::operator&lt;&lt;(std::ostream&amp;, const xla::VersionedComputationHandle&amp;)':\ntensorflow/compiler/xla/service/versioned_computation_handle.cc:28:27: error: 'const struct xla::VersionedComputationHandle' has no member named 'ToString'\n   out &lt;&lt; versioned_handle.ToString();\n                           ^\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\n</code></pre>\n<h3>Related GitHub issues</h3>\n<p>Seems to be related to the following, except I'm not on MacOS:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"209820319\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7819\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7819/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/7819\">#7819</a></p>\n<h3>Environment info</h3>\n<p>gcc (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609 (from gcc --version)<br>\nCuda compilation tools, release 8.0, V8.0.61 (from nvcc --version)</p>\n<p>CUDA 8.0 from NVIDIA repos (Linux, x86_64, Ubuntu, 16.04)<br>\ncuDNN from nvidia downloads page (<a href=\"https://developer.nvidia.com/rdp/cudnn-download\" rel=\"nofollow\">https://developer.nvidia.com/rdp/cudnn-download</a>), runtime and developer debs for Ubuntu 14.04. Even though I'm running on 16.04 and the debs are for 14.04, this has worked for me in the past and seems unrelated to my issue. The cuDNN debs were installed with dpkg -i</p>\n<p>CUDA libs folder</p>\n<pre><code>user@SYS-E300-8D-1:/usr/local/cuda-8.0/lib64$ ls -l libcud*\n-rw-r--r-- 1 root root 556000 Jan 26 18:48 libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jan 26 18:51 libcudart.so -&gt; libcudart.so.8.0\nlrwxrwxrwx 1 root root     19 Jan 26 18:51 libcudart.so.8.0 -&gt; libcudart.so.8.0.61\n-rw-r--r-- 1 root root 415432 Jan 26 18:48 libcudart.so.8.0.61\n-rw-r--r-- 1 root root 775162 Jan 26 18:48 libcudart_static.a\n</code></pre>\n<pre><code>user@SYS-E300-8D-1:~/tensorflow$ bazel version\nBuild label: 0.4.4\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Wed Feb 1 18:54:21 2017 (1485975261)\nBuild timestamp: 1485975261\nBuild timestamp as int: 1485975261\n</code></pre>\n<h3>What I tried</h3>\n<p>I'm playing around with including inttypes.h in the header in question, or possibly using an old school typedef instead of that fancy C++11 \"using fancyName = literalType\" syntax. Regardless, I wanted to file the bug before I get too deep into fixing it since it takes a while to recompile, even if I just change one line and run Bazel again.</p>", "body_text": "Issue summary\nI'm running on Ubuntu 16.04, working from Tensorflow commit 904510e. I ./configure'd it to use XLA, CUDA 8.0, cuDNN 5.1, and compute capability 6.1 for a Titan X (Pascal). NVIDIA drivers and CUDA are installed from the NVIDIA repos, while the cuDNN 5.1 deb files are downloaded from NVIDIA's website and installed using dpkg. I'm trying to build tensorflow via\nbazel build --config opt --config=cuda --verbose_failures //tensorflow/tools/pip_package:build_pip_package\nEverything goes fine until it gets to compiling ./tensorflow/compiler/xla/service/versioned_computation_handle.h\nand the associated cc file. The error seems to be that certain \"#includes\" aren't made in this file:\nIn file included from tensorflow/compiler/xla/service/versioned_computation_handle.cc:16:0:\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:33:19: error: 'int64' does not name a type\n   using Version = int64;\n                   ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:36:3: error: 'Version' does not name a type\n   Version version;\n   ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:38:3: error: 'string' does not name a type\n   string ToString() const;\n   ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h: In member function 'bool xla::VersionedComputationHandle::operator==(const xla::VersionedComputationHandle&) const':\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:41:13: error: 'version' was not declared in this scope\n            (version == other.version);\n             ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:41:30: error: 'const struct xla::VersionedComputationHandle' has no member named 'version'\n            (version == other.version);\n                              ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h: In member function 'bool xla::VersionedComputationHandle::operator<(const xla::VersionedComputationHandle&) const':\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:46:15: error: 'version' was not declared in this scope\n              (version < other.version)));\n               ^\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:46:31: error: 'const struct xla::VersionedComputationHandle' has no member named 'version'\n              (version < other.version)));\n                               ^\ntensorflow/compiler/xla/service/versioned_computation_handle.cc: At global scope:\ntensorflow/compiler/xla/service/versioned_computation_handle.cc:22:1: error: 'string' does not name a type\n string VersionedComputationHandle::ToString() const {\n ^\ntensorflow/compiler/xla/service/versioned_computation_handle.cc: In function 'std::ostream& xla::operator<<(std::ostream&, const xla::VersionedComputationHandle&)':\ntensorflow/compiler/xla/service/versioned_computation_handle.cc:28:27: error: 'const struct xla::VersionedComputationHandle' has no member named 'ToString'\n   out << versioned_handle.ToString();\n                           ^\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\n\nRelated GitHub issues\nSeems to be related to the following, except I'm not on MacOS:\n#7819\nEnvironment info\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609 (from gcc --version)\nCuda compilation tools, release 8.0, V8.0.61 (from nvcc --version)\nCUDA 8.0 from NVIDIA repos (Linux, x86_64, Ubuntu, 16.04)\ncuDNN from nvidia downloads page (https://developer.nvidia.com/rdp/cudnn-download), runtime and developer debs for Ubuntu 14.04. Even though I'm running on 16.04 and the debs are for 14.04, this has worked for me in the past and seems unrelated to my issue. The cuDNN debs were installed with dpkg -i\nCUDA libs folder\nuser@SYS-E300-8D-1:/usr/local/cuda-8.0/lib64$ ls -l libcud*\n-rw-r--r-- 1 root root 556000 Jan 26 18:48 libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jan 26 18:51 libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root root     19 Jan 26 18:51 libcudart.so.8.0 -> libcudart.so.8.0.61\n-rw-r--r-- 1 root root 415432 Jan 26 18:48 libcudart.so.8.0.61\n-rw-r--r-- 1 root root 775162 Jan 26 18:48 libcudart_static.a\n\nuser@SYS-E300-8D-1:~/tensorflow$ bazel version\nBuild label: 0.4.4\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Wed Feb 1 18:54:21 2017 (1485975261)\nBuild timestamp: 1485975261\nBuild timestamp as int: 1485975261\n\nWhat I tried\nI'm playing around with including inttypes.h in the header in question, or possibly using an old school typedef instead of that fancy C++11 \"using fancyName = literalType\" syntax. Regardless, I wanted to file the bug before I get too deep into fixing it since it takes a while to recompile, even if I just change one line and run Bazel again.", "body": "### Issue summary\r\n\r\nI'm running on Ubuntu 16.04, working from Tensorflow commit 904510eeaa40b0c8f982fbb679d827688cb35b01. I ./configure'd it to use XLA, CUDA 8.0, cuDNN 5.1, and compute capability 6.1 for a Titan X (Pascal). NVIDIA drivers and CUDA are installed from the NVIDIA repos, while the cuDNN 5.1 deb files are downloaded from NVIDIA's website and installed using dpkg. I'm trying to build tensorflow via\r\n\r\n`bazel build --config opt --config=cuda --verbose_failures //tensorflow/tools/pip_package:build_pip_package`\r\n\r\nEverything goes fine until it gets to compiling `./tensorflow/compiler/xla/service/versioned_computation_handle.h`\r\nand the associated cc file. The error seems to be that certain \"#includes\" aren't made in this file:\r\n\r\n```\r\nIn file included from tensorflow/compiler/xla/service/versioned_computation_handle.cc:16:0:\r\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:33:19: error: 'int64' does not name a type\r\n   using Version = int64;\r\n                   ^\r\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:36:3: error: 'Version' does not name a type\r\n   Version version;\r\n   ^\r\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:38:3: error: 'string' does not name a type\r\n   string ToString() const;\r\n   ^\r\n./tensorflow/compiler/xla/service/versioned_computation_handle.h: In member function 'bool xla::VersionedComputationHandle::operator==(const xla::VersionedComputationHandle&) const':\r\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:41:13: error: 'version' was not declared in this scope\r\n            (version == other.version);\r\n             ^\r\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:41:30: error: 'const struct xla::VersionedComputationHandle' has no member named 'version'\r\n            (version == other.version);\r\n                              ^\r\n./tensorflow/compiler/xla/service/versioned_computation_handle.h: In member function 'bool xla::VersionedComputationHandle::operator<(const xla::VersionedComputationHandle&) const':\r\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:46:15: error: 'version' was not declared in this scope\r\n              (version < other.version)));\r\n               ^\r\n./tensorflow/compiler/xla/service/versioned_computation_handle.h:46:31: error: 'const struct xla::VersionedComputationHandle' has no member named 'version'\r\n              (version < other.version)));\r\n                               ^\r\ntensorflow/compiler/xla/service/versioned_computation_handle.cc: At global scope:\r\ntensorflow/compiler/xla/service/versioned_computation_handle.cc:22:1: error: 'string' does not name a type\r\n string VersionedComputationHandle::ToString() const {\r\n ^\r\ntensorflow/compiler/xla/service/versioned_computation_handle.cc: In function 'std::ostream& xla::operator<<(std::ostream&, const xla::VersionedComputationHandle&)':\r\ntensorflow/compiler/xla/service/versioned_computation_handle.cc:28:27: error: 'const struct xla::VersionedComputationHandle' has no member named 'ToString'\r\n   out << versioned_handle.ToString();\r\n                           ^\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\n```\r\n\r\n### Related GitHub issues\r\n\r\nSeems to be related to the following, except I'm not on MacOS:\r\nhttps://github.com/tensorflow/tensorflow/issues/7819\r\n\r\n### Environment info\r\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609 (from gcc --version)\r\nCuda compilation tools, release 8.0, V8.0.61 (from nvcc --version)\r\n\r\nCUDA 8.0 from NVIDIA repos (Linux, x86_64, Ubuntu, 16.04)\r\ncuDNN from nvidia downloads page (https://developer.nvidia.com/rdp/cudnn-download), runtime and developer debs for Ubuntu 14.04. Even though I'm running on 16.04 and the debs are for 14.04, this has worked for me in the past and seems unrelated to my issue. The cuDNN debs were installed with dpkg -i\r\n\r\nCUDA libs folder\r\n\r\n```\r\nuser@SYS-E300-8D-1:/usr/local/cuda-8.0/lib64$ ls -l libcud*\r\n-rw-r--r-- 1 root root 556000 Jan 26 18:48 libcudadevrt.a\r\nlrwxrwxrwx 1 root root     16 Jan 26 18:51 libcudart.so -> libcudart.so.8.0\r\nlrwxrwxrwx 1 root root     19 Jan 26 18:51 libcudart.so.8.0 -> libcudart.so.8.0.61\r\n-rw-r--r-- 1 root root 415432 Jan 26 18:48 libcudart.so.8.0.61\r\n-rw-r--r-- 1 root root 775162 Jan 26 18:48 libcudart_static.a\r\n```\r\n\r\n\r\n```\r\nuser@SYS-E300-8D-1:~/tensorflow$ bazel version\r\nBuild label: 0.4.4\r\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Wed Feb 1 18:54:21 2017 (1485975261)\r\nBuild timestamp: 1485975261\r\nBuild timestamp as int: 1485975261\r\n```\r\n\r\n### What I tried\r\n\r\nI'm playing around with including inttypes.h in the header in question, or possibly using an old school typedef instead of that fancy C++11 \"using fancyName = literalType\" syntax. Regardless, I wanted to file the bug before I get too deep into fixing it since it takes a while to recompile, even if I just change one line and run Bazel again."}