{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/273218654", "html_url": "https://github.com/tensorflow/tensorflow/pull/6868#issuecomment-273218654", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6868", "id": 273218654, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzIxODY1NA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-17T16:24:45Z", "updated_at": "2017-01-17T16:24:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So checking if backprops are real-valued for real-valued inputs and complex valued for complex valued inputs is more restrictive without ruling out mixed precision. I added <code>is_real</code> method to mirror <code>is_complex</code>, since the existing <code>is_floating</code> doesn't seem to cover variables or quantized types. What did you mean by whitelists of similar ops? What whitelist should I add?</p>", "body_text": "So checking if backprops are real-valued for real-valued inputs and complex valued for complex valued inputs is more restrictive without ruling out mixed precision. I added is_real method to mirror is_complex, since the existing is_floating doesn't seem to cover variables or quantized types. What did you mean by whitelists of similar ops? What whitelist should I add?", "body": "So checking if backprops are real-valued for real-valued inputs and complex valued for complex valued inputs is more restrictive without ruling out mixed precision. I added `is_real` method to mirror `is_complex`, since the existing `is_floating` doesn't seem to cover variables or quantized types. What did you mean by whitelists of similar ops? What whitelist should I add?"}