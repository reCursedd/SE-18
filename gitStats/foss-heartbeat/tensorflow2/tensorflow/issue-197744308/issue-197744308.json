{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6524", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6524/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6524/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6524/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6524", "id": 197744308, "node_id": "MDU6SXNzdWUxOTc3NDQzMDg=", "number": 6524, "title": "Feature request: Support reference counting on Java Tensor class", "user": {"login": "EronWright", "id": 1775518, "node_id": "MDQ6VXNlcjE3NzU1MTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1775518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EronWright", "html_url": "https://github.com/EronWright", "followers_url": "https://api.github.com/users/EronWright/followers", "following_url": "https://api.github.com/users/EronWright/following{/other_user}", "gists_url": "https://api.github.com/users/EronWright/gists{/gist_id}", "starred_url": "https://api.github.com/users/EronWright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EronWright/subscriptions", "organizations_url": "https://api.github.com/users/EronWright/orgs", "repos_url": "https://api.github.com/users/EronWright/repos", "events_url": "https://api.github.com/users/EronWright/events{/privacy}", "received_events_url": "https://api.github.com/users/EronWright/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, {"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-12-27T19:01:39Z", "updated_at": "2017-01-13T03:07:53Z", "closed_at": "2017-01-13T03:07:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The <code>Tensor</code> class of the new Java library would be more useful and easier to use with built-in reference counting, based on a common interface <code>RefCounted</code>.    This would be in lieu of <code>AutoCloseable</code>.</p>\n<p>I suggest that reference counting follow the Netty approach as described <a href=\"http://netty.io/wiki/reference-counted-objects.html\" rel=\"nofollow\">in the docs</a>.   A nice aspect is that it simplifies the common case of supplying an input tensor to <code>Session.Runner::feed()</code> or to <code>OperationBuilder::setAttr</code> (the caller needn't unref the tensor; the callee will unref it).  At the same time, a reference count is of more general utility than <code>AutoCloseable</code>.</p>\n<p>Please consider applying the idea to <code>Session</code> and <code>Graph</code> later.</p>", "body_text": "The Tensor class of the new Java library would be more useful and easier to use with built-in reference counting, based on a common interface RefCounted.    This would be in lieu of AutoCloseable.\nI suggest that reference counting follow the Netty approach as described in the docs.   A nice aspect is that it simplifies the common case of supplying an input tensor to Session.Runner::feed() or to OperationBuilder::setAttr (the caller needn't unref the tensor; the callee will unref it).  At the same time, a reference count is of more general utility than AutoCloseable.\nPlease consider applying the idea to Session and Graph later.", "body": "The `Tensor` class of the new Java library would be more useful and easier to use with built-in reference counting, based on a common interface `RefCounted`.    This would be in lieu of `AutoCloseable`.\r\n\r\nI suggest that reference counting follow the Netty approach as described [in the docs](http://netty.io/wiki/reference-counted-objects.html).   A nice aspect is that it simplifies the common case of supplying an input tensor to `Session.Runner::feed()` or to `OperationBuilder::setAttr` (the caller needn't unref the tensor; the callee will unref it).  At the same time, a reference count is of more general utility than `AutoCloseable`.\r\n\r\nPlease consider applying the idea to `Session` and `Graph` later.\r\n"}