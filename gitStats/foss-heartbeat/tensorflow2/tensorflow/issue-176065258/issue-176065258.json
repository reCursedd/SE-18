{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4303", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4303/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4303/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4303/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4303", "id": 176065258, "node_id": "MDU6SXNzdWUxNzYwNjUyNTg=", "number": 4303, "title": "Cannot use TensorArray with tf.scan", "user": {"login": "jeanm", "id": 107696, "node_id": "MDQ6VXNlcjEwNzY5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/107696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeanm", "html_url": "https://github.com/jeanm", "followers_url": "https://api.github.com/users/jeanm/followers", "following_url": "https://api.github.com/users/jeanm/following{/other_user}", "gists_url": "https://api.github.com/users/jeanm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeanm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeanm/subscriptions", "organizations_url": "https://api.github.com/users/jeanm/orgs", "repos_url": "https://api.github.com/users/jeanm/repos", "events_url": "https://api.github.com/users/jeanm/events{/privacy}", "received_events_url": "https://api.github.com/users/jeanm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-09T17:35:24Z", "updated_at": "2016-09-19T14:40:03Z", "closed_at": "2016-09-19T14:40:03Z", "author_association": "NONE", "body_html": "<p>I seem to be unable to use <code>TensorArray</code>s with <code>tf.scan</code>. I am running 0.10.0rc0 on Ubuntu 14.04 with Cuda Toolkit 7.5 and cuDNN v4.</p>\n<p>Here is a minimal example:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\narray <span class=\"pl-k\">=</span> tf.TensorArray(tf.float32, <span class=\"pl-v\">size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>)\nelements <span class=\"pl-k\">=</span> <span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">10</span>))\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">step</span>(<span class=\"pl-smi\">state</span>, <span class=\"pl-smi\">current_input</span>):\n    <span class=\"pl-k\">return</span> state.write(current_input, tf.zeros(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">100</span>]))\n\nout <span class=\"pl-k\">=</span> tf.scan(step, elements, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>array)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(tf.initialize_all_variables())\n    <span class=\"pl-c1\">print</span>(sess.run(out))</pre></div>\n<p>And the output is:</p>\n<pre><code>Traceback (most recent call last):\n  File \"array_test.py\", line 9, in &lt;module&gt;\n    out = tf.scan(step, elements, initializer=array)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/functional_ops.py\", line 521, in scan\n    a_flat = [ops.convert_to_tensor(init) for init in initializer_flat]\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/functional_ops.py\", line 521, in &lt;listcomp&gt;\n    a_flat = [ops.convert_to_tensor(init) for init in initializer_flat]\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 628, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 180, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 163, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 422, in make_tensor_proto\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 422, in &lt;listcomp&gt;\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/util/compat.py\", line 45, in as_bytes\n    (bytes_or_text,))\nTypeError: Expected binary or unicode string, got &lt;tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x7ff0db9309e8&gt;\n</code></pre>", "body_text": "I seem to be unable to use TensorArrays with tf.scan. I am running 0.10.0rc0 on Ubuntu 14.04 with Cuda Toolkit 7.5 and cuDNN v4.\nHere is a minimal example:\nimport tensorflow as tf\n\narray = tf.TensorArray(tf.float32, size=10)\nelements = list(range(10))\n\ndef step(state, current_input):\n    return state.write(current_input, tf.zeros(shape=[100]))\n\nout = tf.scan(step, elements, initializer=array)\n\nwith tf.Session() as sess:\n    sess.run(tf.initialize_all_variables())\n    print(sess.run(out))\nAnd the output is:\nTraceback (most recent call last):\n  File \"array_test.py\", line 9, in <module>\n    out = tf.scan(step, elements, initializer=array)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/functional_ops.py\", line 521, in scan\n    a_flat = [ops.convert_to_tensor(init) for init in initializer_flat]\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/functional_ops.py\", line 521, in <listcomp>\n    a_flat = [ops.convert_to_tensor(init) for init in initializer_flat]\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 628, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 180, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 163, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 422, in make_tensor_proto\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 422, in <listcomp>\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/util/compat.py\", line 45, in as_bytes\n    (bytes_or_text,))\nTypeError: Expected binary or unicode string, got <tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x7ff0db9309e8>", "body": "I seem to be unable to use `TensorArray`s with `tf.scan`. I am running 0.10.0rc0 on Ubuntu 14.04 with Cuda Toolkit 7.5 and cuDNN v4.\n\nHere is a minimal example:\n\n``` python\nimport tensorflow as tf\n\narray = tf.TensorArray(tf.float32, size=10)\nelements = list(range(10))\n\ndef step(state, current_input):\n    return state.write(current_input, tf.zeros(shape=[100]))\n\nout = tf.scan(step, elements, initializer=array)\n\nwith tf.Session() as sess:\n    sess.run(tf.initialize_all_variables())\n    print(sess.run(out))\n```\n\nAnd the output is:\n\n```\nTraceback (most recent call last):\n  File \"array_test.py\", line 9, in <module>\n    out = tf.scan(step, elements, initializer=array)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/functional_ops.py\", line 521, in scan\n    a_flat = [ops.convert_to_tensor(init) for init in initializer_flat]\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/functional_ops.py\", line 521, in <listcomp>\n    a_flat = [ops.convert_to_tensor(init) for init in initializer_flat]\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 628, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 180, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 163, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 422, in make_tensor_proto\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 422, in <listcomp>\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/util/compat.py\", line 45, in as_bytes\n    (bytes_or_text,))\nTypeError: Expected binary or unicode string, got <tensorflow.python.ops.tensor_array_ops.TensorArray object at 0x7ff0db9309e8>\n```\n"}