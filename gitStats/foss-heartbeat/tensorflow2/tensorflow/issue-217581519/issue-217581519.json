{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8777", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8777/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8777/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8777/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8777", "id": 217581519, "node_id": "MDU6SXNzdWUyMTc1ODE1MTk=", "number": 8777, "title": "scope issue of '_linear' method in 'tensorflow.python.ops.rnn_cell_impl' module", "user": {"login": "Gitsamshi", "id": 19702190, "node_id": "MDQ6VXNlcjE5NzAyMTkw", "avatar_url": "https://avatars2.githubusercontent.com/u/19702190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gitsamshi", "html_url": "https://github.com/Gitsamshi", "followers_url": "https://api.github.com/users/Gitsamshi/followers", "following_url": "https://api.github.com/users/Gitsamshi/following{/other_user}", "gists_url": "https://api.github.com/users/Gitsamshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gitsamshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gitsamshi/subscriptions", "organizations_url": "https://api.github.com/users/Gitsamshi/orgs", "repos_url": "https://api.github.com/users/Gitsamshi/repos", "events_url": "https://api.github.com/users/Gitsamshi/events{/privacy}", "received_events_url": "https://api.github.com/users/Gitsamshi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-28T14:35:49Z", "updated_at": "2017-03-31T02:35:37Z", "closed_at": "2017-03-31T02:35:37Z", "author_association": "NONE", "body_html": "<p>In 'core_rnn_cell_impl' module _linear method, the arg 'scope' is not used in the method, easily causing variable conflicts. eg:<br>\nwith tf.variable_scope(scope):<br>\nzw = core_rnn_cell_impl._linear(self.hyper_output, self.hyper_embedding_size, False, scope=scope + \"z\")<br>\nalpha = core_rnn_cell_impl._linear(zw, dimensions, False, scope=scope + \"alpha\")<br>\nzw, alpha(forgive me for the indent in format) although defined in their specific scope, they will collide each other for using the same variable name.</p>\n<p>I look up the 'core_rnn_cell_impl' code and I find the 'scope' arg has not been truly used.<br>\nThis is the 1.0.0 version:<br>\nscope = vs.get_variable_scope()<br>\nwith vs.variable_scope(scope) as outer_scope:</p>\n<p>This is the 0.12.0 version:<br>\nwith vs.variable_scope(scope or \"Linear\"):</p>\n<p>Please check if it's truly the problem, thanks a lot !</p>", "body_text": "In 'core_rnn_cell_impl' module _linear method, the arg 'scope' is not used in the method, easily causing variable conflicts. eg:\nwith tf.variable_scope(scope):\nzw = core_rnn_cell_impl._linear(self.hyper_output, self.hyper_embedding_size, False, scope=scope + \"z\")\nalpha = core_rnn_cell_impl._linear(zw, dimensions, False, scope=scope + \"alpha\")\nzw, alpha(forgive me for the indent in format) although defined in their specific scope, they will collide each other for using the same variable name.\nI look up the 'core_rnn_cell_impl' code and I find the 'scope' arg has not been truly used.\nThis is the 1.0.0 version:\nscope = vs.get_variable_scope()\nwith vs.variable_scope(scope) as outer_scope:\nThis is the 0.12.0 version:\nwith vs.variable_scope(scope or \"Linear\"):\nPlease check if it's truly the problem, thanks a lot !", "body": "\r\nIn 'core_rnn_cell_impl' module _linear method, the arg 'scope' is not used in the method, easily causing variable conflicts. eg:\r\nwith tf.variable_scope(scope):\r\n        zw = core_rnn_cell_impl._linear(self.hyper_output, self.hyper_embedding_size, False, scope=scope + \"z\")        \r\n        alpha = core_rnn_cell_impl._linear(zw, dimensions, False, scope=scope + \"alpha\")\r\nzw, alpha(forgive me for the indent in format) although defined in their specific scope, they will collide each other for using the same variable name.\r\n\r\nI look up the 'core_rnn_cell_impl' code and I find the 'scope' arg has not been truly used.\r\nThis is the 1.0.0 version:\r\nscope = vs.get_variable_scope()\r\nwith vs.variable_scope(scope) as outer_scope:\r\n\r\nThis is the 0.12.0 version:\r\nwith vs.variable_scope(scope or \"Linear\"):\r\n\r\nPlease check if it's truly the problem, thanks a lot !"}