{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/332283399", "html_url": "https://github.com/tensorflow/tensorflow/issues/13249#issuecomment-332283399", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13249", "id": 332283399, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjI4MzM5OQ==", "user": {"login": "abhishek-neurala", "id": 26091110, "node_id": "MDQ6VXNlcjI2MDkxMTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/26091110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhishek-neurala", "html_url": "https://github.com/abhishek-neurala", "followers_url": "https://api.github.com/users/abhishek-neurala/followers", "following_url": "https://api.github.com/users/abhishek-neurala/following{/other_user}", "gists_url": "https://api.github.com/users/abhishek-neurala/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhishek-neurala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhishek-neurala/subscriptions", "organizations_url": "https://api.github.com/users/abhishek-neurala/orgs", "repos_url": "https://api.github.com/users/abhishek-neurala/repos", "events_url": "https://api.github.com/users/abhishek-neurala/events{/privacy}", "received_events_url": "https://api.github.com/users/abhishek-neurala/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-26T18:00:37Z", "updated_at": "2017-09-26T18:00:56Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17731159\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/printdhruv\">@printdhruv</a>  I get your point. That'd come down to personal preferences I guess. If you're only using TF and can keep yourself up-to-date with the dependencies, your point is correct. However, if TF is just a small part of a larger codebase which is the case with me, then having backwards compatibility is important since the API changes in the newer versions might cause regression errors and updating the whole codebase to use the new API could become a challenge and might not be feasible. Hope that makes sense.</p>", "body_text": "@printdhruv  I get your point. That'd come down to personal preferences I guess. If you're only using TF and can keep yourself up-to-date with the dependencies, your point is correct. However, if TF is just a small part of a larger codebase which is the case with me, then having backwards compatibility is important since the API changes in the newer versions might cause regression errors and updating the whole codebase to use the new API could become a challenge and might not be feasible. Hope that makes sense.", "body": "@printdhruv  I get your point. That'd come down to personal preferences I guess. If you're only using TF and can keep yourself up-to-date with the dependencies, your point is correct. However, if TF is just a small part of a larger codebase which is the case with me, then having backwards compatibility is important since the API changes in the newer versions might cause regression errors and updating the whole codebase to use the new API could become a challenge and might not be feasible. Hope that makes sense. "}