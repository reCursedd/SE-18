{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/226380403", "pull_request_review_id": 166187226, "id": 226380403, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjM4MDQwMw==", "diff_hunk": "@@ -327,96 +517,100 @@\n         \"    total_loss = real_loss + generated_loss\\n\",\n         \"\\n\",\n         \"    return total_loss\"\n-      ]\n+      ],\n+      \"execution_count\": 0,\n+      \"outputs\": []\n     },\n     {\n-      \"cell_type\": \"code\",\n-      \"execution_count\": 0,\n       \"metadata\": {\n-        \"colab\": {},\n-        \"colab_type\": \"code\",\n-        \"id\": \"90BIcCKcDMxz\"\n+        \"id\": \"MgIc7i0th_Iu\",\n+        \"colab_type\": \"text\"\n       },\n-      \"outputs\": [],\n+      \"cell_type\": \"markdown\",\n       \"source\": [\n-        \"def generator_loss(generated_output):\\n\",\n-        \"    return tf.losses.sigmoid_cross_entropy(tf.ones_like(generated_output), generated_output)\"\n+        \"The discriminator and the generator optimizers are different since we will train two networks separately.\"\n       ]\n     },\n     {\n-      \"cell_type\": \"code\",\n-      \"execution_count\": 0,\n       \"metadata\": {\n-        \"colab\": {},\n+        \"id\": \"iWCn_PVdEJZ7\",\n         \"colab_type\": \"code\",\n-        \"id\": \"iWCn_PVdEJZ7\"\n+        \"colab\": {}\n       },\n-      \"outputs\": [],\n+      \"cell_type\": \"code\",\n       \"source\": [\n-        \"discriminator_optimizer = tf.train.AdamOptimizer(1e-4)\\n\",\n-        \"generator_optimizer = tf.train.AdamOptimizer(1e-4)\"\n-      ]\n+        \"generator_optimizer = tf.train.AdamOptimizer(1e-4)\\n\",\n+        \"discriminator_optimizer = tf.train.AdamOptimizer(1e-4)\"\n+      ],\n+      \"execution_count\": 0,\n+      \"outputs\": []\n     },\n     {\n-      \"cell_type\": \"markdown\",\n       \"metadata\": {\n-        \"colab_type\": \"text\",\n-        \"id\": \"mWtinsGDPJlV\"\n+        \"id\": \"mWtinsGDPJlV\",\n+        \"colab_type\": \"text\"\n       },\n+      \"cell_type\": \"markdown\",\n       \"source\": [\n-        \"## Checkpoints (Object-based saving)\"\n+        \"**Checkpoints (Object-based saving)**\"\n       ]\n     },\n     {\n-      \"cell_type\": \"code\",\n-      \"execution_count\": 0,\n       \"metadata\": {\n-        \"colab\": {},\n+        \"id\": \"CA1w-7s2POEy\",\n         \"colab_type\": \"code\",\n-        \"id\": \"CA1w-7s2POEy\"\n+        \"colab\": {}\n       },\n-      \"outputs\": [],\n+      \"cell_type\": \"code\",\n       \"source\": [\n         \"checkpoint_dir = './training_checkpoints'\\n\",\n         \"checkpoint_prefix = os.path.join(checkpoint_dir, \\\"ckpt\\\")\\n\",\n         \"checkpoint = tf.train.Checkpoint(generator_optimizer=generator_optimizer,\\n\",\n         \"                                 discriminator_optimizer=discriminator_optimizer,\\n\",\n         \"                                 generator=generator,\\n\",\n         \"                                 discriminator=discriminator)\"\n+      ],\n+      \"execution_count\": 0,\n+      \"outputs\": []\n+    },\n+    {\n+      \"metadata\": {\n+        \"id\": \"Rw1fkAczTQYh\",\n+        \"colab_type\": \"text\"\n+      },\n+      \"cell_type\": \"markdown\",\n+      \"source\": [\n+        \"## Set up GANs for Training\\n\",\n+        \"\\n\"\n       ]\n     },\n     {\n+      \"metadata\": {\n+        \"id\": \"5QC5BABamh_c\",\n+        \"colab_type\": \"text\"\n+      },\n       \"cell_type\": \"markdown\",\n+      \"source\": [\n+        \"Now it's time to put together the generator and discriminator to set up the Generative Adversarial Networks, as you wee the diagam in the beginning of the tutorial.\"", "path": "tensorflow/contrib/eager/python/examples/generative_examples/dcgan.ipynb", "position": null, "original_position": 706, "commit_id": "459bfb3b324e194be33aa66f38a71291f3d82b95", "original_commit_id": "37a9eb6162ca182ebb6cdf3d672b278c7d2d442d", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "body": "I think you did not mean to say \"as you wee the diagram\". See?", "created_at": "2018-10-18T16:37:27Z", "updated_at": "2018-10-24T17:54:02Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23035#discussion_r226380403", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23035", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/226380403"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23035#discussion_r226380403"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23035"}}, "body_html": "<p>I think you did not mean to say \"as you wee the diagram\". See?</p>", "body_text": "I think you did not mean to say \"as you wee the diagram\". See?"}