{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/226379578", "pull_request_review_id": 166187226, "id": 226379578, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjM3OTU3OA==", "diff_hunk": "@@ -1,78 +1,186 @@\n {\n+  \"nbformat\": 4,\n+  \"nbformat_minor\": 0,\n+  \"metadata\": {\n+    \"colab\": {\n+      \"name\": \"dcgan.ipynb\",\n+      \"version\": \"0.3.2\",\n+      \"provenance\": [],\n+      \"collapsed_sections\": []\n+    },\n+    \"kernelspec\": {\n+      \"display_name\": \"Python 3\",\n+      \"language\": \"python\",\n+      \"name\": \"python3\"\n+    },\n+    \"accelerator\": \"TPU\"\n+  },\n   \"cells\": [\n     {\n-      \"cell_type\": \"markdown\",\n       \"metadata\": {\n-        \"colab_type\": \"text\",\n-        \"id\": \"0TD5ZrvEMbhZ\"\n+        \"id\": \"0TD5ZrvEMbhZ\",\n+        \"colab_type\": \"text\"\n       },\n+      \"cell_type\": \"markdown\",\n       \"source\": [\n-        \"##### Copyright 2018 The TensorFlow Authors.\\n\",\n+        \"**Copyright 2018 The TensorFlow Authors**.\\n\",\n         \"\\n\",\n         \"Licensed under the Apache License, Version 2.0 (the \\\"License\\\").\\n\",\n         \"\\n\",\n-        \"# DCGAN: An example with tf.keras and eager\\n\",\n+        \"# Generating Handwritten Digits with DCGAN\\n\",\n         \"\\n\",\n-        \"\\u003ctable class=\\\"tfo-notebook-buttons\\\" align=\\\"left\\\"\\u003e\\u003ctd\\u003e\\n\",\n-        \"\\u003ca target=\\\"_blank\\\"  href=\\\"https://colab.research.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/generative_examples/dcgan.ipynb\\\"\\u003e\\n\",\n-        \"    \\u003cimg src=\\\"https://www.tensorflow.org/images/colab_logo_32px.png\\\" /\\u003eRun in Google Colab\\u003c/a\\u003e  \\n\",\n-        \"\\u003c/td\\u003e\\u003ctd\\u003e\\n\",\n-        \"\\u003ca target=\\\"_blank\\\"  href=\\\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/eager/python/examples/generative_examples/dcgan.ipynb\\\"\\u003e\\u003cimg width=32px src=\\\"https://www.tensorflow.org/images/GitHub-Mark-32px.png\\\" /\\u003eView source on GitHub\\u003c/a\\u003e\\u003c/td\\u003e\\u003c/table\\u003e\"\n+        \"<table class=\\\"tfo-notebook-buttons\\\" align=\\\"left\\\"><td>\\n\",\n+        \"<a target=\\\"_blank\\\"  href=\\\"https://colab.research.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/generative_examples/dcgan.ipynb\\\">\\n\",\n+        \"    <img src=\\\"https://www.tensorflow.org/images/colab_logo_32px.png\\\" />Run in Google Colab</a>  \\n\",\n+        \"</td><td>\\n\",\n+        \"<a target=\\\"_blank\\\"  href=\\\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/eager/python/examples/generative_examples/dcgan.ipynb\\\"><img width=32px src=\\\"https://www.tensorflow.org/images/GitHub-Mark-32px.png\\\" />View source on GitHub</a></td></table>\"\n+      ]\n+    },\n+    {\n+      \"metadata\": {\n+        \"id\": \"ITZuApL56Mny\",\n+        \"colab_type\": \"text\"\n+      },\n+      \"cell_type\": \"markdown\",\n+      \"source\": [\n+        \"This tutorial demonstrates how to generate images of handwritten digits with **Deep Convolutional Generative Adverserial Networks** ([DCGAN](https://arxiv.org/pdf/1511.06434.pdf)). The code is written in [tf.keras](https://www.tensorflow.org/programmers_guide/keras) with [eager execution](https://www.tensorflow.org/programmers_guide/eager) enabled. \"\n       ]\n     },\n     {\n+      \"metadata\": {\n+        \"id\": \"x2McrO9bMyLN\",\n+        \"colab_type\": \"toc\"\n+      },\n       \"cell_type\": \"markdown\",\n+      \"source\": [\n+        \">[Generating Handwritten Digits with DCGAN](#scrollTo=0TD5ZrvEMbhZ)\\n\",\n+        \"\\n\",\n+        \">>[What are GANs?](#scrollTo=2MbKJY38Puy9)\\n\",\n+        \"\\n\",\n+        \">>>[Import TensorFlow and enable eager execution](#scrollTo=e1_Y75QXJS6h)\\n\",\n+        \"\\n\",\n+        \">>>[Load the dataset](#scrollTo=iYn4MdZnKCey)\\n\",\n+        \"\\n\",\n+        \">>>[Use tf.data to create batches and shuffle the dataset](#scrollTo=PIGN6ouoQxt3)\\n\",\n+        \"\\n\",\n+        \">>[Create the models](#scrollTo=THY-sZMiQ4UV)\\n\",\n+        \"\\n\",\n+        \">>>[The Generator Model](#scrollTo=-tEyxE-GMC48)\\n\",\n+        \"\\n\",\n+        \">>>[The Discriminator model](#scrollTo=D0IKnaCtg6WE)\\n\",\n+        \"\\n\",\n+        \">>[Define the loss functions and the optimizer](#scrollTo=0FMYgY_mPfTi)\\n\",\n+        \"\\n\",\n+        \">>>[Generator loss](#scrollTo=Jd-3GCUEiKtv)\\n\",\n+        \"\\n\",\n+        \">>>[Discriminator loss](#scrollTo=PKY_iPSPNWoj)\\n\",\n+        \"\\n\",\n+        \">>[Set up GANs for Training](#scrollTo=Rw1fkAczTQYh)\\n\",\n+        \"\\n\",\n+        \">>[Train the GANs](#scrollTo=dZrd4CdjR-Fp)\\n\",\n+        \"\\n\",\n+        \">>[Generated images](#scrollTo=P4M_vIbUi7c0)\\n\",\n+        \"\\n\",\n+        \">>[Learn more about GANs](#scrollTo=k6qC-SbjK0yW)\\n\",\n+        \"\\n\"\n+      ]\n+    },\n+    {\n       \"metadata\": {\n-        \"colab_type\": \"text\",\n-        \"id\": \"ITZuApL56Mny\"\n+        \"id\": \"2MbKJY38Puy9\",\n+        \"colab_type\": \"text\"\n       },\n+      \"cell_type\": \"markdown\",\n       \"source\": [\n-        \"This notebook demonstrates how to generate images of handwritten digits using [tf.keras](https://www.tensorflow.org/programmers_guide/keras) and [eager execution](https://www.tensorflow.org/programmers_guide/eager). To do so, we use Deep Convolutional Generative Adverserial Networks ([DCGAN](https://arxiv.org/pdf/1511.06434.pdf)).\\n\",\n+        \"## What are GANs?\\n\",\n+        \"GANs standards for **Generative Adversarial Networks** and they are a type of deep **generative** models. MIT [Intro to Deep Learning](http://introtodeeplearning.com/) lecture on **Deep Generative Models** has a great intro to generative models as well as GANs. ([video](https://youtu.be/JVb54xhEw6Y) | [slides](http://introtodeeplearning.com/materials/2018_6S191_Lecture4.pdf)). We have included more learning resources on these subjects in the \\\"Learn more about GANs\\\" section at the end of the tutorial.\\n\",\n+        \"\\n\",\n+        \"Many deep learning models, for example using a CNN for classification, are based on optimization: finding the low value of the cost function. GANs are different because there are at least two players (or network models): a generator and a discriminator and each has its own cost. Training GANs is like a two-player game (**adversarial**) such as chess where each player plays against each other.\\n\",\n         \"\\n\",\n-        \"This model takes about ~30 seconds per epoch (using tf.contrib.eager.defun to create graph functions) to train on a single Tesla K80 on Colab, as of July 2018.\\n\",\n+        \" **Deep Convolutional GAN** (DCGAN) is a type of GANs and in this tutorial we will use DCGAN to generate MNIST digits.\\n\",\n         \"\\n\",\n-        \"Below is the output generated after training the generator and discriminator models for 150 epochs.\\n\",\n+        \"GANs can be used to generate new images that no one has seen before. The generator will generate fake images while the discriminator will classify whether the generated images are fake. An** equilibrium** will reach in the game when\u00a0the generator makes data that looks identical to the training data\u00a0and the discriminator can no longer tell the difference between the fake images (generated by the generator) and the real images (the training data). \\n\",\n+        \"\\n\",\n+        \"![alt text](https://github.com/margaretmz/tensorflow/blob/margaret-dcgan/tensorflow/contrib/eager/python/examples/generative_examples/gans_diagram.png?raw=1)\\n\",\n+        \"\\n\",\n+        \"While the generator and discriminator competes against each other, the discriminator also teaches the generator\u200a. Over time the generator starts to produce images that resemble the training data that is fed into the discriminator, in this case the MNIST digits. Below is the output with images generated after training the generator and discriminator models for 150 epochs.\\n\",", "path": "tensorflow/contrib/eager/python/examples/generative_examples/dcgan.ipynb", "position": null, "original_position": 121, "commit_id": "459bfb3b324e194be33aa66f38a71291f3d82b95", "original_commit_id": "37a9eb6162ca182ebb6cdf3d672b278c7d2d442d", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "body": "\"competes against\" -> \"compete against\"", "created_at": "2018-10-18T16:34:53Z", "updated_at": "2018-10-24T17:54:02Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23035#discussion_r226379578", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23035", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/226379578"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23035#discussion_r226379578"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23035"}}, "body_html": "<p>\"competes against\" -&gt; \"compete against\"</p>", "body_text": "\"competes against\" -> \"compete against\""}