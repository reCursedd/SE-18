{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23049", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23049/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23049/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23049/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23049", "id": 371149844, "node_id": "MDU6SXNzdWUzNzExNDk4NDQ=", "number": 23049, "title": "Ghost Batch Normalization performance", "user": {"login": "MustafaMustafa", "id": 1043083, "node_id": "MDQ6VXNlcjEwNDMwODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1043083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MustafaMustafa", "html_url": "https://github.com/MustafaMustafa", "followers_url": "https://api.github.com/users/MustafaMustafa/followers", "following_url": "https://api.github.com/users/MustafaMustafa/following{/other_user}", "gists_url": "https://api.github.com/users/MustafaMustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/MustafaMustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MustafaMustafa/subscriptions", "organizations_url": "https://api.github.com/users/MustafaMustafa/orgs", "repos_url": "https://api.github.com/users/MustafaMustafa/repos", "events_url": "https://api.github.com/users/MustafaMustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/MustafaMustafa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-17T15:56:31Z", "updated_at": "2018-11-11T18:16:22Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>GBN seems to be at least twice as slow as regular BN. This is the case even when using the full batch for normalization in GBN mode (<code>virtual_batch_size=batch_size</code>).</p>\n<p>You can reproduce that with tensorflow/models cifar10 example by running the script below, also available at (<a href=\"https://gist.github.com/MustafaMustafa/a12485746e4c877620a818d227982e1c\">https://gist.github.com/MustafaMustafa/a12485746e4c877620a818d227982e1c</a>):</p>\n<div class=\"highlight highlight-source-shell\"><pre>git clone git@github.com:tensorflow/models.git slow_GBN_issue\n<span class=\"pl-c1\">cd</span> slow_GBN_issue/tutorials/image/cifar10_estimator\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> use tf.layer.batch_normalization</span>\nsed -i  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/tf.contrib.layers.batch_norm/tf.layers.batch_normalization/<span class=\"pl-pds\">'</span></span> model_base.py\nsed -i  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/decay=/momentum=/<span class=\"pl-pds\">'</span></span> model_base.py\nsed -i  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/is_training=/training=/<span class=\"pl-pds\">'</span></span> model_base.py\nsed -i  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/data_format=data_format)/c\\axis=-1 if data_format==\"NHWC\" else 1)<span class=\"pl-pds\">'</span></span> model_base.py\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> make val dataset a multiple of batchsize (multiple of 128)</span>\nsed -i  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/return 1000/return 9984/<span class=\"pl-pds\">'</span></span> cifar10.py\n\npython generate_cifar10_tfrecords.py --data-dir=<span class=\"pl-smi\">${PWD}</span>/cifar-10-data\n<span class=\"pl-k\">if</span> [ <span class=\"pl-k\">-d</span> ./cifar10_logs ]\n<span class=\"pl-k\">then</span>\n  rm -rf ./cifar10_logs\n<span class=\"pl-k\">fi</span>\npython3 cifar10_main.py --data-dir=<span class=\"pl-smi\">${PWD}</span>/cifar-10-data --job-dir=./cifar10_logs --num-gpus=1 --eval-batch-size 128 --train-steps=500 <span class=\"pl-k\">2&gt;&amp;1</span> <span class=\"pl-k\">|</span> tee bn.log\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> use virtual_batch_size</span>\nsed -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/fused/a virtual_batch_size=128,<span class=\"pl-pds\">'</span></span> model_base.py\n<span class=\"pl-k\">if</span> [ <span class=\"pl-k\">-d</span> ./cifar10_logs ]\n<span class=\"pl-k\">then</span>\n  rm -rf ./cifar10_logs\n<span class=\"pl-k\">fi</span>\npython3 cifar10_main.py --data-dir=<span class=\"pl-smi\">${PWD}</span>/cifar-10-data --job-dir=./cifar10_logs --num-gpus=1 --eval-batch-size 128 --train-steps=500 <span class=\"pl-k\">2&gt;&amp;1</span> <span class=\"pl-k\">|</span> tee gbn.log\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> show samples of timing prints</span>\n<span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>BN:<span class=\"pl-pds\">\"</span></span>\ngrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sec)<span class=\"pl-pds\">\"</span></span> bn.log <span class=\"pl-k\">|</span> tail -1\n<span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>GBN:<span class=\"pl-pds\">\"</span></span>\ngrep <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sec)<span class=\"pl-pds\">\"</span></span> gbn.log <span class=\"pl-k\">|</span> tail -1</pre></div>\n<p>Output:</p>\n<pre><code>BN:\nINFO:tensorflow:learning_rate = 0.1, loss = 2.09511 (4.351 sec)\nGBN:\nINFO:tensorflow:learning_rate = 0.1, loss = 2.37345 (9.071 sec)\n</code></pre>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.12.0-rc0-0-g1a6dea3 1.12.0-rc0</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.16.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 7.1.0</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.2/7.1.4</li>\n<li><strong>GPU model and memory</strong>: Titan X Pascal 12GB</li>\n<li><strong>Have I written custom code</strong>: No</li>\n<li><strong>TensorFlow installed from</strong>: Compiled from source</li>\n<li><strong>Exact command to reproduce</strong>: bash script for how to reproduce provided in the description.</li>\n<li><strong>Mobile device</strong>: N/A</li>\n</ul>", "body_text": "GBN seems to be at least twice as slow as regular BN. This is the case even when using the full batch for normalization in GBN mode (virtual_batch_size=batch_size).\nYou can reproduce that with tensorflow/models cifar10 example by running the script below, also available at (https://gist.github.com/MustafaMustafa/a12485746e4c877620a818d227982e1c):\ngit clone git@github.com:tensorflow/models.git slow_GBN_issue\ncd slow_GBN_issue/tutorials/image/cifar10_estimator\n\n# use tf.layer.batch_normalization\nsed -i  's/tf.contrib.layers.batch_norm/tf.layers.batch_normalization/' model_base.py\nsed -i  's/decay=/momentum=/' model_base.py\nsed -i  's/is_training=/training=/' model_base.py\nsed -i  '/data_format=data_format)/c\\axis=-1 if data_format==\"NHWC\" else 1)' model_base.py\n\n# make val dataset a multiple of batchsize (multiple of 128)\nsed -i  's/return 1000/return 9984/' cifar10.py\n\npython generate_cifar10_tfrecords.py --data-dir=${PWD}/cifar-10-data\nif [ -d ./cifar10_logs ]\nthen\n  rm -rf ./cifar10_logs\nfi\npython3 cifar10_main.py --data-dir=${PWD}/cifar-10-data --job-dir=./cifar10_logs --num-gpus=1 --eval-batch-size 128 --train-steps=500 2>&1 | tee bn.log\n\n# use virtual_batch_size\nsed -i '/fused/a virtual_batch_size=128,' model_base.py\nif [ -d ./cifar10_logs ]\nthen\n  rm -rf ./cifar10_logs\nfi\npython3 cifar10_main.py --data-dir=${PWD}/cifar-10-data --job-dir=./cifar10_logs --num-gpus=1 --eval-batch-size 128 --train-steps=500 2>&1 | tee gbn.log\n\n# show samples of timing prints\necho \"BN:\"\ngrep \"sec)\" bn.log | tail -1\necho \"GBN:\"\ngrep \"sec)\" gbn.log | tail -1\nOutput:\nBN:\nINFO:tensorflow:learning_rate = 0.1, loss = 2.09511 (4.351 sec)\nGBN:\nINFO:tensorflow:learning_rate = 0.1, loss = 2.37345 (9.071 sec)\n\n\nSystem information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow version (use command below): v1.12.0-rc0-0-g1a6dea3 1.12.0-rc0\nPython version: 3.5.2\nBazel version (if compiling from source): 0.16.0\nGCC/Compiler version (if compiling from source): 7.1.0\nCUDA/cuDNN version: 9.2/7.1.4\nGPU model and memory: Titan X Pascal 12GB\nHave I written custom code: No\nTensorFlow installed from: Compiled from source\nExact command to reproduce: bash script for how to reproduce provided in the description.\nMobile device: N/A", "body": "GBN seems to be at least twice as slow as regular BN. This is the case even when using the full batch for normalization in GBN mode (`virtual_batch_size=batch_size`).\r\n\r\nYou can reproduce that with tensorflow/models cifar10 example by running the script below, also available at (https://gist.github.com/MustafaMustafa/a12485746e4c877620a818d227982e1c):\r\n\r\n```bash\r\n\r\ngit clone git@github.com:tensorflow/models.git slow_GBN_issue\r\ncd slow_GBN_issue/tutorials/image/cifar10_estimator\r\n\r\n# use tf.layer.batch_normalization\r\nsed -i  's/tf.contrib.layers.batch_norm/tf.layers.batch_normalization/' model_base.py\r\nsed -i  's/decay=/momentum=/' model_base.py\r\nsed -i  's/is_training=/training=/' model_base.py\r\nsed -i  '/data_format=data_format)/c\\axis=-1 if data_format==\"NHWC\" else 1)' model_base.py\r\n\r\n# make val dataset a multiple of batchsize (multiple of 128)\r\nsed -i  's/return 1000/return 9984/' cifar10.py\r\n\r\npython generate_cifar10_tfrecords.py --data-dir=${PWD}/cifar-10-data\r\nif [ -d ./cifar10_logs ]\r\nthen\r\n  rm -rf ./cifar10_logs\r\nfi\r\npython3 cifar10_main.py --data-dir=${PWD}/cifar-10-data --job-dir=./cifar10_logs --num-gpus=1 --eval-batch-size 128 --train-steps=500 2>&1 | tee bn.log\r\n\r\n# use virtual_batch_size\r\nsed -i '/fused/a virtual_batch_size=128,' model_base.py\r\nif [ -d ./cifar10_logs ]\r\nthen\r\n  rm -rf ./cifar10_logs\r\nfi\r\npython3 cifar10_main.py --data-dir=${PWD}/cifar-10-data --job-dir=./cifar10_logs --num-gpus=1 --eval-batch-size 128 --train-steps=500 2>&1 | tee gbn.log\r\n\r\n# show samples of timing prints\r\necho \"BN:\"\r\ngrep \"sec)\" bn.log | tail -1\r\necho \"GBN:\"\r\ngrep \"sec)\" gbn.log | tail -1\r\n```\r\n\r\nOutput:\r\n```\r\nBN:\r\nINFO:tensorflow:learning_rate = 0.1, loss = 2.09511 (4.351 sec)\r\nGBN:\r\nINFO:tensorflow:learning_rate = 0.1, loss = 2.37345 (9.071 sec)\r\n```\r\n------------------------\r\n\r\n### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow version (use command below)**: v1.12.0-rc0-0-g1a6dea3 1.12.0-rc0\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: 0.16.0\r\n- **GCC/Compiler version (if compiling from source)**: 7.1.0\r\n- **CUDA/cuDNN version**: 9.2/7.1.4\r\n- **GPU model and memory**: Titan X Pascal 12GB\r\n- **Have I written custom code**: No\r\n- **TensorFlow installed from**: Compiled from source\r\n- **Exact command to reproduce**: bash script for how to reproduce provided in the description.\r\n- **Mobile device**: N/A"}