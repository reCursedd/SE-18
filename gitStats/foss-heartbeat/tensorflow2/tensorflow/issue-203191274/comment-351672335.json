{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/351672335", "html_url": "https://github.com/tensorflow/tensorflow/issues/7068#issuecomment-351672335", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7068", "id": 351672335, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTY3MjMzNQ==", "user": {"login": "shoeffner", "id": 1836815, "node_id": "MDQ6VXNlcjE4MzY4MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1836815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoeffner", "html_url": "https://github.com/shoeffner", "followers_url": "https://api.github.com/users/shoeffner/followers", "following_url": "https://api.github.com/users/shoeffner/following{/other_user}", "gists_url": "https://api.github.com/users/shoeffner/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoeffner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoeffner/subscriptions", "organizations_url": "https://api.github.com/users/shoeffner/orgs", "repos_url": "https://api.github.com/users/shoeffner/repos", "events_url": "https://api.github.com/users/shoeffner/events{/privacy}", "received_events_url": "https://api.github.com/users/shoeffner/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-14T10:33:32Z", "updated_at": "2017-12-14T10:36:46Z", "author_association": "NONE", "body_html": "<p>My scripts even rely on the exact hosts being available, so the situation gets worse.<br>\nI though about job/task arrays, but it is fairly difficult to have distinguishable tasks in a way that the keepalive, as I was using it, can figure that out.<br>\nAn alternative approach, which I did not implement, might be better suited for that: submit to random machines, let them register to a (known) chief machine and build the cluster from there.</p>\n<p>I am looking forward to seeing your solutions.</p>\n<p>NB: Don't use the pe option like that. It is there to access single machines with multiple CPUs, which might be useful for tensorflow, but is not necessarily needed. But that's why OpenMPI projects use it, they rely on multiple CPU cores. Instead, have a look at job arrays.</p>", "body_text": "My scripts even rely on the exact hosts being available, so the situation gets worse.\nI though about job/task arrays, but it is fairly difficult to have distinguishable tasks in a way that the keepalive, as I was using it, can figure that out.\nAn alternative approach, which I did not implement, might be better suited for that: submit to random machines, let them register to a (known) chief machine and build the cluster from there.\nI am looking forward to seeing your solutions.\nNB: Don't use the pe option like that. It is there to access single machines with multiple CPUs, which might be useful for tensorflow, but is not necessarily needed. But that's why OpenMPI projects use it, they rely on multiple CPU cores. Instead, have a look at job arrays.", "body": "My scripts even rely on the exact hosts being available, so the situation gets worse.\r\nI though about job/task arrays, but it is fairly difficult to have distinguishable tasks in a way that the keepalive, as I was using it, can figure that out.\r\nAn alternative approach, which I did not implement, might be better suited for that: submit to random machines, let them register to a (known) chief machine and build the cluster from there.\r\n\r\nI am looking forward to seeing your solutions.\r\n\r\nNB: Don't use the pe option like that. It is there to access single machines with multiple CPUs, which might be useful for tensorflow, but is not necessarily needed. But that's why OpenMPI projects use it, they rely on multiple CPU cores. Instead, have a look at job arrays. "}