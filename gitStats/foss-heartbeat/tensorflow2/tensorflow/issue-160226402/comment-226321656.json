{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/226321656", "html_url": "https://github.com/tensorflow/tensorflow/issues/2854#issuecomment-226321656", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2854", "id": 226321656, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjMyMTY1Ng==", "user": {"login": "sherrym", "id": 12770037, "node_id": "MDQ6VXNlcjEyNzcwMDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/12770037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherrym", "html_url": "https://github.com/sherrym", "followers_url": "https://api.github.com/users/sherrym/followers", "following_url": "https://api.github.com/users/sherrym/following{/other_user}", "gists_url": "https://api.github.com/users/sherrym/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherrym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherrym/subscriptions", "organizations_url": "https://api.github.com/users/sherrym/orgs", "repos_url": "https://api.github.com/users/sherrym/repos", "events_url": "https://api.github.com/users/sherrym/events{/privacy}", "received_events_url": "https://api.github.com/users/sherrym/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-15T21:12:13Z", "updated_at": "2016-06-15T21:12:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>You can do something like:</p>\n<p>v = tf.Variable(1.0)<br>\nc = tf.constant(2.0)<br>\nc2 =  tf.cond(v &lt; c, lambda: tf.constant(3.0), lambda: tf.constant(4.0))<br>\nv2 = tf.assign(v, c2)<br>\nwith tf.Session() as sess:<br>\nsess.run(tf.initialize_all_variables())<br>\nprint sess.run(v2)</p>", "body_text": "You can do something like:\nv = tf.Variable(1.0)\nc = tf.constant(2.0)\nc2 =  tf.cond(v < c, lambda: tf.constant(3.0), lambda: tf.constant(4.0))\nv2 = tf.assign(v, c2)\nwith tf.Session() as sess:\nsess.run(tf.initialize_all_variables())\nprint sess.run(v2)", "body": "You can do something like:\n\nv = tf.Variable(1.0)\nc = tf.constant(2.0)\nc2 =  tf.cond(v < c, lambda: tf.constant(3.0), lambda: tf.constant(4.0))\nv2 = tf.assign(v, c2)\nwith tf.Session() as sess:\n  sess.run(tf.initialize_all_variables())\n  print sess.run(v2)\n"}