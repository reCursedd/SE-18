{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/384082495", "html_url": "https://github.com/tensorflow/tensorflow/issues/11724#issuecomment-384082495", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11724", "id": 384082495, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA4MjQ5NQ==", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-24T21:15:22Z", "updated_at": "2018-04-24T21:15:37Z", "author_association": "NONE", "body_html": "<p>I had an issue very similar to this. Running Numpy 1.11.1 with MKL 2017 and TF 1.2.0.</p>\n<p>Test script:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\nbad <span class=\"pl-k\">=</span> <span class=\"pl-c1\">True</span>\n<span class=\"pl-k\">if</span> bad:\n    <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n    rows <span class=\"pl-k\">=</span> <span class=\"pl-c1\">100</span>\n    cols <span class=\"pl-k\">=</span> <span class=\"pl-c1\">100</span>\n    X <span class=\"pl-k\">=</span> np.ones((rows, cols))\n    w <span class=\"pl-k\">=</span> np.ones(cols)\n\n    <span class=\"pl-c1\">print</span> np.dot(X, w).sum(), np.dot(X, w).sum(), np.dot(X, w).sum()\n    <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>correct:<span class=\"pl-pds\">'</span></span>, X.sum()</pre></div>\n<p>When <code>bad</code> is True, it outputs incorrect numbers. The exact numbers are non-deterministic, but they're almost always wrong. Example output:</p>\n<pre><code>15300.0 30000.0 26800.0\ncorrect: 10000.0\n</code></pre>\n<p>If I either don't import TF or I set <code>MKL_NUM_THREADS=1</code>, then all works correctly</p>\n<pre><code>10000.0 10000.0 10000.0\ncorrect: 10000.0\n</code></pre>\n<p>It would be nice for this to work so that I could use multi-threaded Numpy and TF in the same Python process without postponing TF import as much as possible.</p>", "body_text": "I had an issue very similar to this. Running Numpy 1.11.1 with MKL 2017 and TF 1.2.0.\nTest script:\nimport numpy as np\n\nbad = True\nif bad:\n    import tensorflow as tf\n\nif __name__ == '__main__':\n    rows = 100\n    cols = 100\n    X = np.ones((rows, cols))\n    w = np.ones(cols)\n\n    print np.dot(X, w).sum(), np.dot(X, w).sum(), np.dot(X, w).sum()\n    print 'correct:', X.sum()\nWhen bad is True, it outputs incorrect numbers. The exact numbers are non-deterministic, but they're almost always wrong. Example output:\n15300.0 30000.0 26800.0\ncorrect: 10000.0\n\nIf I either don't import TF or I set MKL_NUM_THREADS=1, then all works correctly\n10000.0 10000.0 10000.0\ncorrect: 10000.0\n\nIt would be nice for this to work so that I could use multi-threaded Numpy and TF in the same Python process without postponing TF import as much as possible.", "body": "I had an issue very similar to this. Running Numpy 1.11.1 with MKL 2017 and TF 1.2.0.\r\n\r\nTest script:\r\n```python\r\nimport numpy as np\r\n\r\nbad = True\r\nif bad:\r\n    import tensorflow as tf\r\n\r\nif __name__ == '__main__':\r\n    rows = 100\r\n    cols = 100\r\n    X = np.ones((rows, cols))\r\n    w = np.ones(cols)\r\n\r\n    print np.dot(X, w).sum(), np.dot(X, w).sum(), np.dot(X, w).sum()\r\n    print 'correct:', X.sum()\r\n```\r\n\r\nWhen ``bad`` is True, it outputs incorrect numbers. The exact numbers are non-deterministic, but they're almost always wrong. Example output:\r\n```\r\n15300.0 30000.0 26800.0\r\ncorrect: 10000.0\r\n```\r\n\r\nIf I either don't import TF or I set ``MKL_NUM_THREADS=1``, then all works correctly\r\n```\r\n10000.0 10000.0 10000.0\r\ncorrect: 10000.0\r\n```\r\n\r\nIt would be nice for this to work so that I could use multi-threaded Numpy and TF in the same Python process without postponing TF import as much as possible."}