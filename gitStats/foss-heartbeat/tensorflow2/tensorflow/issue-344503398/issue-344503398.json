{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21130", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21130/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21130/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21130/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21130", "id": 344503398, "node_id": "MDU6SXNzdWUzNDQ1MDMzOTg=", "number": 21130, "title": "Unexpected behavior of tf.hessians on graphs with tf.reduce_prod", "user": {"login": "lballes", "id": 8748569, "node_id": "MDQ6VXNlcjg3NDg1Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8748569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lballes", "html_url": "https://github.com/lballes", "followers_url": "https://api.github.com/users/lballes/followers", "following_url": "https://api.github.com/users/lballes/following{/other_user}", "gists_url": "https://api.github.com/users/lballes/gists{/gist_id}", "starred_url": "https://api.github.com/users/lballes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lballes/subscriptions", "organizations_url": "https://api.github.com/users/lballes/orgs", "repos_url": "https://api.github.com/users/lballes/repos", "events_url": "https://api.github.com/users/lballes/events{/privacy}", "received_events_url": "https://api.github.com/users/lballes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-25T15:51:13Z", "updated_at": "2018-10-22T19:13:43Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<p>TensorFlow 1.9 CPU version installed via pip on Linux. Replicated the error on both Python 2.7.13 and 3.5.3 on Linux. Did not try with GPU version.</p>\n<p>Details:<br>\nHave I written custom code: no<br>\nOS Platform and Distribution: Ubuntu 18.04<br>\nTensorFlow installed from: pip<br>\nTensorFlow version: 1.9 CPU version<br>\nBazel version: n/a<br>\nCUDA/cuDNN version: n/a<br>\nGPU model and memory: n/a<br>\nExact command to reproduce: see code below<br>\nMobile device: no</p>\n<h3>Describe the problem</h3>\n<p><code>tf.hessians</code> fails on a very simple function that uses <code>tf.reduce_prod</code>. The error only occurs at the minimum of the function, where the Hessian is zero. Here's a minimal example:</p>\n<pre><code>import numpy as np\nimport tensorflow as tf\n\nx = tf.placeholder(tf.float32, shape=[3,])\ny = tf.reduce_prod(x**2)\nH = tf.hessians(y, x)[0]\n\nwith tf.Session() as sess:\n  print(sess.run(H, feed_dict={x: np.ones(3)}))\n  print(sess.run(H, feed_dict={x: np.zeros(3)}))\n  \n# Produces\n# [[2. 4. 4.]\n#  [4. 2. 4.]\n#  [4. 4. 2.]]\n# [[nan nan nan]\n#  [nan nan nan]\n#  [nan nan nan]]\n</code></pre>\n<p>The Hessian at <code>x=[0, 0, 0]</code> is well-defined and should evaluate to a zero-matrix. This behavior is unexpected. If <code>tf.hessians</code> can't handle <code>tf.reduce_prod</code> it should raise an exception.</p>\n<h3>Source code / logs</h3>\n<p>See above for minimal example.</p>", "body_text": "System information\nTensorFlow 1.9 CPU version installed via pip on Linux. Replicated the error on both Python 2.7.13 and 3.5.3 on Linux. Did not try with GPU version.\nDetails:\nHave I written custom code: no\nOS Platform and Distribution: Ubuntu 18.04\nTensorFlow installed from: pip\nTensorFlow version: 1.9 CPU version\nBazel version: n/a\nCUDA/cuDNN version: n/a\nGPU model and memory: n/a\nExact command to reproduce: see code below\nMobile device: no\nDescribe the problem\ntf.hessians fails on a very simple function that uses tf.reduce_prod. The error only occurs at the minimum of the function, where the Hessian is zero. Here's a minimal example:\nimport numpy as np\nimport tensorflow as tf\n\nx = tf.placeholder(tf.float32, shape=[3,])\ny = tf.reduce_prod(x**2)\nH = tf.hessians(y, x)[0]\n\nwith tf.Session() as sess:\n  print(sess.run(H, feed_dict={x: np.ones(3)}))\n  print(sess.run(H, feed_dict={x: np.zeros(3)}))\n  \n# Produces\n# [[2. 4. 4.]\n#  [4. 2. 4.]\n#  [4. 4. 2.]]\n# [[nan nan nan]\n#  [nan nan nan]\n#  [nan nan nan]]\n\nThe Hessian at x=[0, 0, 0] is well-defined and should evaluate to a zero-matrix. This behavior is unexpected. If tf.hessians can't handle tf.reduce_prod it should raise an exception.\nSource code / logs\nSee above for minimal example.", "body": "### System information\r\n\r\nTensorFlow 1.9 CPU version installed via pip on Linux. Replicated the error on both Python 2.7.13 and 3.5.3 on Linux. Did not try with GPU version.\r\n\r\nDetails:\r\nHave I written custom code: no\r\nOS Platform and Distribution: Ubuntu 18.04\r\nTensorFlow installed from: pip\r\nTensorFlow version: 1.9 CPU version\r\nBazel version: n/a\r\nCUDA/cuDNN version: n/a\r\nGPU model and memory: n/a\r\nExact command to reproduce: see code below\r\nMobile device: no\r\n\r\n### Describe the problem\r\n``tf.hessians`` fails on a very simple function that uses ``tf.reduce_prod``. The error only occurs at the minimum of the function, where the Hessian is zero. Here's a minimal example:\r\n\r\n    import numpy as np\r\n    import tensorflow as tf\r\n    \r\n    x = tf.placeholder(tf.float32, shape=[3,])\r\n    y = tf.reduce_prod(x**2)\r\n    H = tf.hessians(y, x)[0]\r\n    \r\n    with tf.Session() as sess:\r\n      print(sess.run(H, feed_dict={x: np.ones(3)}))\r\n      print(sess.run(H, feed_dict={x: np.zeros(3)}))\r\n      \r\n    # Produces\r\n    # [[2. 4. 4.]\r\n    #  [4. 2. 4.]\r\n    #  [4. 4. 2.]]\r\n    # [[nan nan nan]\r\n    #  [nan nan nan]\r\n    #  [nan nan nan]]\r\n\r\nThe Hessian at ``x=[0, 0, 0]`` is well-defined and should evaluate to a zero-matrix. This behavior is unexpected. If ``tf.hessians`` can't handle ``tf.reduce_prod`` it should raise an exception.\r\n\r\n### Source code / logs\r\nSee above for minimal example.\r\n"}