{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/429723271", "html_url": "https://github.com/tensorflow/tensorflow/issues/10169#issuecomment-429723271", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10169", "id": 429723271, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTcyMzI3MQ==", "user": {"login": "paradisebee", "id": 5229112, "node_id": "MDQ6VXNlcjUyMjkxMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5229112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paradisebee", "html_url": "https://github.com/paradisebee", "followers_url": "https://api.github.com/users/paradisebee/followers", "following_url": "https://api.github.com/users/paradisebee/following{/other_user}", "gists_url": "https://api.github.com/users/paradisebee/gists{/gist_id}", "starred_url": "https://api.github.com/users/paradisebee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paradisebee/subscriptions", "organizations_url": "https://api.github.com/users/paradisebee/orgs", "repos_url": "https://api.github.com/users/paradisebee/repos", "events_url": "https://api.github.com/users/paradisebee/events{/privacy}", "received_events_url": "https://api.github.com/users/paradisebee/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-15T06:28:09Z", "updated_at": "2018-10-15T06:28:09Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12840347\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ankit1997\">@ankit1997</a><br>\nThis might be a late response, but I'd like to help anyone who is searching for the solution.</p>\n<p>The document for tf.image.convert_image_dtype says that:<br>\n\"Images that are represented using floating point values are expected to have values in the range [0,1)\"<br>\nHowever, after tf.image.resize_images, the value is float32 in range [0, 255). I am not sure how convert_image_dtype behaves in such case.</p>\n<p>On the other hand, tf.cast directly casts the dtype without changing the value (well, with rounding of course) , so the output is a normal uint8 image.</p>", "body_text": "@ankit1997\nThis might be a late response, but I'd like to help anyone who is searching for the solution.\nThe document for tf.image.convert_image_dtype says that:\n\"Images that are represented using floating point values are expected to have values in the range [0,1)\"\nHowever, after tf.image.resize_images, the value is float32 in range [0, 255). I am not sure how convert_image_dtype behaves in such case.\nOn the other hand, tf.cast directly casts the dtype without changing the value (well, with rounding of course) , so the output is a normal uint8 image.", "body": "@ankit1997 \r\nThis might be a late response, but I'd like to help anyone who is searching for the solution.\r\n\r\nThe document for tf.image.convert_image_dtype says that:\r\n\"Images that are represented using floating point values are expected to have values in the range [0,1)\"\r\nHowever, after tf.image.resize_images, the value is float32 in range [0, 255). I am not sure how convert_image_dtype behaves in such case.\r\n\r\nOn the other hand, tf.cast directly casts the dtype without changing the value (well, with rounding of course) , so the output is a normal uint8 image.\r\n"}