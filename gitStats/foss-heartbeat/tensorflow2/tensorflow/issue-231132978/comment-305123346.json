{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/305123346", "html_url": "https://github.com/tensorflow/tensorflow/issues/10169#issuecomment-305123346", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10169", "id": 305123346, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTEyMzM0Ng==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-31T08:34:33Z", "updated_at": "2017-05-31T08:34:33Z", "author_association": "MEMBER", "body_html": "<p>I believe this happens because:</p>\n<ul>\n<li><code>tf.image.decode_jpeg</code> returns a <code>tf.uint8</code> tensor</li>\n<li><code>tf.image.resize_image_with_crop_or_pad</code> doesn't do any numerical operations on the pixel values, it just crops or pads to change the shape of the input tensor but returns a tensor of the same type. In this case, it's a <code>tf.uint8</code> tensor.</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/image/resize_images\" rel=\"nofollow\"><code>tf.image.resize_images</code></a> returns a <code>tf.float32</code> tensor</li>\n<li><code>plt.imshow</code> expects either a uint8 array or a float array with values between 0 and 1.</li>\n</ul>\n<p>Since the resized tensor is a float tensor but pixel values are not between 0 and 1, it's probably confusing <code>plt.imgshow</code>. Something like the following should fix things up:</p>\n<div class=\"highlight highlight-source-python\"><pre>img <span class=\"pl-k\">=</span> tf.image.decode_jpeg(tf.read_file(path), <span class=\"pl-v\">channels</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>)\nimg <span class=\"pl-k\">=</span> tf.cast(tf.image.resize_images(img, [<span class=\"pl-c1\">200</span>, <span class=\"pl-c1\">200</span>]), tf.uint8)\nsess.run(img)</pre></div>\n<p>Let us know if that works out.</p>", "body_text": "I believe this happens because:\n\ntf.image.decode_jpeg returns a tf.uint8 tensor\ntf.image.resize_image_with_crop_or_pad doesn't do any numerical operations on the pixel values, it just crops or pads to change the shape of the input tensor but returns a tensor of the same type. In this case, it's a tf.uint8 tensor.\ntf.image.resize_images returns a tf.float32 tensor\nplt.imshow expects either a uint8 array or a float array with values between 0 and 1.\n\nSince the resized tensor is a float tensor but pixel values are not between 0 and 1, it's probably confusing plt.imgshow. Something like the following should fix things up:\nimg = tf.image.decode_jpeg(tf.read_file(path), channels=3)\nimg = tf.cast(tf.image.resize_images(img, [200, 200]), tf.uint8)\nsess.run(img)\nLet us know if that works out.", "body": "I believe this happens because:\r\n\r\n- `tf.image.decode_jpeg` returns a `tf.uint8` tensor\r\n- `tf.image.resize_image_with_crop_or_pad` doesn't do any numerical operations on the pixel values, it just crops or pads to change the shape of the input tensor but returns a tensor of the same type. In this case, it's a `tf.uint8` tensor.\r\n- [`tf.image.resize_images`](https://www.tensorflow.org/api_docs/python/tf/image/resize_images) returns a `tf.float32` tensor\r\n- `plt.imshow` expects either a uint8 array or a float array with values between 0 and 1.\r\n\r\nSince the resized tensor is a float tensor but pixel values are not between 0 and 1, it's probably confusing `plt.imgshow`. Something like the following should fix things up:\r\n\r\n```python\r\nimg = tf.image.decode_jpeg(tf.read_file(path), channels=3)\r\nimg = tf.cast(tf.image.resize_images(img, [200, 200]), tf.uint8)\r\nsess.run(img)\r\n```\r\n\r\nLet us know if that works out."}