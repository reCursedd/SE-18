{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4904", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4904/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4904/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4904/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4904", "id": 182426209, "node_id": "MDU6SXNzdWUxODI0MjYyMDk=", "number": 4904, "title": "is the documentation about sampled_softmax_loss correct?", "user": {"login": "lpxz", "id": 6018009, "node_id": "MDQ6VXNlcjYwMTgwMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6018009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpxz", "html_url": "https://github.com/lpxz", "followers_url": "https://api.github.com/users/lpxz/followers", "following_url": "https://api.github.com/users/lpxz/following{/other_user}", "gists_url": "https://api.github.com/users/lpxz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpxz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpxz/subscriptions", "organizations_url": "https://api.github.com/users/lpxz/orgs", "repos_url": "https://api.github.com/users/lpxz/repos", "events_url": "https://api.github.com/users/lpxz/events{/privacy}", "received_events_url": "https://api.github.com/users/lpxz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-12T03:24:24Z", "updated_at": "2018-11-07T09:03:04Z", "closed_at": "2017-02-10T13:26:34Z", "author_association": "NONE", "body_html": "<p>Hi,<br>\n\"tf.nn.sampled_softmax_loss(weights, biases, inputs, labels, num_sampled, num_classes, num_true=1, sampled_values=None, remove_accidental_hits=True, partition_strategy='mod', name='sampled_softmax_loss')\"<br>\nthe document says:<br>\n\"At inference time, you can compute full softmax probabilities with the expression tf.nn.softmax(tf.matmul(inputs, tf.transpose(weights)) + biases).\"</p>\n<p>I am not sure if this describes the behavior correctly. First, the labels are not used in the softmax computation; Second, the weights matrix is merely a lookup table that maps each word to a vector (word2vec), the above matmul operation is not meaningful.</p>\n<p>Here is my understanding of the code:<br>\nGiven any word w, we have a vector encoding V1 from inputs, and then with label, we look up the weight matrix to find a vector encoding V2. Then we compute the softmax loss (cross-entropy loss) between V1 and V2. Finally, we sum up the loss for the sampled words.</p>", "body_text": "Hi,\n\"tf.nn.sampled_softmax_loss(weights, biases, inputs, labels, num_sampled, num_classes, num_true=1, sampled_values=None, remove_accidental_hits=True, partition_strategy='mod', name='sampled_softmax_loss')\"\nthe document says:\n\"At inference time, you can compute full softmax probabilities with the expression tf.nn.softmax(tf.matmul(inputs, tf.transpose(weights)) + biases).\"\nI am not sure if this describes the behavior correctly. First, the labels are not used in the softmax computation; Second, the weights matrix is merely a lookup table that maps each word to a vector (word2vec), the above matmul operation is not meaningful.\nHere is my understanding of the code:\nGiven any word w, we have a vector encoding V1 from inputs, and then with label, we look up the weight matrix to find a vector encoding V2. Then we compute the softmax loss (cross-entropy loss) between V1 and V2. Finally, we sum up the loss for the sampled words.", "body": "Hi, \n\"tf.nn.sampled_softmax_loss(weights, biases, inputs, labels, num_sampled, num_classes, num_true=1, sampled_values=None, remove_accidental_hits=True, partition_strategy='mod', name='sampled_softmax_loss')\"\nthe document says:\n\"At inference time, you can compute full softmax probabilities with the expression tf.nn.softmax(tf.matmul(inputs, tf.transpose(weights)) + biases).\"\n\nI am not sure if this describes the behavior correctly. First, the labels are not used in the softmax computation; Second, the weights matrix is merely a lookup table that maps each word to a vector (word2vec), the above matmul operation is not meaningful.\n\nHere is my understanding of the code:\nGiven any word w, we have a vector encoding V1 from inputs, and then with label, we look up the weight matrix to find a vector encoding V2. Then we compute the softmax loss (cross-entropy loss) between V1 and V2. Finally, we sum up the loss for the sampled words.\n"}