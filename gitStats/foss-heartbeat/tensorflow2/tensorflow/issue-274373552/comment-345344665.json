{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/345344665", "html_url": "https://github.com/tensorflow/tensorflow/issues/14603#issuecomment-345344665", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14603", "id": 345344665, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTM0NDY2NQ==", "user": {"login": "yupbank", "id": 741544, "node_id": "MDQ6VXNlcjc0MTU0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/741544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yupbank", "html_url": "https://github.com/yupbank", "followers_url": "https://api.github.com/users/yupbank/followers", "following_url": "https://api.github.com/users/yupbank/following{/other_user}", "gists_url": "https://api.github.com/users/yupbank/gists{/gist_id}", "starred_url": "https://api.github.com/users/yupbank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yupbank/subscriptions", "organizations_url": "https://api.github.com/users/yupbank/orgs", "repos_url": "https://api.github.com/users/yupbank/repos", "events_url": "https://api.github.com/users/yupbank/events{/privacy}", "received_events_url": "https://api.github.com/users/yupbank/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-17T19:34:44Z", "updated_at": "2017-11-17T19:39:52Z", "author_association": "MEMBER", "body_html": "<p>say  i have a graph with two sub graph:</p>\n<pre><code>input_images = tf.placeholder(tf.float32, shape=[None, 1024, 2024, 3])\ninput_state = resize_and_folder_multi_image_into_one_state(input_images)\ninput_state.shape == (80, 80, 4)\n\ninput_states = tf.expand_dims(input_state, 0)\n\ninput_states.shape == (1, 80, 80, 4)\n\n# i want to have a input_states acting both as middle node of graph \n\n# but also can acting as input of a graph,  \n\n# what operation can i do to make \n\n# input_states.shape compatible with (None, 80, 80, 4)\n \n\naction = q_function_accept_input_states_and_predict_actions(input_states)\n</code></pre>\n<p>this would work but will break when i pass multi input_states data into <code>input_states</code></p>\n<p>this is my work around..</p>\n<p><a href=\"https://github.com/yupbank/dqn-tf/blob/master/trainer/task.py#L59\">https://github.com/yupbank/dqn-tf/blob/master/trainer/task.py#L59</a><br>\n<a href=\"https://github.com/yupbank/dqn-tf/blob/master/trainer/task.py#L64-L70\">https://github.com/yupbank/dqn-tf/blob/master/trainer/task.py#L64-L70</a></p>\n<p>but my case it's lucky that both function <code>resize_and_folder_multi_image_into_one_state</code> and  <code>q_function_accept_input_states_and_predict_actions</code>  are zero centered<br>\nand  the walk around would fail if any of them are not zero centered..</p>", "body_text": "say  i have a graph with two sub graph:\ninput_images = tf.placeholder(tf.float32, shape=[None, 1024, 2024, 3])\ninput_state = resize_and_folder_multi_image_into_one_state(input_images)\ninput_state.shape == (80, 80, 4)\n\ninput_states = tf.expand_dims(input_state, 0)\n\ninput_states.shape == (1, 80, 80, 4)\n\n# i want to have a input_states acting both as middle node of graph \n\n# but also can acting as input of a graph,  \n\n# what operation can i do to make \n\n# input_states.shape compatible with (None, 80, 80, 4)\n \n\naction = q_function_accept_input_states_and_predict_actions(input_states)\n\nthis would work but will break when i pass multi input_states data into input_states\nthis is my work around..\nhttps://github.com/yupbank/dqn-tf/blob/master/trainer/task.py#L59\nhttps://github.com/yupbank/dqn-tf/blob/master/trainer/task.py#L64-L70\nbut my case it's lucky that both function resize_and_folder_multi_image_into_one_state and  q_function_accept_input_states_and_predict_actions  are zero centered\nand  the walk around would fail if any of them are not zero centered..", "body": "say  i have a graph with two sub graph:\r\n```\r\ninput_images = tf.placeholder(tf.float32, shape=[None, 1024, 2024, 3])\r\ninput_state = resize_and_folder_multi_image_into_one_state(input_images)\r\ninput_state.shape == (80, 80, 4)\r\n\r\ninput_states = tf.expand_dims(input_state, 0)\r\n\r\ninput_states.shape == (1, 80, 80, 4)\r\n\r\n# i want to have a input_states acting both as middle node of graph \r\n\r\n# but also can acting as input of a graph,  \r\n\r\n# what operation can i do to make \r\n\r\n# input_states.shape compatible with (None, 80, 80, 4)\r\n \r\n\r\naction = q_function_accept_input_states_and_predict_actions(input_states)\r\n```\r\nthis would work but will break when i pass multi input_states data into `input_states`\r\n\r\nthis is my work around..  \r\n\r\nhttps://github.com/yupbank/dqn-tf/blob/master/trainer/task.py#L59\r\nhttps://github.com/yupbank/dqn-tf/blob/master/trainer/task.py#L64-L70\r\n\r\nbut my case it's lucky that both function `resize_and_folder_multi_image_into_one_state` and  `q_function_accept_input_states_and_predict_actions`  are zero centered \r\nand  the walk around would fail if any of them are not zero centered.. \r\n\r\n"}