{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14603", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14603/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14603/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14603/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14603", "id": 274373552, "node_id": "MDU6SXNzdWUyNzQzNzM1NTI=", "number": 14603, "title": "add Unspecified dimension to an existing tensor.", "user": {"login": "yupbank", "id": 741544, "node_id": "MDQ6VXNlcjc0MTU0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/741544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yupbank", "html_url": "https://github.com/yupbank", "followers_url": "https://api.github.com/users/yupbank/followers", "following_url": "https://api.github.com/users/yupbank/following{/other_user}", "gists_url": "https://api.github.com/users/yupbank/gists{/gist_id}", "starred_url": "https://api.github.com/users/yupbank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yupbank/subscriptions", "organizations_url": "https://api.github.com/users/yupbank/orgs", "repos_url": "https://api.github.com/users/yupbank/repos", "events_url": "https://api.github.com/users/yupbank/events{/privacy}", "received_events_url": "https://api.github.com/users/yupbank/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-16T02:27:48Z", "updated_at": "2017-12-01T02:49:38Z", "closed_at": "2017-12-01T02:49:38Z", "author_association": "MEMBER", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: osx</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>:  ('v1.3.0-rc2-20-g0787eee', '1.3.0')</li>\n<li><strong>Python version</strong>:   Python 2.7.11</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.7.0-homebrew</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>== cat /etc/issue ===============================================<br>\nDarwin Pengs-MacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64<br>\nMac OS X 10.12.6</p>\n<p>== are we in docker =============================================<br>\nNo</p>\n<p>== compiler =====================================================<br>\nApple LLVM version 9.0.0 (clang-900.0.38)<br>\nTarget: x86_64-apple-darwin16.7.0<br>\nThread model: posix<br>\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin</p>\n<p>== uname -a =====================================================<br>\nDarwin Pengs-MacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64</p>\n<p>== check pips ===================================================<br>\nnumpy (1.13.1)<br>\nprotobuf (3.4.0)<br>\ntensorflow (1.3.0)<br>\ntensorflow-serving-api (1.3.0)<br>\ntensorflow-tensorboard (0.1.8)</p>\n<p>== check for virtualenv =========================================<br>\nFalse</p>\n<p>== tensorflow import ============================================<br>\ntf.VERSION = 1.3.0<br>\ntf.GIT_VERSION = v1.3.0-rc2-20-g0787eee<br>\ntf.COMPILER_VERSION = v1.3.0-rc2-20-g0787eee<br>\nSanity check: array([1], dtype=int32)<br>\nTraceback (most recent call last):<br>\nFile \"\", line 1, in <br>\nFile \"tensorflow/<strong>init</strong>.py\", line 24, in <br>\nfrom tensorflow.python import *<br>\nFile \"tensorflow/python/<strong>init</strong>.py\", line 49, in <br>\nfrom tensorflow.python import pywrap_tensorflow<br>\nFile \"tensorflow/python/pywrap_tensorflow.py\", line 25, in <br>\nfrom tensorflow.python.platform import self_check<br>\nImportError: No module named platform</p>\n<p>== env ==========================================================<br>\nLD_LIBRARY_PATH is unset<br>\nDYLD_LIBRARY_PATH is unset</p>\n<p>== nvidia-smi ===================================================<br>\n./tools/tf_env_collect.sh: line 105: nvidia-smi: command not found</p>\n<p>== cuda libs  ===================================================</p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.<br>\nsubgraph one have output:</p>\n<pre><code>state = Tensor(80, 80, 4)\n</code></pre>\n<p>subgraph two have input:</p>\n<pre><code>states = Tensor(None, 80, 80, 4)\n</code></pre>\n<p>right now <code>tf.expand_dims</code> can only make state a <code>Tensor(1, 80, 80, 4)</code> which can not being assigned to <code>states</code>. so that i have to do multiple sess execution and make two graph</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): osx\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below):  ('v1.3.0-rc2-20-g0787eee', '1.3.0')\nPython version:   Python 2.7.11\nBazel version (if compiling from source): 0.7.0-homebrew\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\n== cat /etc/issue ===============================================\nDarwin Pengs-MacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\nMac OS X 10.12.6\n== are we in docker =============================================\nNo\n== compiler =====================================================\nApple LLVM version 9.0.0 (clang-900.0.38)\nTarget: x86_64-apple-darwin16.7.0\nThread model: posix\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\n== uname -a =====================================================\nDarwin Pengs-MacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\n== check pips ===================================================\nnumpy (1.13.1)\nprotobuf (3.4.0)\ntensorflow (1.3.0)\ntensorflow-serving-api (1.3.0)\ntensorflow-tensorboard (0.1.8)\n== check for virtualenv =========================================\nFalse\n== tensorflow import ============================================\ntf.VERSION = 1.3.0\ntf.GIT_VERSION = v1.3.0-rc2-20-g0787eee\ntf.COMPILER_VERSION = v1.3.0-rc2-20-g0787eee\nSanity check: array([1], dtype=int32)\nTraceback (most recent call last):\nFile \"\", line 1, in \nFile \"tensorflow/init.py\", line 24, in \nfrom tensorflow.python import *\nFile \"tensorflow/python/init.py\", line 49, in \nfrom tensorflow.python import pywrap_tensorflow\nFile \"tensorflow/python/pywrap_tensorflow.py\", line 25, in \nfrom tensorflow.python.platform import self_check\nImportError: No module named platform\n== env ==========================================================\nLD_LIBRARY_PATH is unset\nDYLD_LIBRARY_PATH is unset\n== nvidia-smi ===================================================\n./tools/tf_env_collect.sh: line 105: nvidia-smi: command not found\n== cuda libs  ===================================================\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nsubgraph one have output:\nstate = Tensor(80, 80, 4)\n\nsubgraph two have input:\nstates = Tensor(None, 80, 80, 4)\n\nright now tf.expand_dims can only make state a Tensor(1, 80, 80, 4) which can not being assigned to states. so that i have to do multiple sess execution and make two graph\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: osx\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**:  ('v1.3.0-rc2-20-g0787eee', '1.3.0')\r\n- **Python version**:   Python 2.7.11\r\n- **Bazel version (if compiling from source)**: 0.7.0-homebrew\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\n== cat /etc/issue ===============================================\r\nDarwin Pengs-MacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\r\nMac OS X 10.12.6\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nApple LLVM version 9.0.0 (clang-900.0.38)\r\nTarget: x86_64-apple-darwin16.7.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n\r\n== uname -a =====================================================\r\nDarwin Pengs-MacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\r\n\r\n== check pips ===================================================\r\nnumpy (1.13.1)\r\nprotobuf (3.4.0)\r\ntensorflow (1.3.0)\r\ntensorflow-serving-api (1.3.0)\r\ntensorflow-tensorboard (0.1.8)\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.3.0\r\ntf.GIT_VERSION = v1.3.0-rc2-20-g0787eee\r\ntf.COMPILER_VERSION = v1.3.0-rc2-20-g0787eee\r\nSanity check: array([1], dtype=int32)\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"tensorflow/__init__.py\", line 24, in <module>\r\n    from tensorflow.python import *\r\n  File \"tensorflow/python/__init__.py\", line 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"tensorflow/python/pywrap_tensorflow.py\", line 25, in <module>\r\n    from tensorflow.python.platform import self_check\r\nImportError: No module named platform\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\n./tools/tf_env_collect.sh: line 105: nvidia-smi: command not found\r\n\r\n== cuda libs  ===================================================\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\nsubgraph one have output:\r\n```\r\nstate = Tensor(80, 80, 4)\r\n```\r\nsubgraph two have input:\r\n```\r\nstates = Tensor(None, 80, 80, 4)\r\n```\r\nright now `tf.expand_dims` can only make state a `Tensor(1, 80, 80, 4)` which can not being assigned to `states`. so that i have to do multiple sess execution and make two graph\r\n\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}