{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/335142064", "html_url": "https://github.com/tensorflow/tensorflow/issues/13522#issuecomment-335142064", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13522", "id": 335142064, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTE0MjA2NA==", "user": {"login": "VolodymyrPavliukevych", "id": 1786378, "node_id": "MDQ6VXNlcjE3ODYzNzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1786378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VolodymyrPavliukevych", "html_url": "https://github.com/VolodymyrPavliukevych", "followers_url": "https://api.github.com/users/VolodymyrPavliukevych/followers", "following_url": "https://api.github.com/users/VolodymyrPavliukevych/following{/other_user}", "gists_url": "https://api.github.com/users/VolodymyrPavliukevych/gists{/gist_id}", "starred_url": "https://api.github.com/users/VolodymyrPavliukevych/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VolodymyrPavliukevych/subscriptions", "organizations_url": "https://api.github.com/users/VolodymyrPavliukevych/orgs", "repos_url": "https://api.github.com/users/VolodymyrPavliukevych/repos", "events_url": "https://api.github.com/users/VolodymyrPavliukevych/events{/privacy}", "received_events_url": "https://api.github.com/users/VolodymyrPavliukevych/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-09T12:22:57Z", "updated_at": "2017-10-09T15:33:36Z", "author_association": "NONE", "body_html": "<p>Rebuild with latest changes in master only with C++ library.<br>\nYes, it is works fine on mac os. Linking passed, tests passed.<br>\nOn Linux (Linux kraken 4.4.0-96-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116265486\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/119\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/119/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/119\">#119</a>-Ubuntu SMP Tue Sep 12 14:59:54 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux):</p>\n<ul>\n<li>Build and run C API related code.</li>\n</ul>\n<ul>\n<li>Can't link C++ code in binary and tests, error:</li>\n</ul>\n<pre><code>$ swift build --product OpProducer -Xcxx -std=c++11\nCompile CCAPI EventsWriter.cc\nCompile Swift Module 'OpProducer' (3 sources)\nLinking ./.build/x86_64-unknown-linux/debug/OpProducer\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:32: error: undefined reference to 'tensorflow::Event::Event()'\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:36: error: undefined reference to 'tensorflow::EventsWriter::WriteEvent(tensorflow::Event const&amp;)'\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:38: error: undefined reference to 'tensorflow::Event::~Event()'\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:38: error: undefined reference to 'tensorflow::Event::~Event()'\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:41: error: undefined reference to 'tensorflow::EventsWriter::EventsWriter(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)'\n/server/repository/tensorflow/bazel-genfiles/tensorflow/core/util/event.pb.h:1105: error: undefined reference to 'tensorflow::Event::clear_what()'\n/server/repository/tensorflow/tensorflow/core/util/events_writer.h:46: error: undefined reference to 'tensorflow::EventsWriter::Close()'\n//usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/unique_ptr.h:76: error: undefined reference to 'tensorflow::io::RecordWriter::~RecordWriter()'\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n&lt;unknown&gt;:0: error: link command failed with exit code 1 (use -v to see invocation)\nerror: terminated(1): /usr/bin/swift-build-tool -f /server/repository/TensorFlow/.build/debug.yaml OpProducer\n</code></pre>\n<p>Tested as static and dynamic (own) libraries.<br>\nThe same with tests. <a href=\"https://www.octadero.com/wp-content/uploads/2017/10/build.log_.zip\" rel=\"nofollow\">Log attached</a>.</p>\n<p>For example EventWriter wrapper is really simple:</p>\n<pre><code>#include \"include/EventsWriter.h\"\n#include \"tensorflow/core/framework/graph.pb.h\"\n#include \"tensorflow/core/util/events_writer.h\"\n\nusing namespace std;\nusing namespace tensorflow;\n\nvoid write(const void* serializedGraph, size_t serializedGraphSize, EventsWriter* writer, double wall_time, int64 step) {\n\t\n\tEvent event;\n\tevent.set_wall_time(wall_time);\n\tevent.set_step(step);\n\tevent.set_graph_def(serializedGraph, serializedGraphSize);\n\twriter-&gt;WriteEvent(event);\n\t\n}\n\nvoid createEventWriter(const void* serializedGraph, size_t serializedGraphSize, char * filePath, double wall_time, long long step) {\n\tEventsWriter eventsWriter(filePath);\n\twrite(serializedGraph, serializedGraphSize, &amp;eventsWriter, wall_time, step);\n}\n</code></pre>", "body_text": "Rebuild with latest changes in master only with C++ library.\nYes, it is works fine on mac os. Linking passed, tests passed.\nOn Linux (Linux kraken 4.4.0-96-generic #119-Ubuntu SMP Tue Sep 12 14:59:54 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux):\n\nBuild and run C API related code.\n\n\nCan't link C++ code in binary and tests, error:\n\n$ swift build --product OpProducer -Xcxx -std=c++11\nCompile CCAPI EventsWriter.cc\nCompile Swift Module 'OpProducer' (3 sources)\nLinking ./.build/x86_64-unknown-linux/debug/OpProducer\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:32: error: undefined reference to 'tensorflow::Event::Event()'\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:36: error: undefined reference to 'tensorflow::EventsWriter::WriteEvent(tensorflow::Event const&)'\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:38: error: undefined reference to 'tensorflow::Event::~Event()'\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:38: error: undefined reference to 'tensorflow::Event::~Event()'\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:41: error: undefined reference to 'tensorflow::EventsWriter::EventsWriter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\n/server/repository/tensorflow/bazel-genfiles/tensorflow/core/util/event.pb.h:1105: error: undefined reference to 'tensorflow::Event::clear_what()'\n/server/repository/tensorflow/tensorflow/core/util/events_writer.h:46: error: undefined reference to 'tensorflow::EventsWriter::Close()'\n//usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/unique_ptr.h:76: error: undefined reference to 'tensorflow::io::RecordWriter::~RecordWriter()'\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n<unknown>:0: error: link command failed with exit code 1 (use -v to see invocation)\nerror: terminated(1): /usr/bin/swift-build-tool -f /server/repository/TensorFlow/.build/debug.yaml OpProducer\n\nTested as static and dynamic (own) libraries.\nThe same with tests. Log attached.\nFor example EventWriter wrapper is really simple:\n#include \"include/EventsWriter.h\"\n#include \"tensorflow/core/framework/graph.pb.h\"\n#include \"tensorflow/core/util/events_writer.h\"\n\nusing namespace std;\nusing namespace tensorflow;\n\nvoid write(const void* serializedGraph, size_t serializedGraphSize, EventsWriter* writer, double wall_time, int64 step) {\n\t\n\tEvent event;\n\tevent.set_wall_time(wall_time);\n\tevent.set_step(step);\n\tevent.set_graph_def(serializedGraph, serializedGraphSize);\n\twriter->WriteEvent(event);\n\t\n}\n\nvoid createEventWriter(const void* serializedGraph, size_t serializedGraphSize, char * filePath, double wall_time, long long step) {\n\tEventsWriter eventsWriter(filePath);\n\twrite(serializedGraph, serializedGraphSize, &eventsWriter, wall_time, step);\n}", "body": "Rebuild with latest changes in master only with C++ library. \r\nYes, it is works fine on mac os. Linking passed, tests passed.\r\nOn Linux (Linux kraken 4.4.0-96-generic #119-Ubuntu SMP Tue Sep 12 14:59:54 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux):\r\n+ Build and run C API related code.\r\n- Can't link C++ code in binary and tests, error:\r\n```\r\n$ swift build --product OpProducer -Xcxx -std=c++11\r\nCompile CCAPI EventsWriter.cc\r\nCompile Swift Module 'OpProducer' (3 sources)\r\nLinking ./.build/x86_64-unknown-linux/debug/OpProducer\r\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:32: error: undefined reference to 'tensorflow::Event::Event()'\r\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:36: error: undefined reference to 'tensorflow::EventsWriter::WriteEvent(tensorflow::Event const&)'\r\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:38: error: undefined reference to 'tensorflow::Event::~Event()'\r\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:38: error: undefined reference to 'tensorflow::Event::~Event()'\r\n/server/repository/TensorFlow/Sources/CCAPI/EventsWriter.cc:41: error: undefined reference to 'tensorflow::EventsWriter::EventsWriter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/server/repository/tensorflow/bazel-genfiles/tensorflow/core/util/event.pb.h:1105: error: undefined reference to 'tensorflow::Event::clear_what()'\r\n/server/repository/tensorflow/tensorflow/core/util/events_writer.h:46: error: undefined reference to 'tensorflow::EventsWriter::Close()'\r\n//usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/unique_ptr.h:76: error: undefined reference to 'tensorflow::io::RecordWriter::~RecordWriter()'\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n<unknown>:0: error: link command failed with exit code 1 (use -v to see invocation)\r\nerror: terminated(1): /usr/bin/swift-build-tool -f /server/repository/TensorFlow/.build/debug.yaml OpProducer\r\n```\r\nTested as static and dynamic (own) libraries. \r\nThe same with tests. [Log attached](https://www.octadero.com/wp-content/uploads/2017/10/build.log_.zip).\r\n\r\n\r\nFor example EventWriter wrapper is really simple: \r\n```\r\n#include \"include/EventsWriter.h\"\r\n#include \"tensorflow/core/framework/graph.pb.h\"\r\n#include \"tensorflow/core/util/events_writer.h\"\r\n\r\nusing namespace std;\r\nusing namespace tensorflow;\r\n\r\nvoid write(const void* serializedGraph, size_t serializedGraphSize, EventsWriter* writer, double wall_time, int64 step) {\r\n\t\r\n\tEvent event;\r\n\tevent.set_wall_time(wall_time);\r\n\tevent.set_step(step);\r\n\tevent.set_graph_def(serializedGraph, serializedGraphSize);\r\n\twriter->WriteEvent(event);\r\n\t\r\n}\r\n\r\nvoid createEventWriter(const void* serializedGraph, size_t serializedGraphSize, char * filePath, double wall_time, long long step) {\r\n\tEventsWriter eventsWriter(filePath);\r\n\twrite(serializedGraph, serializedGraphSize, &eventsWriter, wall_time, step);\r\n}\r\n```\r\n\r\n"}