{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13522", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13522/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13522/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13522/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13522", "id": 263444106, "node_id": "MDU6SXNzdWUyNjM0NDQxMDY=", "number": 13522, "title": "Cannot register 2 metrics with the same name error.", "user": {"login": "VolodymyrPavliukevych", "id": 1786378, "node_id": "MDQ6VXNlcjE3ODYzNzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1786378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VolodymyrPavliukevych", "html_url": "https://github.com/VolodymyrPavliukevych", "followers_url": "https://api.github.com/users/VolodymyrPavliukevych/followers", "following_url": "https://api.github.com/users/VolodymyrPavliukevych/following{/other_user}", "gists_url": "https://api.github.com/users/VolodymyrPavliukevych/gists{/gist_id}", "starred_url": "https://api.github.com/users/VolodymyrPavliukevych/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VolodymyrPavliukevych/subscriptions", "organizations_url": "https://api.github.com/users/VolodymyrPavliukevych/orgs", "repos_url": "https://api.github.com/users/VolodymyrPavliukevych/repos", "events_url": "https://api.github.com/users/VolodymyrPavliukevych/events{/privacy}", "received_events_url": "https://api.github.com/users/VolodymyrPavliukevych/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-10-06T13:23:02Z", "updated_at": "2017-10-11T07:50:02Z", "closed_at": "2017-10-11T07:50:02Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nSwift API for TensorFlow</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nmacOS 10.12.6 (16G29), Darwin MacBookPro.local 16.7.0 Darwin Kernel Version 16.7.0</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nsource</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\nmaster branch [<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/d86448938260d0abb8e0f154cfefe0b82ff2e6cd/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/d86448938260d0abb8e0f154cfefe0b82ff2e6cd\"><tt>d864489</tt></a>]</li>\n<li><strong>Python version</strong>:<br>\nPython 2.7.13</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nbazel release 0.5.4</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nno</li>\n<li><strong>GPU model and memory</strong>:<br>\nno</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>Dear TensorFlow contributors,<br>\nI am working on swift height-level API for TensorFlow. To provide that, I am <a href=\"https://github.com/apple/swift-package-manager/blob/master/Documentation/Usage.md#require-system-libraries\">using system module</a> to provide access to C and C++ API. C API is clear in swift code, for C++ library I am writing my own wrappers. After update master branch I can't pass tests in my framework. Launch tests leads to error:</p>\n<blockquote>\n<p>Cannot register 2 metrics with the same name: /tensorflow/cc/saved_model/load_attempt_count</p>\n</blockquote>\n<p>My guess is:<br>\nAfter commit [<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/a674130dbe377294808f17a09a380ca1b6fd5f49/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/a674130dbe377294808f17a09a380ca1b6fd5f49\"><tt>a674130</tt></a>] ''Expose C API symbols on OS X\", all C API available on C++ library.<br>\n<a href=\"https://github.com/tensorflow/tensorflow/pull/12741\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/12741/hovercard\">more info</a><br>\nYou can see all C interfaces are available at C++ library:<br>\n<code>$ nm bazel-bin/tensorflow/libtensorflow_cc.so | grep 'TF_New' 000000000000f5f0 T _TF_NewBuffer 000000000000f610 T _TF_NewBufferFromString 000000000000f6b0 T _TF_NewDeprecatedSession 00000000000176f0 T _TF_NewGraph 0000000000017aa0 T _TF_NewImportGraphDefOptions 0000000000013190 T _TF_NewOperation 000000000001a170 T _TF_NewSession 000000000000f500 T _TF_NewSessionOptions 000000000000ea90 T _TF_NewStatus 000000000000ee80 T _TF_NewTensor 0000000000018a70 T _TF_NewWhile 000000000001cbb0 t __ZZ22TF_NewBufferFromStringEN3$_08__invokeEPvm</code></p>\n<p>So, my question/request is:</p>\n<ol>\n<li>Is it well-considered and final decision to provide C API in C++ library?</li>\n<li>Will it be default and public configuration to provide C API in C++ library?</li>\n<li>Is there any way to configure and build tensorflow library without changing<br>\n<code>tools/tf_env_collect.sh</code> file?<br>\nThank you for your work.</li>\n</ol>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nSwift API for TensorFlow\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nmacOS 10.12.6 (16G29), Darwin MacBookPro.local 16.7.0 Darwin Kernel Version 16.7.0\nTensorFlow installed from (source or binary):\nsource\nTensorFlow version (use command below):\nmaster branch [d864489]\nPython version:\nPython 2.7.13\nBazel version (if compiling from source):\nbazel release 0.5.4\nCUDA/cuDNN version:\nno\nGPU model and memory:\nno\nExact command to reproduce:\n\nDear TensorFlow contributors,\nI am working on swift height-level API for TensorFlow. To provide that, I am using system module to provide access to C and C++ API. C API is clear in swift code, for C++ library I am writing my own wrappers. After update master branch I can't pass tests in my framework. Launch tests leads to error:\n\nCannot register 2 metrics with the same name: /tensorflow/cc/saved_model/load_attempt_count\n\nMy guess is:\nAfter commit [a674130] ''Expose C API symbols on OS X\", all C API available on C++ library.\nmore info\nYou can see all C interfaces are available at C++ library:\n$ nm bazel-bin/tensorflow/libtensorflow_cc.so | grep 'TF_New' 000000000000f5f0 T _TF_NewBuffer 000000000000f610 T _TF_NewBufferFromString 000000000000f6b0 T _TF_NewDeprecatedSession 00000000000176f0 T _TF_NewGraph 0000000000017aa0 T _TF_NewImportGraphDefOptions 0000000000013190 T _TF_NewOperation 000000000001a170 T _TF_NewSession 000000000000f500 T _TF_NewSessionOptions 000000000000ea90 T _TF_NewStatus 000000000000ee80 T _TF_NewTensor 0000000000018a70 T _TF_NewWhile 000000000001cbb0 t __ZZ22TF_NewBufferFromStringEN3$_08__invokeEPvm\nSo, my question/request is:\n\nIs it well-considered and final decision to provide C API in C++ library?\nWill it be default and public configuration to provide C API in C++ library?\nIs there any way to configure and build tensorflow library without changing\ntools/tf_env_collect.sh file?\nThank you for your work.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nSwift API for TensorFlow\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nmacOS 10.12.6 (16G29), Darwin MacBookPro.local 16.7.0 Darwin Kernel Version 16.7.0\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n- **TensorFlow version (use command below)**:\r\nmaster branch [d864489]\r\n- **Python version**: \r\nPython 2.7.13\r\n- **Bazel version (if compiling from source)**:\r\nbazel release 0.5.4\r\n- **CUDA/cuDNN version**:\r\nno\r\n- **GPU model and memory**:\r\nno\r\n- **Exact command to reproduce**:\r\n\r\nDear TensorFlow contributors, \r\n I am working on swift height-level API for TensorFlow. To provide that, I am [using system module](https://github.com/apple/swift-package-manager/blob/master/Documentation/Usage.md#require-system-libraries) to provide access to C and C++ API. C API is clear in swift code, for C++ library I am writing my own wrappers. After update master branch I can't pass tests in my framework. Launch tests leads to error: \r\n> Cannot register 2 metrics with the same name: /tensorflow/cc/saved_model/load_attempt_count\r\n\r\nMy guess is:\r\nAfter commit [a674130] ''Expose C API symbols on OS X\", all C API available on C++ library. \r\n[more info](https://github.com/tensorflow/tensorflow/pull/12741)\r\nYou can see all C interfaces are available at C++ library:\r\n`\r\n$ nm bazel-bin/tensorflow/libtensorflow_cc.so | grep 'TF_New'\r\n000000000000f5f0 T _TF_NewBuffer\r\n000000000000f610 T _TF_NewBufferFromString\r\n000000000000f6b0 T _TF_NewDeprecatedSession\r\n00000000000176f0 T _TF_NewGraph\r\n0000000000017aa0 T _TF_NewImportGraphDefOptions\r\n0000000000013190 T _TF_NewOperation\r\n000000000001a170 T _TF_NewSession\r\n000000000000f500 T _TF_NewSessionOptions\r\n000000000000ea90 T _TF_NewStatus\r\n000000000000ee80 T _TF_NewTensor\r\n0000000000018a70 T _TF_NewWhile\r\n000000000001cbb0 t __ZZ22TF_NewBufferFromStringEN3$_08__invokeEPvm\r\n`\r\n\r\nSo, my question/request is: \r\n1) Is it well-considered and final decision to provide C API in C++ library?\r\n2) Will it be default and public configuration to provide C API in C++ library?\r\n3) Is there any way to configure and build tensorflow library without changing \r\n`tools/tf_env_collect.sh` file?\r\nThank you for your work. "}