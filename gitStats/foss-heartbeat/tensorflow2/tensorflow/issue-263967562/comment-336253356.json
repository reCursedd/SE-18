{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/336253356", "html_url": "https://github.com/tensorflow/tensorflow/issues/13591#issuecomment-336253356", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13591", "id": 336253356, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjI1MzM1Ng==", "user": {"login": "ybsave", "id": 26417094, "node_id": "MDQ6VXNlcjI2NDE3MDk0", "avatar_url": "https://avatars0.githubusercontent.com/u/26417094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ybsave", "html_url": "https://github.com/ybsave", "followers_url": "https://api.github.com/users/ybsave/followers", "following_url": "https://api.github.com/users/ybsave/following{/other_user}", "gists_url": "https://api.github.com/users/ybsave/gists{/gist_id}", "starred_url": "https://api.github.com/users/ybsave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ybsave/subscriptions", "organizations_url": "https://api.github.com/users/ybsave/orgs", "repos_url": "https://api.github.com/users/ybsave/repos", "events_url": "https://api.github.com/users/ybsave/events{/privacy}", "received_events_url": "https://api.github.com/users/ybsave/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-12T20:16:37Z", "updated_at": "2017-10-12T20:16:37Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6510203\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/reedwm\">@reedwm</a> I used the Resnet implementation at <a href=\"https://github.com/tensorflow/models/blob/master/official/resnet/resnet_model.py\">https://github.com/tensorflow/models/blob/master/official/resnet/resnet_model.py</a>; I made a few modifications by using slim to simplify the model definitions.</p>\n<p>Another person told me that he used Caffe on Resnet 101 for ImageNet with about batch size up to 100. But I am not aware what implementations he used. Sorry about that.</p>\n<p>From your posted output, it seems that the Tensorflow GPU memory allocations are performed in several sub-steps by allocating 2*previous memory one by one. So, it means as long as the single biggest allocation, e.g. 1.62G in your post, is smaller than half of the GPU, e.g., 4G, the problem should not appear, no matter of the total allocation so far, right?</p>", "body_text": "@reedwm I used the Resnet implementation at https://github.com/tensorflow/models/blob/master/official/resnet/resnet_model.py; I made a few modifications by using slim to simplify the model definitions.\nAnother person told me that he used Caffe on Resnet 101 for ImageNet with about batch size up to 100. But I am not aware what implementations he used. Sorry about that.\nFrom your posted output, it seems that the Tensorflow GPU memory allocations are performed in several sub-steps by allocating 2*previous memory one by one. So, it means as long as the single biggest allocation, e.g. 1.62G in your post, is smaller than half of the GPU, e.g., 4G, the problem should not appear, no matter of the total allocation so far, right?", "body": "@reedwm I used the Resnet implementation at https://github.com/tensorflow/models/blob/master/official/resnet/resnet_model.py; I made a few modifications by using slim to simplify the model definitions.\r\n\r\nAnother person told me that he used Caffe on Resnet 101 for ImageNet with about batch size up to 100. But I am not aware what implementations he used. Sorry about that.\r\n\r\nFrom your posted output, it seems that the Tensorflow GPU memory allocations are performed in several sub-steps by allocating 2*previous memory one by one. So, it means as long as the single biggest allocation, e.g. 1.62G in your post, is smaller than half of the GPU, e.g., 4G, the problem should not appear, no matter of the total allocation so far, right?"}