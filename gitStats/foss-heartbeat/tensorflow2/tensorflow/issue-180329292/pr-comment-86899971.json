{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86899971", "pull_request_review_id": 7534556, "id": 86899971, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODk5OTcx", "diff_hunk": "@@ -0,0 +1,70 @@\n+# Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\n+\"\"\"Seq2seq loss operations for use in neural networks.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import ops\n+from tensorflow.python.ops import array_ops\n+from tensorflow.python.ops import math_ops\n+\n+__all__ = [\"decoder_fn_train\",\n+           \"decoder_fn_eval_wrapper\"]\n+\n+def simple_decoder_fn_train(encoder_state):\n+  encoder_state = ops.convert_to_tensor(encoder_state)\n+\n+  def decoder_fn(time, cell_state, cell_output, context_state):\n+    if cell_state == None: # first call, return encoder_state\n+      return (None, encoder_state, None, cell_output, context_state)\n+    else:\n+      return (None, cell_state, None, cell_output, context_state)\n+  return decoder_fn\n+\n+\n+def simple_decoder_fn_inference(encoder_state, embeddings,\n+                                start_of_sequence_id, end_of_sequence_id,\n+                                maximum_length, dtype=dtypes.int32):\n+  start_of_sequence_id = ops.convert_to_tensor(start_of_sequence_id, dtype)", "path": "tensorflow/contrib/seq2seq/python/ops/decoder_fn.py", "position": null, "original_position": 45, "commit_id": "cf9f5d32c2d618e7dd98fe222b92aec1a3cf9dd4", "original_commit_id": "65e2e0c2172e9df4c7cfefb93a09523059cbd335", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "body": "use a similar name_scope _inside_ your internal \"def decoder_fn\"; here and for your other decoder.\n", "created_at": "2016-11-08T00:20:47Z", "updated_at": "2016-11-30T17:47:01Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4686#discussion_r86899971", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4686", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86899971"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4686#discussion_r86899971"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4686"}}, "body_html": "<p>use a similar name_scope <em>inside</em> your internal \"def decoder_fn\"; here and for your other decoder.</p>", "body_text": "use a similar name_scope inside your internal \"def decoder_fn\"; here and for your other decoder.", "in_reply_to_id": 86240472}