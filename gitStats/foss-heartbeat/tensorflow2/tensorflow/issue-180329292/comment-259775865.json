{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/259775865", "html_url": "https://github.com/tensorflow/tensorflow/pull/4686#issuecomment-259775865", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4686", "id": 259775865, "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc3NTg2NQ==", "user": {"login": "alrojo", "id": 12167999, "node_id": "MDQ6VXNlcjEyMTY3OTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/12167999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alrojo", "html_url": "https://github.com/alrojo", "followers_url": "https://api.github.com/users/alrojo/followers", "following_url": "https://api.github.com/users/alrojo/following{/other_user}", "gists_url": "https://api.github.com/users/alrojo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alrojo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alrojo/subscriptions", "organizations_url": "https://api.github.com/users/alrojo/orgs", "repos_url": "https://api.github.com/users/alrojo/repos", "events_url": "https://api.github.com/users/alrojo/events{/privacy}", "received_events_url": "https://api.github.com/users/alrojo/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-10T18:57:27Z", "updated_at": "2016-11-10T18:58:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=396613\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lmthang\">@lmthang</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a></p>\n<p>I have updated the <code>seq2seq_test</code> using <code>output_fn</code> as a projection instead of the cell wrapper.<br>\nPlease note I also made some minor changes to the <code>simple_decoder_fn_inference</code> function in two separate commits.</p>\n<blockquote>\n<p>To elaborate, here's a concrete piece of code that works:</p>\n<p>logits = layers.linear(cell_output, num_decoder_symbols, scope=scope)<br>\nnext_input_id = math_ops.cast(math_ops.argmax(logits, 1), dtype=dtype)<br>\nto replace the following line in simple_decoder_fn_inference:</p>\n<p>next_input_id = math_ops.cast(math_ops.argmax(cell_output, 1), dtype=dtype)<br>\nNote that layers is from contrib.layers.python.layers</p>\n</blockquote>\n<p>Sure, I can put <code>layers.linear(cell_output, num_decoder_symbols, scope=scope)</code> in, instead of the <code>output_fn(cell_output)</code>.</p>\n<p>Question:</p>\n<p>How would I train the projection? I assume it should be accessible both while training and validating. Perhaps take example in the newly updated <a href=\"https://github.com/alrojo/tensorflow/blob/dynamic_decoder/tensorflow/contrib/seq2seq/python/kernel_tests/seq2seq_test.py\"><code>seq2seq_test</code></a>?</p>\n<p>Also, I am available on Skype at github_alrojo if you are interested in doing some pair programming! :)</p>", "body_text": "Hi @lmthang and @ebrevdo\nI have updated the seq2seq_test using output_fn as a projection instead of the cell wrapper.\nPlease note I also made some minor changes to the simple_decoder_fn_inference function in two separate commits.\n\nTo elaborate, here's a concrete piece of code that works:\nlogits = layers.linear(cell_output, num_decoder_symbols, scope=scope)\nnext_input_id = math_ops.cast(math_ops.argmax(logits, 1), dtype=dtype)\nto replace the following line in simple_decoder_fn_inference:\nnext_input_id = math_ops.cast(math_ops.argmax(cell_output, 1), dtype=dtype)\nNote that layers is from contrib.layers.python.layers\n\nSure, I can put layers.linear(cell_output, num_decoder_symbols, scope=scope) in, instead of the output_fn(cell_output).\nQuestion:\nHow would I train the projection? I assume it should be accessible both while training and validating. Perhaps take example in the newly updated seq2seq_test?\nAlso, I am available on Skype at github_alrojo if you are interested in doing some pair programming! :)", "body": "Hi @lmthang and @ebrevdo \n\nI have updated the `seq2seq_test` using `output_fn` as a projection instead of the cell wrapper.\nPlease note I also made some minor changes to the `simple_decoder_fn_inference` function in two separate commits.\n\n> To elaborate, here's a concrete piece of code that works:\n> \n> logits = layers.linear(cell_output, num_decoder_symbols, scope=scope)\n> next_input_id = math_ops.cast(math_ops.argmax(logits, 1), dtype=dtype)\n> to replace the following line in simple_decoder_fn_inference:\n> \n> next_input_id = math_ops.cast(math_ops.argmax(cell_output, 1), dtype=dtype)\n> Note that layers is from contrib.layers.python.layers\n\nSure, I can put `layers.linear(cell_output, num_decoder_symbols, scope=scope)` in, instead of the `output_fn(cell_output)`.\n\nQuestion:\n\nHow would I train the projection? I assume it should be accessible both while training and validating. Perhaps take example in the newly updated [`seq2seq_test`](https://github.com/alrojo/tensorflow/blob/dynamic_decoder/tensorflow/contrib/seq2seq/python/kernel_tests/seq2seq_test.py)?\n\nAlso, I am available on Skype at github_alrojo if you are interested in doing some pair programming! :)\n"}