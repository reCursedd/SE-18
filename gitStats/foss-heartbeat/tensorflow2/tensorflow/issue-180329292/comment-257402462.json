{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/257402462", "html_url": "https://github.com/tensorflow/tensorflow/pull/4686#issuecomment-257402462", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4686", "id": 257402462, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzQwMjQ2Mg==", "user": {"login": "lmthang", "id": 396613, "node_id": "MDQ6VXNlcjM5NjYxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/396613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmthang", "html_url": "https://github.com/lmthang", "followers_url": "https://api.github.com/users/lmthang/followers", "following_url": "https://api.github.com/users/lmthang/following{/other_user}", "gists_url": "https://api.github.com/users/lmthang/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmthang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmthang/subscriptions", "organizations_url": "https://api.github.com/users/lmthang/orgs", "repos_url": "https://api.github.com/users/lmthang/repos", "events_url": "https://api.github.com/users/lmthang/events{/privacy}", "received_events_url": "https://api.github.com/users/lmthang/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-31T19:56:28Z", "updated_at": "2016-10-31T19:56:28Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a>: will let you know soon!</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12167999\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alrojo\">@alrojo</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a>: I'd propose to keep sequence_lengths in dynamic_decoder so users don't have to bother handling sequence_lengths in decoder_fn_train. I find it natural (and logically clear) to have (inputs, decoder_lengths) go in pair: they both have to be not None at training time &amp; both need to be None at inference time. We should make sure we enforce those constraints, Alexander.</p>\n<p>As Alexander asked, shall we standardize names as below?<br>\ndynamic_rnn_decoder<br>\ndecoder_fn_train<br>\ndecoder_fn_inference<br>\n(Of course, feel free to prepend the names of decoder_fn like you did Alexander like simple_decoder_fn_train, simple_decoder_fn_inference)</p>\n<p>-T</p>", "body_text": "@vrv: will let you know soon!\n@alrojo @ebrevdo: I'd propose to keep sequence_lengths in dynamic_decoder so users don't have to bother handling sequence_lengths in decoder_fn_train. I find it natural (and logically clear) to have (inputs, decoder_lengths) go in pair: they both have to be not None at training time & both need to be None at inference time. We should make sure we enforce those constraints, Alexander.\nAs Alexander asked, shall we standardize names as below?\ndynamic_rnn_decoder\ndecoder_fn_train\ndecoder_fn_inference\n(Of course, feel free to prepend the names of decoder_fn like you did Alexander like simple_decoder_fn_train, simple_decoder_fn_inference)\n-T", "body": "@vrv: will let you know soon!\n\n@alrojo @ebrevdo: I'd propose to keep sequence_lengths in dynamic_decoder so users don't have to bother handling sequence_lengths in decoder_fn_train. I find it natural (and logically clear) to have (inputs, decoder_lengths) go in pair: they both have to be not None at training time & both need to be None at inference time. We should make sure we enforce those constraints, Alexander.\n\nAs Alexander asked, shall we standardize names as below?\ndynamic_rnn_decoder\ndecoder_fn_train\ndecoder_fn_inference\n(Of course, feel free to prepend the names of decoder_fn like you did Alexander like simple_decoder_fn_train, simple_decoder_fn_inference)\n\n-T\n"}