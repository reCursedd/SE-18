{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/257122695", "html_url": "https://github.com/tensorflow/tensorflow/pull/4686#issuecomment-257122695", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4686", "id": 257122695, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzEyMjY5NQ==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-29T23:45:59Z", "updated_at": "2016-10-29T23:45:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>You don't need a class, just a function that accepts the encoder_state and<br>\ncreates an appropriate decoder_fn with the encoder state available via<br>\nclosure. That creator function can return the new decoder_fn to the user.</p>\n<p>On Oct 29, 2016 11:04 AM, \"Alexander Rosenberg Johansen\" &lt;<br>\n<a href=\"mailto:notifications@github.com\">notifications@github.com</a>&gt; wrote:</p>\n<blockquote>\n<p>Regarding attention, we would need to \"concat\" something extra to the<br>\ninput.</p>\n<p>We can do this by either adding the input to the decoder_fn or by<br>\nreformulating the following:</p>\n<pre><code># call decoder function\nif inputs is not None: # training\n  # get next_cell_input\n  if cell_state == None:\n    next_cell_input = inputs_ta.read(0)\n  else:\n    batch_size = array_ops.shape(done)[0]\n    next_cell_input = control_flow_ops.cond(\n        tf.equal(time, max_time),\n        lambda: array_ops.zeros([batch_size, input_depth], dtype=dtype),\n        lambda: inputs_ta.read(time))\n  (next_done, next_cell_state, _, emit_output, next_context_state) = decoder_fn(cell_state, cell_output, context_state)\n</code></pre>\n<p>into</p>\n<pre><code># call decoder function\nif inputs is not None: # training\n  # get next_cell_input\n  if cell_state == None:\n    next_cell_input = inputs_ta.read(0)\n  else:\n    batch_size = array_ops.shape(done)[0]\n    next_cell_input = control_flow_ops.cond(\n        tf.equal(time, max_time),\n        lambda: array_ops.zeros([batch_size, input_depth], dtype=dtype),\n        lambda: inputs_ta.read(time))\n  (next_done, next_cell_state, additional_input, emit_output, next_context_state) = decoder_fn(cell_state, cell_output, context_state)\n  if additional_input is not None:\n      # concat along feature dimension\n      tf.concat(concat_dim=-1, [next_cell_input, additional_input])\n</code></pre>\n<p>\u2014<br>\nYou are receiving this because you were mentioned.<br>\nReply to this email directly, view it on GitHub<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"180329292\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/4686\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/4686/hovercard?comment_id=257106172&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/pull/4686#issuecomment-257106172\">#4686 (comment)</a>,<br>\nor mute the thread<br>\n<a href=\"https://github.com/notifications/unsubscribe-auth/ABtim5DkMDEtNGiCBWvmGMSXTDEYByb0ks5q44mrgaJpZM4KLMiD\">https://github.com/notifications/unsubscribe-auth/ABtim5DkMDEtNGiCBWvmGMSXTDEYByb0ks5q44mrgaJpZM4KLMiD</a><br>\n.</p>\n</blockquote>", "body_text": "You don't need a class, just a function that accepts the encoder_state and\ncreates an appropriate decoder_fn with the encoder state available via\nclosure. That creator function can return the new decoder_fn to the user.\nOn Oct 29, 2016 11:04 AM, \"Alexander Rosenberg Johansen\" <\nnotifications@github.com> wrote:\n\nRegarding attention, we would need to \"concat\" something extra to the\ninput.\nWe can do this by either adding the input to the decoder_fn or by\nreformulating the following:\n# call decoder function\nif inputs is not None: # training\n  # get next_cell_input\n  if cell_state == None:\n    next_cell_input = inputs_ta.read(0)\n  else:\n    batch_size = array_ops.shape(done)[0]\n    next_cell_input = control_flow_ops.cond(\n        tf.equal(time, max_time),\n        lambda: array_ops.zeros([batch_size, input_depth], dtype=dtype),\n        lambda: inputs_ta.read(time))\n  (next_done, next_cell_state, _, emit_output, next_context_state) = decoder_fn(cell_state, cell_output, context_state)\n\ninto\n# call decoder function\nif inputs is not None: # training\n  # get next_cell_input\n  if cell_state == None:\n    next_cell_input = inputs_ta.read(0)\n  else:\n    batch_size = array_ops.shape(done)[0]\n    next_cell_input = control_flow_ops.cond(\n        tf.equal(time, max_time),\n        lambda: array_ops.zeros([batch_size, input_depth], dtype=dtype),\n        lambda: inputs_ta.read(time))\n  (next_done, next_cell_state, additional_input, emit_output, next_context_state) = decoder_fn(cell_state, cell_output, context_state)\n  if additional_input is not None:\n      # concat along feature dimension\n      tf.concat(concat_dim=-1, [next_cell_input, additional_input])\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#4686 (comment),\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABtim5DkMDEtNGiCBWvmGMSXTDEYByb0ks5q44mrgaJpZM4KLMiD\n.", "body": "You don't need a class, just a function that accepts the encoder_state and\ncreates an appropriate decoder_fn with the encoder state available via\nclosure. That creator function can return the new decoder_fn to the user.\n\nOn Oct 29, 2016 11:04 AM, \"Alexander Rosenberg Johansen\" <\nnotifications@github.com> wrote:\n\n> Regarding attention, we would need to \"concat\" something extra to the\n> input.\n> \n> We can do this by either adding the input to the decoder_fn or by\n> reformulating the following:\n> \n> ```\n> # call decoder function\n> if inputs is not None: # training\n>   # get next_cell_input\n>   if cell_state == None:\n>     next_cell_input = inputs_ta.read(0)\n>   else:\n>     batch_size = array_ops.shape(done)[0]\n>     next_cell_input = control_flow_ops.cond(\n>         tf.equal(time, max_time),\n>         lambda: array_ops.zeros([batch_size, input_depth], dtype=dtype),\n>         lambda: inputs_ta.read(time))\n>   (next_done, next_cell_state, _, emit_output, next_context_state) = decoder_fn(cell_state, cell_output, context_state)\n> ```\n> \n> into\n> \n> ```\n> # call decoder function\n> if inputs is not None: # training\n>   # get next_cell_input\n>   if cell_state == None:\n>     next_cell_input = inputs_ta.read(0)\n>   else:\n>     batch_size = array_ops.shape(done)[0]\n>     next_cell_input = control_flow_ops.cond(\n>         tf.equal(time, max_time),\n>         lambda: array_ops.zeros([batch_size, input_depth], dtype=dtype),\n>         lambda: inputs_ta.read(time))\n>   (next_done, next_cell_state, additional_input, emit_output, next_context_state) = decoder_fn(cell_state, cell_output, context_state)\n>   if additional_input is not None:\n>       # concat along feature dimension\n>       tf.concat(concat_dim=-1, [next_cell_input, additional_input])\n> ```\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/pull/4686#issuecomment-257106172,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABtim5DkMDEtNGiCBWvmGMSXTDEYByb0ks5q44mrgaJpZM4KLMiD\n> .\n"}