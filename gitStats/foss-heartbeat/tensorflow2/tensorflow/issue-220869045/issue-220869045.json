{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9127", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9127/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9127/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9127/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9127", "id": 220869045, "node_id": "MDU6SXNzdWUyMjA4NjkwNDU=", "number": 9127, "title": "How to reinitialize state prior to inference with RNN", "user": {"login": "kevinashaw", "id": 7141343, "node_id": "MDQ6VXNlcjcxNDEzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7141343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinashaw", "html_url": "https://github.com/kevinashaw", "followers_url": "https://api.github.com/users/kevinashaw/followers", "following_url": "https://api.github.com/users/kevinashaw/following{/other_user}", "gists_url": "https://api.github.com/users/kevinashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinashaw/subscriptions", "organizations_url": "https://api.github.com/users/kevinashaw/orgs", "repos_url": "https://api.github.com/users/kevinashaw/repos", "events_url": "https://api.github.com/users/kevinashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinashaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-11T07:59:16Z", "updated_at": "2017-04-12T02:27:40Z", "closed_at": "2017-04-12T02:27:40Z", "author_association": "NONE", "body_html": "<p>I have an RNN graph which has been trained in TF with good accuracy, but when it runs in Android (using libtensorflow_inference.so) it runs poorly.  I have a hypothesis that the problem is due to the statefulness of the RNN.  It is my understanding that during training the RNN state is reinitialized to a fresh state with each minibatch.  However, when running in reallife, it is running continuously without the state being refreshed.  Thus causing anomalous results.<br>\nIs there a way to force the state to be refreshed when running in an Android environment?  I note that the java interface (tensorflowinferenceinterface.java) has no such method.<br>\nI have also documented this inquiry in SO nine days ago, but had no response: <a href=\"http://stackoverflow.com/questions/43159921/tensorflow-initializing-state-for-rnn-between-inferences-in-android\" rel=\"nofollow\">link</a>.</p>", "body_text": "I have an RNN graph which has been trained in TF with good accuracy, but when it runs in Android (using libtensorflow_inference.so) it runs poorly.  I have a hypothesis that the problem is due to the statefulness of the RNN.  It is my understanding that during training the RNN state is reinitialized to a fresh state with each minibatch.  However, when running in reallife, it is running continuously without the state being refreshed.  Thus causing anomalous results.\nIs there a way to force the state to be refreshed when running in an Android environment?  I note that the java interface (tensorflowinferenceinterface.java) has no such method.\nI have also documented this inquiry in SO nine days ago, but had no response: link.", "body": "I have an RNN graph which has been trained in TF with good accuracy, but when it runs in Android (using libtensorflow_inference.so) it runs poorly.  I have a hypothesis that the problem is due to the statefulness of the RNN.  It is my understanding that during training the RNN state is reinitialized to a fresh state with each minibatch.  However, when running in reallife, it is running continuously without the state being refreshed.  Thus causing anomalous results.\r\nIs there a way to force the state to be refreshed when running in an Android environment?  I note that the java interface (tensorflowinferenceinterface.java) has no such method.\r\nI have also documented this inquiry in SO nine days ago, but had no response: [link](http://stackoverflow.com/questions/43159921/tensorflow-initializing-state-for-rnn-between-inferences-in-android)."}