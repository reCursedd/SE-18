{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5427", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5427/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5427/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5427/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5427", "id": 187558553, "node_id": "MDU6SXNzdWUxODc1NTg1NTM=", "number": 5427, "title": "tensorflow.contrib.layers.feature_column_ops with tf.placeholder tensors", "user": {"login": "pilipolio", "id": 1544839, "node_id": "MDQ6VXNlcjE1NDQ4Mzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1544839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pilipolio", "html_url": "https://github.com/pilipolio", "followers_url": "https://api.github.com/users/pilipolio/followers", "following_url": "https://api.github.com/users/pilipolio/following{/other_user}", "gists_url": "https://api.github.com/users/pilipolio/gists{/gist_id}", "starred_url": "https://api.github.com/users/pilipolio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pilipolio/subscriptions", "organizations_url": "https://api.github.com/users/pilipolio/orgs", "repos_url": "https://api.github.com/users/pilipolio/repos", "events_url": "https://api.github.com/users/pilipolio/events{/privacy}", "received_events_url": "https://api.github.com/users/pilipolio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-06T12:26:41Z", "updated_at": "2016-11-07T23:34:10Z", "closed_at": "2016-11-07T23:34:10Z", "author_association": "NONE", "body_html": "<p>Following up on the TF.Learn tutorials demonstrating linear models with categorical variables (<a href=\"https://www.tensorflow.org/versions/r0.9/tutorials/linear/overview.html\" rel=\"nofollow\">https://www.tensorflow.org/versions/r0.9/tutorials/linear/overview.html</a>), I have tried to re-use the functions &amp; abstractions from <code>tensorflow.contrib.layers.feature_column_ops</code> to hash, encode &amp; cross my input categorical columns while still handling the rest of the computing in low-level TensorFlow.</p>\n<p>However, when I pass a normal Tensor (or placeholder) as values of the <code>columns_to_tensors</code> parameters of <code>weighted_sum_from_feature_columns</code> (<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/feature_column_ops.py#L460\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/feature_column_ops.py#L460</a>), it fails because of the <code>shape</code> parameter being not available.</p>\n<p>Is there any way or plan to enable passing any Tensors other than SparseTensors to this function?</p>", "body_text": "Following up on the TF.Learn tutorials demonstrating linear models with categorical variables (https://www.tensorflow.org/versions/r0.9/tutorials/linear/overview.html), I have tried to re-use the functions & abstractions from tensorflow.contrib.layers.feature_column_ops to hash, encode & cross my input categorical columns while still handling the rest of the computing in low-level TensorFlow.\nHowever, when I pass a normal Tensor (or placeholder) as values of the columns_to_tensors parameters of weighted_sum_from_feature_columns (https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/feature_column_ops.py#L460), it fails because of the shape parameter being not available.\nIs there any way or plan to enable passing any Tensors other than SparseTensors to this function?", "body": "Following up on the TF.Learn tutorials demonstrating linear models with categorical variables (https://www.tensorflow.org/versions/r0.9/tutorials/linear/overview.html), I have tried to re-use the functions & abstractions from `tensorflow.contrib.layers.feature_column_ops` to hash, encode & cross my input categorical columns while still handling the rest of the computing in low-level TensorFlow.\r\n\r\nHowever, when I pass a normal Tensor (or placeholder) as values of the `columns_to_tensors` parameters of `weighted_sum_from_feature_columns` (https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/feature_column_ops.py#L460), it fails because of the `shape` parameter being not available.\r\n\r\nIs there any way or plan to enable passing any Tensors other than SparseTensors to this function?"}