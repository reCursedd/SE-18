{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17107", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17107/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17107/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17107/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17107", "id": 298082998, "node_id": "MDU6SXNzdWUyOTgwODI5OTg=", "number": 17107, "title": "cmake test fail on Windows", "user": {"login": "apiszcz", "id": 1430861, "node_id": "MDQ6VXNlcjE0MzA4NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1430861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiszcz", "html_url": "https://github.com/apiszcz", "followers_url": "https://api.github.com/users/apiszcz/followers", "following_url": "https://api.github.com/users/apiszcz/following{/other_user}", "gists_url": "https://api.github.com/users/apiszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiszcz/subscriptions", "organizations_url": "https://api.github.com/users/apiszcz/orgs", "repos_url": "https://api.github.com/users/apiszcz/repos", "events_url": "https://api.github.com/users/apiszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/apiszcz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-18T12:59:57Z", "updated_at": "2018-03-05T20:21:52Z", "closed_at": "2018-03-05T20:21:06Z", "author_association": "NONE", "body_html": "<pre><code>:: - MSVC Community 2015 Update 3\n:: - ANACONDA        4.4.4 (Python 3.5.5)\n:: - CMake          3.10.2\n:: - SWIG           3.0.12\n:: - GIT            2.15.1.windows.2\n:: - NVIDIA CUDA       8.1 \n:: - NVIDIA CUDNN     6.0\n</code></pre>\n<p>Command<br>\ncmake .. ^<br>\n-A x64 ^<br>\n-DCMAKE_BUILD_TYPE=Release ^<br>\n-DSWIG_EXECUTABLE=%SWIGEXE% ^<br>\n-DPYTHON_EXECUTABLE=%PYEXE% ^<br>\n-DPYTHON_LIBRARIES=%PYLIB% ^<br>\n-DPYTHON_INCLUDE_DIR=%PYINC% ^<br>\n-DNUMPY_INCLUDE_DIR=%NPYINC% ^<br>\n-Dtensorflow_ENABLE_GPU=ON ^<br>\n-DCUDNN_HOME=%CUDNNH% ^<br>\n-Dtensorflow_BUILD_PYTHON_TESTS=OFF ^<br>\n-Dtensorflow_BUILD_CC_TESTS=OFF ^<br>\n-Dtensorflow_TF_NIGHTLY=OFF ^<br>\n-Dtensorflow_CUDA_VERSION=8.0</p>\n<p>This code block fails an causes a CMAKE error<br>\n\"Selected compiler (or version) is not supported for CUDA\"</p>\n<pre><code>  # Test compatibility of compiler on CUDA\n  try_compile(CUDA_TEST_COMPILE_C\n     ${CMAKE_CURRENT_BINARY_DIR}/tests/cuda\n    ${CMAKE_CURRENT_SOURCE_DIR}/tests/cuda/compatibility_test.c\n    CMAKE_FLAGS -DINCLUDE_DIRECTORIES=${CUDA_INCLUDE_DIRS})\n  try_compile(CUDA_TEST_COMPILE_CXX\n    ${CMAKE_CURRENT_BINARY_DIR}/tests/cuda\n    ${CMAKE_CURRENT_SOURCE_DIR}/tests/cuda/compatibility_test.cc\n    CMAKE_FLAGS -DINCLUDE_DIRECTORIES=${CUDA_INCLUDE_DIRS})\n  if(NOT (CUDA_TEST_COMPILE_C AND CUDA_TEST_COMPILE_CXX))\n    message(FATAL_ERROR \"Selected compiler (or version) is not supported for CUDA\")\n  endif()\n</code></pre>", "body_text": ":: - MSVC Community 2015 Update 3\n:: - ANACONDA        4.4.4 (Python 3.5.5)\n:: - CMake          3.10.2\n:: - SWIG           3.0.12\n:: - GIT            2.15.1.windows.2\n:: - NVIDIA CUDA       8.1 \n:: - NVIDIA CUDNN     6.0\n\nCommand\ncmake .. ^\n-A x64 ^\n-DCMAKE_BUILD_TYPE=Release ^\n-DSWIG_EXECUTABLE=%SWIGEXE% ^\n-DPYTHON_EXECUTABLE=%PYEXE% ^\n-DPYTHON_LIBRARIES=%PYLIB% ^\n-DPYTHON_INCLUDE_DIR=%PYINC% ^\n-DNUMPY_INCLUDE_DIR=%NPYINC% ^\n-Dtensorflow_ENABLE_GPU=ON ^\n-DCUDNN_HOME=%CUDNNH% ^\n-Dtensorflow_BUILD_PYTHON_TESTS=OFF ^\n-Dtensorflow_BUILD_CC_TESTS=OFF ^\n-Dtensorflow_TF_NIGHTLY=OFF ^\n-Dtensorflow_CUDA_VERSION=8.0\nThis code block fails an causes a CMAKE error\n\"Selected compiler (or version) is not supported for CUDA\"\n  # Test compatibility of compiler on CUDA\n  try_compile(CUDA_TEST_COMPILE_C\n     ${CMAKE_CURRENT_BINARY_DIR}/tests/cuda\n    ${CMAKE_CURRENT_SOURCE_DIR}/tests/cuda/compatibility_test.c\n    CMAKE_FLAGS -DINCLUDE_DIRECTORIES=${CUDA_INCLUDE_DIRS})\n  try_compile(CUDA_TEST_COMPILE_CXX\n    ${CMAKE_CURRENT_BINARY_DIR}/tests/cuda\n    ${CMAKE_CURRENT_SOURCE_DIR}/tests/cuda/compatibility_test.cc\n    CMAKE_FLAGS -DINCLUDE_DIRECTORIES=${CUDA_INCLUDE_DIRS})\n  if(NOT (CUDA_TEST_COMPILE_C AND CUDA_TEST_COMPILE_CXX))\n    message(FATAL_ERROR \"Selected compiler (or version) is not supported for CUDA\")\n  endif()", "body": "```\r\n:: - MSVC Community 2015 Update 3\r\n:: - ANACONDA        4.4.4 (Python 3.5.5)\r\n:: - CMake          3.10.2\r\n:: - SWIG           3.0.12\r\n:: - GIT            2.15.1.windows.2\r\n:: - NVIDIA CUDA       8.1 \r\n:: - NVIDIA CUDNN     6.0\r\n```\r\n\r\nCommand\r\ncmake .. ^\r\n-A x64 ^\r\n-DCMAKE_BUILD_TYPE=Release ^\r\n-DSWIG_EXECUTABLE=%SWIGEXE% ^\r\n-DPYTHON_EXECUTABLE=%PYEXE% ^\r\n-DPYTHON_LIBRARIES=%PYLIB% ^\r\n-DPYTHON_INCLUDE_DIR=%PYINC% ^\r\n-DNUMPY_INCLUDE_DIR=%NPYINC% ^\r\n-Dtensorflow_ENABLE_GPU=ON ^\r\n-DCUDNN_HOME=%CUDNNH% ^\r\n-Dtensorflow_BUILD_PYTHON_TESTS=OFF ^\r\n-Dtensorflow_BUILD_CC_TESTS=OFF ^\r\n-Dtensorflow_TF_NIGHTLY=OFF ^\r\n-Dtensorflow_CUDA_VERSION=8.0\r\n\r\nThis code block fails an causes a CMAKE error\r\n\"Selected compiler (or version) is not supported for CUDA\"\r\n\r\n```\r\n  # Test compatibility of compiler on CUDA\r\n  try_compile(CUDA_TEST_COMPILE_C\r\n     ${CMAKE_CURRENT_BINARY_DIR}/tests/cuda\r\n    ${CMAKE_CURRENT_SOURCE_DIR}/tests/cuda/compatibility_test.c\r\n    CMAKE_FLAGS -DINCLUDE_DIRECTORIES=${CUDA_INCLUDE_DIRS})\r\n  try_compile(CUDA_TEST_COMPILE_CXX\r\n    ${CMAKE_CURRENT_BINARY_DIR}/tests/cuda\r\n    ${CMAKE_CURRENT_SOURCE_DIR}/tests/cuda/compatibility_test.cc\r\n    CMAKE_FLAGS -DINCLUDE_DIRECTORIES=${CUDA_INCLUDE_DIRS})\r\n  if(NOT (CUDA_TEST_COMPILE_C AND CUDA_TEST_COMPILE_CXX))\r\n    message(FATAL_ERROR \"Selected compiler (or version) is not supported for CUDA\")\r\n  endif()\r\n```\r\n"}