{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314358937", "html_url": "https://github.com/tensorflow/tensorflow/issues/11416#issuecomment-314358937", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11416", "id": 314358937, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDM1ODkzNw==", "user": {"login": "junshi15", "id": 12075848, "node_id": "MDQ6VXNlcjEyMDc1ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/12075848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junshi15", "html_url": "https://github.com/junshi15", "followers_url": "https://api.github.com/users/junshi15/followers", "following_url": "https://api.github.com/users/junshi15/following{/other_user}", "gists_url": "https://api.github.com/users/junshi15/gists{/gist_id}", "starred_url": "https://api.github.com/users/junshi15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junshi15/subscriptions", "organizations_url": "https://api.github.com/users/junshi15/orgs", "repos_url": "https://api.github.com/users/junshi15/repos", "events_url": "https://api.github.com/users/junshi15/events{/privacy}", "received_events_url": "https://api.github.com/users/junshi15/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-11T07:28:02Z", "updated_at": "2017-07-11T07:50:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5404419\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/on-the-run\">@on-the-run</a> RDMA_MESSAGE_TENSOR_REQUEST is a fairly simple message. Here are some possibilities why PS did not receive it.</p>\n<ol>\n<li>\n<p>the message was not sent by the worker. Note we only enqueue the message. The actual RDMA write happens <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L640-L656\">here</a>, by logging more in that function, we will know if the message is indeed written.</p>\n</li>\n<li>\n<p>the message was not received at PS. <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L121-L127\">Here</a> is how we get notification of events. I do not expect any missed events, but maybe there are corner cases...<br>\nMy focus would be on (1) since it is easier to verify. If in doubt, You can also check if the worker's tx_message_buf and PS' rx_message_buf addresses are paired, so that messages go to the right buffer.</p>\n</li>\n<li>\n<p>the buffer name is parsed incorrectly. When the message is sent by the worker, we attach a <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L641\">32-bit number</a>, which is a hash code of the RDMA buffer name, i.e. \"rx_message_buffer\". At the PS, the hash code is <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L140\">converted back</a> to RDMA buffer name. Hashing collision is rare but possible. If you have more than 4 billion tensors, then collision is guaranteed.</p>\n</li>\n</ol>", "body_text": "@on-the-run RDMA_MESSAGE_TENSOR_REQUEST is a fairly simple message. Here are some possibilities why PS did not receive it.\n\n\nthe message was not sent by the worker. Note we only enqueue the message. The actual RDMA write happens here, by logging more in that function, we will know if the message is indeed written.\n\n\nthe message was not received at PS. Here is how we get notification of events. I do not expect any missed events, but maybe there are corner cases...\nMy focus would be on (1) since it is easier to verify. If in doubt, You can also check if the worker's tx_message_buf and PS' rx_message_buf addresses are paired, so that messages go to the right buffer.\n\n\nthe buffer name is parsed incorrectly. When the message is sent by the worker, we attach a 32-bit number, which is a hash code of the RDMA buffer name, i.e. \"rx_message_buffer\". At the PS, the hash code is converted back to RDMA buffer name. Hashing collision is rare but possible. If you have more than 4 billion tensors, then collision is guaranteed.", "body": "@on-the-run RDMA_MESSAGE_TENSOR_REQUEST is a fairly simple message. Here are some possibilities why PS did not receive it.\r\n1) the message was not sent by the worker. Note we only enqueue the message. The actual RDMA write happens [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L640-L656), by logging more in that function, we will know if the message is indeed written.\r\n\r\n2) the message was not received at PS. [Here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L121-L127) is how we get notification of events. I do not expect any missed events, but maybe there are corner cases...\r\nMy focus would be on (1) since it is easier to verify. If in doubt, You can also check if the worker's tx_message_buf and PS' rx_message_buf addresses are paired, so that messages go to the right buffer.\r\n3) the buffer name is parsed incorrectly. When the message is sent by the worker, we attach a [32-bit number](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L641), which is a hash code of the RDMA buffer name, i.e. \"rx_message_buffer\". At the PS, the hash code is [converted back](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L140) to RDMA buffer name. Hashing collision is rare but possible. If you have more than 4 billion tensors, then collision is guaranteed."}