{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314894481", "html_url": "https://github.com/tensorflow/tensorflow/issues/11416#issuecomment-314894481", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11416", "id": 314894481, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDg5NDQ4MQ==", "user": {"login": "junshi15", "id": 12075848, "node_id": "MDQ6VXNlcjEyMDc1ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/12075848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junshi15", "html_url": "https://github.com/junshi15", "followers_url": "https://api.github.com/users/junshi15/followers", "following_url": "https://api.github.com/users/junshi15/following{/other_user}", "gists_url": "https://api.github.com/users/junshi15/gists{/gist_id}", "starred_url": "https://api.github.com/users/junshi15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junshi15/subscriptions", "organizations_url": "https://api.github.com/users/junshi15/orgs", "repos_url": "https://api.github.com/users/junshi15/repos", "events_url": "https://api.github.com/users/junshi15/events{/privacy}", "received_events_url": "https://api.github.com/users/junshi15/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-12T20:56:51Z", "updated_at": "2017-07-12T21:35:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5404419\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/on-the-run\">@on-the-run</a><br>\nsome high-level stuff:<br>\nthere are three types of buffers, message/tensor/ack, each of them has tx and rx version. \"tx\" is for sending and rx is for receiving. tensorbuf is for tensor exchange, messagebuf is for message and all acks are on ackbuf. Since there is one one pair of message buffer and one pair of ack buffer, all the messages needs to be sent one by one. So are all the packs.</p>\n<p>When a message is sent from A to B, in most cases, B needs to send an <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L199\">ack</a>, hence if you look at A's log, you have \"sent RDMA_MESSAGE_XXXX\", then \"received RDMA_MESSAGE_ACK\". In B's log, you should have \"received RDMA_MESSAGE_XXX\", then \"sent RDMA_MESSAGE_ACK\"</p>\n<p>it seems all nodes sent \"RDMA_MESSAGE_TENSOR_REQUEST\" and received \"RDMA_MESSAGE_ACK\". I don't see any log from B's perspective. this is odd. A logging issue?</p>\n<p>To answer your questions:</p>\n<ol>\n<li>\n<p>Mostly in Process_CQ(), e.g. <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L154\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L154</a></p>\n</li>\n<li>\n<p>buffers are busy. Remember all the messages have to be sent sequentially. A message can be sent only if both local tx-buf and remote rx-buf are idle. I think worker1 was stalled there.</p>\n</li>\n<li>\n<p>I don't see any \"sent RDMA_MESSAGE_ACK\". logging issue?</p>\n</li>\n</ol>", "body_text": "@on-the-run\nsome high-level stuff:\nthere are three types of buffers, message/tensor/ack, each of them has tx and rx version. \"tx\" is for sending and rx is for receiving. tensorbuf is for tensor exchange, messagebuf is for message and all acks are on ackbuf. Since there is one one pair of message buffer and one pair of ack buffer, all the messages needs to be sent one by one. So are all the packs.\nWhen a message is sent from A to B, in most cases, B needs to send an ack, hence if you look at A's log, you have \"sent RDMA_MESSAGE_XXXX\", then \"received RDMA_MESSAGE_ACK\". In B's log, you should have \"received RDMA_MESSAGE_XXX\", then \"sent RDMA_MESSAGE_ACK\"\nit seems all nodes sent \"RDMA_MESSAGE_TENSOR_REQUEST\" and received \"RDMA_MESSAGE_ACK\". I don't see any log from B's perspective. this is odd. A logging issue?\nTo answer your questions:\n\n\nMostly in Process_CQ(), e.g. https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L154\n\n\nbuffers are busy. Remember all the messages have to be sent sequentially. A message can be sent only if both local tx-buf and remote rx-buf are idle. I think worker1 was stalled there.\n\n\nI don't see any \"sent RDMA_MESSAGE_ACK\". logging issue?", "body": "@on-the-run \r\nsome high-level stuff:\r\nthere are three types of buffers, message/tensor/ack, each of them has tx and rx version. \"tx\" is for sending and rx is for receiving. tensorbuf is for tensor exchange, messagebuf is for message and all acks are on ackbuf. Since there is one one pair of message buffer and one pair of ack buffer, all the messages needs to be sent one by one. So are all the packs.\r\n\r\nWhen a message is sent from A to B, in most cases, B needs to send an [ack](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L199), hence if you look at A's log, you have \"sent RDMA_MESSAGE_XXXX\", then \"received RDMA_MESSAGE_ACK\". In B's log, you should have \"received RDMA_MESSAGE_XXX\", then \"sent RDMA_MESSAGE_ACK\"\r\n\r\nit seems all nodes sent \"RDMA_MESSAGE_TENSOR_REQUEST\" and received \"RDMA_MESSAGE_ACK\". I don't see any log from B's perspective. this is odd. A logging issue?\r\n\r\nTo answer your questions:\r\n1) Mostly in Process_CQ(), e.g. https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L154\r\n\r\n2) buffers are busy. Remember all the messages have to be sent sequentially. A message can be sent only if both local tx-buf and remote rx-buf are idle. I think worker1 was stalled there.\r\n\r\n3) I don't see any \"sent RDMA_MESSAGE_ACK\". logging issue?"}