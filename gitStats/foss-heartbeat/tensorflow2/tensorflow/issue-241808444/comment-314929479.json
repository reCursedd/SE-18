{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314929479", "html_url": "https://github.com/tensorflow/tensorflow/issues/11416#issuecomment-314929479", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11416", "id": 314929479, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDkyOTQ3OQ==", "user": {"login": "on-the-run", "id": 5404419, "node_id": "MDQ6VXNlcjU0MDQ0MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5404419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/on-the-run", "html_url": "https://github.com/on-the-run", "followers_url": "https://api.github.com/users/on-the-run/followers", "following_url": "https://api.github.com/users/on-the-run/following{/other_user}", "gists_url": "https://api.github.com/users/on-the-run/gists{/gist_id}", "starred_url": "https://api.github.com/users/on-the-run/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/on-the-run/subscriptions", "organizations_url": "https://api.github.com/users/on-the-run/orgs", "repos_url": "https://api.github.com/users/on-the-run/repos", "events_url": "https://api.github.com/users/on-the-run/events{/privacy}", "received_events_url": "https://api.github.com/users/on-the-run/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-12T23:49:32Z", "updated_at": "2017-07-12T23:49:32Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22274255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shamoya\">@shamoya</a>, I have checked the work completion events. It looks fine to me. Most importantly, the <code>imm_data</code> is correctly sent. So it is not an endian issue. But the endian should be considered as it suggests here in <code>infiniband/verbs.h</code>:</p>\n<pre><code> struct ibv_wc {\n     uint64_t        wr_id;\n     enum ibv_wc_status  status;\n     enum ibv_wc_opcode  opcode;\n     uint32_t        vendor_err;\n     uint32_t        byte_len;\n     /* When (wc_flags &amp; IBV_WC_WITH_IMM): Immediate data in network byte order.\n      * When (wc_flags &amp; IBV_WC_WITH_INV): Stores the invalidated rkey.\n      */\n     uint32_t        imm_data;\n     uint32_t        qp_num;\n     uint32_t        src_qp;\n     int         wc_flags;\n     uint16_t        pkey_index;\n     uint16_t        slid;\n     uint8_t         sl;\n     uint8_t         dlid_path_bits;\n};\n</code></pre>\n<p>It looks to me now a memory corruption issue.</p>", "body_text": "@shamoya, I have checked the work completion events. It looks fine to me. Most importantly, the imm_data is correctly sent. So it is not an endian issue. But the endian should be considered as it suggests here in infiniband/verbs.h:\n struct ibv_wc {\n     uint64_t        wr_id;\n     enum ibv_wc_status  status;\n     enum ibv_wc_opcode  opcode;\n     uint32_t        vendor_err;\n     uint32_t        byte_len;\n     /* When (wc_flags & IBV_WC_WITH_IMM): Immediate data in network byte order.\n      * When (wc_flags & IBV_WC_WITH_INV): Stores the invalidated rkey.\n      */\n     uint32_t        imm_data;\n     uint32_t        qp_num;\n     uint32_t        src_qp;\n     int         wc_flags;\n     uint16_t        pkey_index;\n     uint16_t        slid;\n     uint8_t         sl;\n     uint8_t         dlid_path_bits;\n};\n\nIt looks to me now a memory corruption issue.", "body": "@shamoya, I have checked the work completion events. It looks fine to me. Most importantly, the `imm_data` is correctly sent. So it is not an endian issue. But the endian should be considered as it suggests here in `infiniband/verbs.h`:\r\n```\r\n struct ibv_wc {\r\n     uint64_t        wr_id;\r\n     enum ibv_wc_status  status;\r\n     enum ibv_wc_opcode  opcode;\r\n     uint32_t        vendor_err;\r\n     uint32_t        byte_len;\r\n     /* When (wc_flags & IBV_WC_WITH_IMM): Immediate data in network byte order.\r\n      * When (wc_flags & IBV_WC_WITH_INV): Stores the invalidated rkey.\r\n      */\r\n     uint32_t        imm_data;\r\n     uint32_t        qp_num;\r\n     uint32_t        src_qp;\r\n     int         wc_flags;\r\n     uint16_t        pkey_index;\r\n     uint16_t        slid;\r\n     uint8_t         sl;\r\n     uint8_t         dlid_path_bits;\r\n};\r\n```\r\nIt looks to me now a memory corruption issue."}