{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/316162612", "html_url": "https://github.com/tensorflow/tensorflow/issues/11416#issuecomment-316162612", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11416", "id": 316162612, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjE2MjYxMg==", "user": {"login": "bobzhuyb", "id": 1696340, "node_id": "MDQ6VXNlcjE2OTYzNDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1696340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobzhuyb", "html_url": "https://github.com/bobzhuyb", "followers_url": "https://api.github.com/users/bobzhuyb/followers", "following_url": "https://api.github.com/users/bobzhuyb/following{/other_user}", "gists_url": "https://api.github.com/users/bobzhuyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobzhuyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobzhuyb/subscriptions", "organizations_url": "https://api.github.com/users/bobzhuyb/orgs", "repos_url": "https://api.github.com/users/bobzhuyb/repos", "events_url": "https://api.github.com/users/bobzhuyb/events{/privacy}", "received_events_url": "https://api.github.com/users/bobzhuyb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-18T18:53:25Z", "updated_at": "2017-07-18T18:53:25Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2613663\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/byronyi\">@byronyi</a>, Personally, I used to believe that too. However, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5404419\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/on-the-run\">@on-the-run</a> and I both searched in the code and didn't see the memory pinning. In the past, I have done very heavy hacking in the verbs libs, as heavy as rewriting most of the verbs code. Still, I cannot find it.</p>\n<p>However, I am not sure what happens after ibv_cmd_reg_mr (I believe this is the last step in userspace. mlx4_* calls ibv_cmd_*) passes the cmd to underlying driver. Mellanox <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22274255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shamoya\">@shamoya</a> should be able to tell us more about this.</p>", "body_text": "@byronyi, Personally, I used to believe that too. However, @on-the-run and I both searched in the code and didn't see the memory pinning. In the past, I have done very heavy hacking in the verbs libs, as heavy as rewriting most of the verbs code. Still, I cannot find it.\nHowever, I am not sure what happens after ibv_cmd_reg_mr (I believe this is the last step in userspace. mlx4_* calls ibv_cmd_*) passes the cmd to underlying driver. Mellanox @shamoya should be able to tell us more about this.", "body": "@byronyi, Personally, I used to believe that too. However, @on-the-run and I both searched in the code and didn't see the memory pinning. In the past, I have done very heavy hacking in the verbs libs, as heavy as rewriting most of the verbs code. Still, I cannot find it. \r\n\r\nHowever, I am not sure what happens after ibv_cmd_reg_mr (I believe this is the last step in userspace. mlx4_* calls ibv_cmd_*) passes the cmd to underlying driver. Mellanox @shamoya should be able to tell us more about this.\r\n"}