{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/339772179", "html_url": "https://github.com/tensorflow/tensorflow/issues/13220#issuecomment-339772179", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13220", "id": 339772179, "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc3MjE3OQ==", "user": {"login": "m3bm3b", "id": 10168793, "node_id": "MDQ6VXNlcjEwMTY4Nzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/10168793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m3bm3b", "html_url": "https://github.com/m3bm3b", "followers_url": "https://api.github.com/users/m3bm3b/followers", "following_url": "https://api.github.com/users/m3bm3b/following{/other_user}", "gists_url": "https://api.github.com/users/m3bm3b/gists{/gist_id}", "starred_url": "https://api.github.com/users/m3bm3b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m3bm3b/subscriptions", "organizations_url": "https://api.github.com/users/m3bm3b/orgs", "repos_url": "https://api.github.com/users/m3bm3b/repos", "events_url": "https://api.github.com/users/m3bm3b/events{/privacy}", "received_events_url": "https://api.github.com/users/m3bm3b/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-26T19:20:10Z", "updated_at": "2017-10-26T19:20:10Z", "author_association": "NONE", "body_html": "<div class=\"email-fragment\">Those errors are not in nsync, but rather in the xla part of tensorflow\nI think it's a known bug that someone is working on.\n\nI assume that nsync (as opposed to tensorflow)\ndoes compile correctly (for example, that it can be compiled and its tests\nrun on Sierra.\nLet me know if that's not the case.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On 26 October 2017 at 10:47, jiangok2006 ***@***.***&gt; wrote:\n I just synced the master branch. bazel on Sierra still threw error. Please\n let me know if anything is missing.\n\n ERROR: /Users/lianjia/repo/tensorflow/tensorflow/compiler/xla/service/cpu/BUILD:145:1:\n C++ compilation of rule '//tensorflow/compiler/xla/service/cpu:simple_orc_jit'\n failed (Exit 1).\n In file included from tensorflow/compiler/xla/\n service/cpu/simple_orc_jit.cc:32:\n ./tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.h:55:30: warning:\n '__xla_cpu_runtime_ExpV4F32NEON' has C-linkage specified, but returns\n incomplete type 'xla::cpu::runtime::V4F32NEON' which could be incompatible\n with C [-Wreturn-type-c-linkage]\n xla::cpu::runtime::V4F32NEON __xla_cpu_runtime_ExpV4F32NEON(\n ^\n ./tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.h:58:30: warning:\n '__xla_cpu_runtime_LogV4F32NEON' has C-linkage specified, but returns\n incomplete type 'xla::cpu::runtime::V4F32NEON' which could be incompatible\n with C [-Wreturn-type-c-linkage]\n xla::cpu::runtime::V4F32NEON __xla_cpu_runtime_LogV4F32NEON(\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:220:3: error:\n reinterpret_cast cannot resolve overloaded function 'acos' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(acos); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:714:1:\n note: candidate function\n acos(_A1 __lcpp_x) _NOEXCEPT {return ::acos((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:708:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double acos(long double __lcpp_x)\n _NOEXCEPT {return ::acosl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:707:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float acos(float __lcpp_x) _NOEXCEPT\n {return ::acosf(__lcpp_x);}\n ^\n /usr/include/math.h:323:15: note: candidate function\n extern double acos(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:221:3: error:\n reinterpret_cast cannot resolve overloaded function 'acosh' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(acosh); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1005:1:\n note: candidate function\n acosh(_A1 __lcpp_x) _NOEXCEPT {return ::acosh((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1000:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double acosh(long double __lcpp_x)\n _NOEXCEPT {return ::acoshl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:999:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float acosh(float __lcpp_x) _NOEXCEPT\n {return ::acoshf(__lcpp_x);}\n ^\n /usr/include/math.h:351:15: note: candidate function\n extern double acosh(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:222:3: error:\n reinterpret_cast cannot resolve overloaded function 'asin' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(asin); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:726:1:\n note: candidate function\n asin(_A1 __lcpp_x) _NOEXCEPT {return ::asin((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:720:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double asin(long double __lcpp_x)\n _NOEXCEPT {return ::asinl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:719:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float asin(float __lcpp_x) _NOEXCEPT\n {return ::asinf(__lcpp_x);}\n ^\n /usr/include/math.h:327:15: note: candidate function\n extern double asin(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:223:3: error:\n reinterpret_cast cannot resolve overloaded function 'asinh' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(asinh); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1017:1:\n note: candidate function\n asinh(_A1 __lcpp_x) _NOEXCEPT {return ::asinh((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1012:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double asinh(long double __lcpp_x)\n _NOEXCEPT {return ::asinhl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1011:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float asinh(float __lcpp_x) _NOEXCEPT\n {return ::asinhf(__lcpp_x);}\n ^\n /usr/include/math.h:355:15: note: candidate function\n extern double asinh(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:224:3: error:\n reinterpret_cast cannot resolve overloaded function 'atan' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(atan); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:738:1:\n note: candidate function\n atan(_A1 __lcpp_x) _NOEXCEPT {return ::atan((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:732:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double atan(long double __lcpp_x)\n _NOEXCEPT {return ::atanl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:731:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float atan(float __lcpp_x) _NOEXCEPT\n {return ::atanf(__lcpp_x);}\n ^\n /usr/include/math.h:331:15: note: candidate function\n extern double atan(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:225:3: error:\n reinterpret_cast cannot resolve overloaded function 'atan2' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(atan2); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:755:1:\n note: candidate function\n atan2(_A1 __lcpp_y, _A2 __lcpp_x) _NOEXCEPT\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:744:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double atan2(long double __lcpp_y,\n long double __lcpp_x) _NOEXCEPT {return ::atan2l(__lcpp_y, __lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:743:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float atan2(float __lcpp_y, float\n __lcpp_x) _NOEXCEPT {return ::atan2f(__lcpp_y, __lcpp_x);}\n ^\n /usr/include/math.h:335:15: note: candidate function\n extern double atan2(double, double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:226:3: error:\n reinterpret_cast cannot resolve overloaded function 'atanh' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(atanh); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1029:1:\n note: candidate function\n atanh(_A1 __lcpp_x) _NOEXCEPT {return ::atanh((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1024:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double atanh(long double __lcpp_x)\n _NOEXCEPT {return ::atanhl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1023:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float atanh(float __lcpp_x) _NOEXCEPT\n {return ::atanhf(__lcpp_x);}\n ^\n /usr/include/math.h:359:15: note: candidate function\n extern double atanh(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:227:3: error:\n reinterpret_cast cannot resolve overloaded function 'cbrt' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(cbrt); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1041:1:\n note: candidate function\n cbrt(_A1 __lcpp_x) _NOEXCEPT {return ::cbrt((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1036:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double cbrt(long double __lcpp_x)\n _NOEXCEPT {return ::cbrtl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1035:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float cbrt(float __lcpp_x) _NOEXCEPT\n {return ::cbrtf(__lcpp_x);}\n ^\n /usr/include/math.h:435:15: note: candidate function\n extern double cbrt(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:228:3: error:\n reinterpret_cast cannot resolve overloaded function 'ceil' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(ceil); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:773:1:\n note: candidate function\n ceil(_A1 __lcpp_x) _NOEXCEPT {return ::ceil((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:767:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double ceil(long double __lcpp_x)\n _NOEXCEPT {return ::ceill(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:766:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float ceil(float __lcpp_x) _NOEXCEPT\n {return ::ceilf(__lcpp_x);}\n ^\n /usr/include/math.h:470:15: note: candidate function\n extern double ceil(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:229:3: error:\n reinterpret_cast cannot resolve overloaded function 'copysign' to type\n 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(copysign); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1065:1:\n note: candidate function\n copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1052:1:\n note: candidate function\n copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1047:40:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x,\n ^\n /usr/include/math.h:526:15: note: candidate function\n extern double copysign(double, double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:230:3: error:\n reinterpret_cast cannot resolve overloaded function 'cos' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(cos); ^~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:785:1:\n note: candidate function\n cos(_A1 __lcpp_x) _NOEXCEPT {return ::cos((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:779:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double cos(long double __lcpp_x)\n _NOEXCEPT {return ::cosl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:778:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float cos(float __lcpp_x) _NOEXCEPT\n {return ::cosf(__lcpp_x);}\n ^\n /usr/include/math.h:339:15: note: candidate function\n extern double cos(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:231:3: error:\n reinterpret_cast cannot resolve overloaded function 'cosh' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(cosh); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry-&gt;Register(#name,\n reinterpret_cast&lt;void*&gt;(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:797:1:\n note: candidate function\n cosh(_A......\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"259612538\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13220\" href=\"https://github.com/tensorflow/tensorflow/issues/13220#issuecomment-339743486\">#13220 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AJsp2c5mtVyiVMIkhka_5rDfu7T4iWqkks5swMXOgaJpZM4Pf1KK\">https://github.com/notifications/unsubscribe-auth/AJsp2c5mtVyiVMIkhka_5rDfu7T4iWqkks5swMXOgaJpZM4Pf1KK</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "Those errors are not in nsync, but rather in the xla part of tensorflow\nI think it's a known bug that someone is working on.\n\nI assume that nsync (as opposed to tensorflow)\ndoes compile correctly (for example, that it can be compiled and its tests\nrun on Sierra.\nLet me know if that's not the case.\n\u2026\nOn 26 October 2017 at 10:47, jiangok2006 ***@***.***> wrote:\n I just synced the master branch. bazel on Sierra still threw error. Please\n let me know if anything is missing.\n\n ERROR: /Users/lianjia/repo/tensorflow/tensorflow/compiler/xla/service/cpu/BUILD:145:1:\n C++ compilation of rule '//tensorflow/compiler/xla/service/cpu:simple_orc_jit'\n failed (Exit 1).\n In file included from tensorflow/compiler/xla/\n service/cpu/simple_orc_jit.cc:32:\n ./tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.h:55:30: warning:\n '__xla_cpu_runtime_ExpV4F32NEON' has C-linkage specified, but returns\n incomplete type 'xla::cpu::runtime::V4F32NEON' which could be incompatible\n with C [-Wreturn-type-c-linkage]\n xla::cpu::runtime::V4F32NEON __xla_cpu_runtime_ExpV4F32NEON(\n ^\n ./tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.h:58:30: warning:\n '__xla_cpu_runtime_LogV4F32NEON' has C-linkage specified, but returns\n incomplete type 'xla::cpu::runtime::V4F32NEON' which could be incompatible\n with C [-Wreturn-type-c-linkage]\n xla::cpu::runtime::V4F32NEON __xla_cpu_runtime_LogV4F32NEON(\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:220:3: error:\n reinterpret_cast cannot resolve overloaded function 'acos' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(acos); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:714:1:\n note: candidate function\n acos(_A1 __lcpp_x) _NOEXCEPT {return ::acos((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:708:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double acos(long double __lcpp_x)\n _NOEXCEPT {return ::acosl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:707:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float acos(float __lcpp_x) _NOEXCEPT\n {return ::acosf(__lcpp_x);}\n ^\n /usr/include/math.h:323:15: note: candidate function\n extern double acos(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:221:3: error:\n reinterpret_cast cannot resolve overloaded function 'acosh' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(acosh); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1005:1:\n note: candidate function\n acosh(_A1 __lcpp_x) _NOEXCEPT {return ::acosh((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1000:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double acosh(long double __lcpp_x)\n _NOEXCEPT {return ::acoshl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:999:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float acosh(float __lcpp_x) _NOEXCEPT\n {return ::acoshf(__lcpp_x);}\n ^\n /usr/include/math.h:351:15: note: candidate function\n extern double acosh(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:222:3: error:\n reinterpret_cast cannot resolve overloaded function 'asin' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(asin); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:726:1:\n note: candidate function\n asin(_A1 __lcpp_x) _NOEXCEPT {return ::asin((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:720:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double asin(long double __lcpp_x)\n _NOEXCEPT {return ::asinl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:719:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float asin(float __lcpp_x) _NOEXCEPT\n {return ::asinf(__lcpp_x);}\n ^\n /usr/include/math.h:327:15: note: candidate function\n extern double asin(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:223:3: error:\n reinterpret_cast cannot resolve overloaded function 'asinh' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(asinh); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1017:1:\n note: candidate function\n asinh(_A1 __lcpp_x) _NOEXCEPT {return ::asinh((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1012:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double asinh(long double __lcpp_x)\n _NOEXCEPT {return ::asinhl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1011:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float asinh(float __lcpp_x) _NOEXCEPT\n {return ::asinhf(__lcpp_x);}\n ^\n /usr/include/math.h:355:15: note: candidate function\n extern double asinh(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:224:3: error:\n reinterpret_cast cannot resolve overloaded function 'atan' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(atan); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:738:1:\n note: candidate function\n atan(_A1 __lcpp_x) _NOEXCEPT {return ::atan((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:732:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double atan(long double __lcpp_x)\n _NOEXCEPT {return ::atanl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:731:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float atan(float __lcpp_x) _NOEXCEPT\n {return ::atanf(__lcpp_x);}\n ^\n /usr/include/math.h:331:15: note: candidate function\n extern double atan(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:225:3: error:\n reinterpret_cast cannot resolve overloaded function 'atan2' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(atan2); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:755:1:\n note: candidate function\n atan2(_A1 __lcpp_y, _A2 __lcpp_x) _NOEXCEPT\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:744:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double atan2(long double __lcpp_y,\n long double __lcpp_x) _NOEXCEPT {return ::atan2l(__lcpp_y, __lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:743:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float atan2(float __lcpp_y, float\n __lcpp_x) _NOEXCEPT {return ::atan2f(__lcpp_y, __lcpp_x);}\n ^\n /usr/include/math.h:335:15: note: candidate function\n extern double atan2(double, double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:226:3: error:\n reinterpret_cast cannot resolve overloaded function 'atanh' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(atanh); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1029:1:\n note: candidate function\n atanh(_A1 __lcpp_x) _NOEXCEPT {return ::atanh((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1024:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double atanh(long double __lcpp_x)\n _NOEXCEPT {return ::atanhl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1023:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float atanh(float __lcpp_x) _NOEXCEPT\n {return ::atanhf(__lcpp_x);}\n ^\n /usr/include/math.h:359:15: note: candidate function\n extern double atanh(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:227:3: error:\n reinterpret_cast cannot resolve overloaded function 'cbrt' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(cbrt); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1041:1:\n note: candidate function\n cbrt(_A1 __lcpp_x) _NOEXCEPT {return ::cbrt((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1036:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double cbrt(long double __lcpp_x)\n _NOEXCEPT {return ::cbrtl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1035:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float cbrt(float __lcpp_x) _NOEXCEPT\n {return ::cbrtf(__lcpp_x);}\n ^\n /usr/include/math.h:435:15: note: candidate function\n extern double cbrt(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:228:3: error:\n reinterpret_cast cannot resolve overloaded function 'ceil' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(ceil); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:773:1:\n note: candidate function\n ceil(_A1 __lcpp_x) _NOEXCEPT {return ::ceil((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:767:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double ceil(long double __lcpp_x)\n _NOEXCEPT {return ::ceill(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:766:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float ceil(float __lcpp_x) _NOEXCEPT\n {return ::ceilf(__lcpp_x);}\n ^\n /usr/include/math.h:470:15: note: candidate function\n extern double ceil(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:229:3: error:\n reinterpret_cast cannot resolve overloaded function 'copysign' to type\n 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(copysign); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1065:1:\n note: candidate function\n copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1052:1:\n note: candidate function\n copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1047:40:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x,\n ^\n /usr/include/math.h:526:15: note: candidate function\n extern double copysign(double, double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:230:3: error:\n reinterpret_cast cannot resolve overloaded function 'cos' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(cos); ^~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:785:1:\n note: candidate function\n cos(_A1 __lcpp_x) _NOEXCEPT {return ::cos((double)__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:779:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY long double cos(long double __lcpp_x)\n _NOEXCEPT {return ::cosl(__lcpp_x);}\n ^\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:778:46:\n note: candidate function\n inline _LIBCPP_INLINE_VISIBILITY float cos(float __lcpp_x) _NOEXCEPT\n {return ::cosf(__lcpp_x);}\n ^\n /usr/include/math.h:339:15: note: candidate function\n extern double cos(double);\n ^\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:231:3: error:\n reinterpret_cast cannot resolve overloaded function 'cosh' to type 'void\n\n\n\n *' REGISTER_LIBM_SYMBOL(cosh); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n reinterpret_cast<void*>(name));\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:797:1:\n note: candidate function\n cosh(_A......\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#13220 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AJsp2c5mtVyiVMIkhka_5rDfu7T4iWqkks5swMXOgaJpZM4Pf1KK>\n .", "body": "Those errors are not in nsync, but rather in the xla part of tensorflow\nI think it's a known bug that someone is working on.\n\nI assume that nsync (as opposed to tensorflow)\ndoes compile correctly (for example, that it can be compiled and its tests\nrun on Sierra.\nLet me know if that's not the case.\n\n\nOn 26 October 2017 at 10:47, jiangok2006 <notifications@github.com> wrote:\n\n> I just synced the master branch. bazel on Sierra still threw error. Please\n> let me know if anything is missing.\n>\n> ERROR: /Users/lianjia/repo/tensorflow/tensorflow/compiler/xla/service/cpu/BUILD:145:1:\n> C++ compilation of rule '//tensorflow/compiler/xla/service/cpu:simple_orc_jit'\n> failed (Exit 1).\n> In file included from tensorflow/compiler/xla/\n> service/cpu/simple_orc_jit.cc:32:\n> ./tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.h:55:30: warning:\n> '__xla_cpu_runtime_ExpV4F32NEON' has C-linkage specified, but returns\n> incomplete type 'xla::cpu::runtime::V4F32NEON' which could be incompatible\n> with C [-Wreturn-type-c-linkage]\n> xla::cpu::runtime::V4F32NEON __xla_cpu_runtime_ExpV4F32NEON(\n> ^\n> ./tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.h:58:30: warning:\n> '__xla_cpu_runtime_LogV4F32NEON' has C-linkage specified, but returns\n> incomplete type 'xla::cpu::runtime::V4F32NEON' which could be incompatible\n> with C [-Wreturn-type-c-linkage]\n> xla::cpu::runtime::V4F32NEON __xla_cpu_runtime_LogV4F32NEON(\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:220:3: error:\n> reinterpret_cast cannot resolve overloaded function 'acos' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(acos); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:714:1:\n> note: candidate function\n> acos(_A1 __lcpp_x) _NOEXCEPT {return ::acos((double)__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:708:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY long double acos(long double __lcpp_x)\n> _NOEXCEPT {return ::acosl(__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:707:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float acos(float __lcpp_x) _NOEXCEPT\n> {return ::acosf(__lcpp_x);}\n> ^\n> /usr/include/math.h:323:15: note: candidate function\n> extern double acos(double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:221:3: error:\n> reinterpret_cast cannot resolve overloaded function 'acosh' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(acosh); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1005:1:\n> note: candidate function\n> acosh(_A1 __lcpp_x) _NOEXCEPT {return ::acosh((double)__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1000:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY long double acosh(long double __lcpp_x)\n> _NOEXCEPT {return ::acoshl(__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:999:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float acosh(float __lcpp_x) _NOEXCEPT\n> {return ::acoshf(__lcpp_x);}\n> ^\n> /usr/include/math.h:351:15: note: candidate function\n> extern double acosh(double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:222:3: error:\n> reinterpret_cast cannot resolve overloaded function 'asin' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(asin); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:726:1:\n> note: candidate function\n> asin(_A1 __lcpp_x) _NOEXCEPT {return ::asin((double)__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:720:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY long double asin(long double __lcpp_x)\n> _NOEXCEPT {return ::asinl(__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:719:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float asin(float __lcpp_x) _NOEXCEPT\n> {return ::asinf(__lcpp_x);}\n> ^\n> /usr/include/math.h:327:15: note: candidate function\n> extern double asin(double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:223:3: error:\n> reinterpret_cast cannot resolve overloaded function 'asinh' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(asinh); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1017:1:\n> note: candidate function\n> asinh(_A1 __lcpp_x) _NOEXCEPT {return ::asinh((double)__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1012:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY long double asinh(long double __lcpp_x)\n> _NOEXCEPT {return ::asinhl(__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1011:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float asinh(float __lcpp_x) _NOEXCEPT\n> {return ::asinhf(__lcpp_x);}\n> ^\n> /usr/include/math.h:355:15: note: candidate function\n> extern double asinh(double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:224:3: error:\n> reinterpret_cast cannot resolve overloaded function 'atan' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(atan); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:738:1:\n> note: candidate function\n> atan(_A1 __lcpp_x) _NOEXCEPT {return ::atan((double)__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:732:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY long double atan(long double __lcpp_x)\n> _NOEXCEPT {return ::atanl(__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:731:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float atan(float __lcpp_x) _NOEXCEPT\n> {return ::atanf(__lcpp_x);}\n> ^\n> /usr/include/math.h:331:15: note: candidate function\n> extern double atan(double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:225:3: error:\n> reinterpret_cast cannot resolve overloaded function 'atan2' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(atan2); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:755:1:\n> note: candidate function\n> atan2(_A1 __lcpp_y, _A2 __lcpp_x) _NOEXCEPT\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:744:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY long double atan2(long double __lcpp_y,\n> long double __lcpp_x) _NOEXCEPT {return ::atan2l(__lcpp_y, __lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:743:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float atan2(float __lcpp_y, float\n> __lcpp_x) _NOEXCEPT {return ::atan2f(__lcpp_y, __lcpp_x);}\n> ^\n> /usr/include/math.h:335:15: note: candidate function\n> extern double atan2(double, double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:226:3: error:\n> reinterpret_cast cannot resolve overloaded function 'atanh' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(atanh); ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1029:1:\n> note: candidate function\n> atanh(_A1 __lcpp_x) _NOEXCEPT {return ::atanh((double)__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1024:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY long double atanh(long double __lcpp_x)\n> _NOEXCEPT {return ::atanhl(__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1023:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float atanh(float __lcpp_x) _NOEXCEPT\n> {return ::atanhf(__lcpp_x);}\n> ^\n> /usr/include/math.h:359:15: note: candidate function\n> extern double atanh(double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:227:3: error:\n> reinterpret_cast cannot resolve overloaded function 'cbrt' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(cbrt); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1041:1:\n> note: candidate function\n> cbrt(_A1 __lcpp_x) _NOEXCEPT {return ::cbrt((double)__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1036:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY long double cbrt(long double __lcpp_x)\n> _NOEXCEPT {return ::cbrtl(__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1035:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float cbrt(float __lcpp_x) _NOEXCEPT\n> {return ::cbrtf(__lcpp_x);}\n> ^\n> /usr/include/math.h:435:15: note: candidate function\n> extern double cbrt(double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:228:3: error:\n> reinterpret_cast cannot resolve overloaded function 'ceil' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(ceil); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:773:1:\n> note: candidate function\n> ceil(_A1 __lcpp_x) _NOEXCEPT {return ::ceil((double)__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:767:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY long double ceil(long double __lcpp_x)\n> _NOEXCEPT {return ::ceill(__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:766:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float ceil(float __lcpp_x) _NOEXCEPT\n> {return ::ceilf(__lcpp_x);}\n> ^\n> /usr/include/math.h:470:15: note: candidate function\n> extern double ceil(double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:229:3: error:\n> reinterpret_cast cannot resolve overloaded function 'copysign' to type\n> 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(copysign); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1065:1:\n> note: candidate function\n> copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1052:1:\n> note: candidate function\n> copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1047:40:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x,\n> ^\n> /usr/include/math.h:526:15: note: candidate function\n> extern double copysign(double, double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:230:3: error:\n> reinterpret_cast cannot resolve overloaded function 'cos' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(cos); ^~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:785:1:\n> note: candidate function\n> cos(_A1 __lcpp_x) _NOEXCEPT {return ::cos((double)__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:779:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY long double cos(long double __lcpp_x)\n> _NOEXCEPT {return ::cosl(__lcpp_x);}\n> ^\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:778:46:\n> note: candidate function\n> inline _LIBCPP_INLINE_VISIBILITY float cos(float __lcpp_x) _NOEXCEPT\n> {return ::cosf(__lcpp_x);}\n> ^\n> /usr/include/math.h:339:15: note: candidate function\n> extern double cos(double);\n> ^\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:231:3: error:\n> reinterpret_cast cannot resolve overloaded function 'cosh' to type 'void\n>\n>\n>\n> *' REGISTER_LIBM_SYMBOL(cosh); ^~~~~~~~~~~~~~~~~~~~~~~~~~\n> tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc:217:31: note:\n> expanded from macro 'REGISTER_LIBM_SYMBOL' registry->Register(#name,\n> reinterpret_cast<void*>(name));\n> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n> /Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:797:1:\n> note: candidate function\n> cosh(_A......\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/13220#issuecomment-339743486>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AJsp2c5mtVyiVMIkhka_5rDfu7T4iWqkks5swMXOgaJpZM4Pf1KK>\n> .\n>\n"}