{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/353790420", "html_url": "https://github.com/tensorflow/tensorflow/issues/15611#issuecomment-353790420", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15611", "id": 353790420, "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mzc5MDQyMA==", "user": {"login": "qmick", "id": 6958746, "node_id": "MDQ6VXNlcjY5NTg3NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6958746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmick", "html_url": "https://github.com/qmick", "followers_url": "https://api.github.com/users/qmick/followers", "following_url": "https://api.github.com/users/qmick/following{/other_user}", "gists_url": "https://api.github.com/users/qmick/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmick/subscriptions", "organizations_url": "https://api.github.com/users/qmick/orgs", "repos_url": "https://api.github.com/users/qmick/repos", "events_url": "https://api.github.com/users/qmick/events{/privacy}", "received_events_url": "https://api.github.com/users/qmick/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-24T15:34:24Z", "updated_at": "2017-12-24T15:34:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It's not necessary to do that, <code>types_pb2.DataType</code> is not python <code>dict</code>. The order of <code>EnumTypeWrapper.keys()</code> is not arbitrary.</p>\n<p>See the definition of <code>EnumTypeWrapper.keys()</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre>  <span class=\"pl-k\">def</span> <span class=\"pl-en\">keys</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>Return a list of the string names in the enum.</span>\n<span class=\"pl-s\">    These are returned in the order they were defined in the .proto file.</span>\n<span class=\"pl-s\">    <span class=\"pl-pds\">\"\"\"</span></span>\n\n    <span class=\"pl-k\">return</span> [value_descriptor.name\n            <span class=\"pl-k\">for</span> value_descriptor <span class=\"pl-k\">in</span> <span class=\"pl-c1\">self</span>._enum_type.values]</pre></div>\n<p>and <code>self._enum_type.values</code> is something like:</p>\n<div class=\"highlight highlight-source-python\"><pre>  values<span class=\"pl-k\">=</span>[\n    _descriptor.EnumValueDescriptor(\n      <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>DT_INVALID<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">index</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>, <span class=\"pl-v\">number</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>,\n      <span class=\"pl-v\">options</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>,\n      <span class=\"pl-v\">type</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>),\n    _descriptor.EnumValueDescriptor(\n      <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>DT_FLOAT<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">index</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>, <span class=\"pl-v\">number</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,\n      <span class=\"pl-v\">options</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>,\n      <span class=\"pl-v\">type</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>),\n    _descriptor.EnumValueDescriptor(\n      <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>DT_DOUBLE<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">index</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>, <span class=\"pl-v\">number</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>,\n      <span class=\"pl-v\">options</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>,\n      <span class=\"pl-v\">type</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>),\n      <span class=\"pl-c1\">...</span>\n  ]</pre></div>", "body_text": "It's not necessary to do that, types_pb2.DataType is not python dict. The order of EnumTypeWrapper.keys() is not arbitrary.\nSee the definition of EnumTypeWrapper.keys():\n  def keys(self):\n    \"\"\"Return a list of the string names in the enum.\n    These are returned in the order they were defined in the .proto file.\n    \"\"\"\n\n    return [value_descriptor.name\n            for value_descriptor in self._enum_type.values]\nand self._enum_type.values is something like:\n  values=[\n    _descriptor.EnumValueDescriptor(\n      name='DT_INVALID', index=0, number=0,\n      options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name='DT_FLOAT', index=1, number=1,\n      options=None,\n      type=None),\n    _descriptor.EnumValueDescriptor(\n      name='DT_DOUBLE', index=2, number=2,\n      options=None,\n      type=None),\n      ...\n  ]", "body": "It's not necessary to do that, `types_pb2.DataType` is not python `dict`. The order of `EnumTypeWrapper.keys()` is not arbitrary.\r\n\r\nSee the definition of `EnumTypeWrapper.keys()`:\r\n```Python\r\n  def keys(self):\r\n    \"\"\"Return a list of the string names in the enum.\r\n    These are returned in the order they were defined in the .proto file.\r\n    \"\"\"\r\n\r\n    return [value_descriptor.name\r\n            for value_descriptor in self._enum_type.values]\r\n```\r\n\r\nand `self._enum_type.values` is something like:\r\n```Python\r\n  values=[\r\n    _descriptor.EnumValueDescriptor(\r\n      name='DT_INVALID', index=0, number=0,\r\n      options=None,\r\n      type=None),\r\n    _descriptor.EnumValueDescriptor(\r\n      name='DT_FLOAT', index=1, number=1,\r\n      options=None,\r\n      type=None),\r\n    _descriptor.EnumValueDescriptor(\r\n      name='DT_DOUBLE', index=2, number=2,\r\n      options=None,\r\n      type=None),\r\n      ...\r\n  ]\r\n```"}