{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/96937862", "pull_request_review_id": 17533815, "id": 96937862, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2OTM3ODYy", "diff_hunk": "@@ -0,0 +1,90 @@\n+# Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\"\"\"Wrappers for efficient GPU layer_norm_fused operations.\"\"\"\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+from tensorflow.contrib.util import loader\n+from tensorflow.python.framework import ops\n+from tensorflow.python.platform import resource_loader\n+\n+import tensorflow as tf\n+import logging\n+\n+_layer_norm_fused_op = loader.load_op_library(\n+    resource_loader.get_path_to_datafile(\"_layer_norm_fused_op.so\"))\n+\n+\n+@ops.RegisterGradient(\"LayerNormCustom\")\n+def _LayerNormCustomGrad(op, grad):\n+    return [_layer_norm_fused_op.layer_norm_backprop_custom(\n+        op.inputs[0], grad, op.get_attr(\"epsilon\"))]\n+\n+\n+@ops.RegisterGradient(\"LayerNormBiasAddCustom\")\n+def _LayerNormBiasAddCustomGrad(op, grad):\n+    in_back, beta_back = _layer_norm_fused_op.layer_norm_bias_add_backprop_custom(\n+        op.inputs[0], grad, op.inputs[1],\n+        op.get_attr(\"epsilon\"))\n+    return [in_back, beta_back]\n+\n+\n+@ops.RegisterGradient(\"LayerNormFusedCustom\")\n+def _LayerNormFusedCustomGrad(op, grad):\n+    in_back, gamma_back, beta_back = _layer_norm_fused_op.layer_norm_fused_backprop_custom(\n+        op.inputs[0], grad, op.inputs[1],\n+        op.get_attr(\"epsilon\"))\n+    return [in_back, gamma_back, beta_back]\n+\n+\n+def layer_norm_fused_op(input_tensor, gamma=None, beta=None,\n+                        epsilon=1e-12, name=None):\n+    \"\"\"Fast and efficient layer normalization along the last dimension", "path": "tensorflow/contrib/layers/python/ops/layer_norm_fused_op.py", "position": null, "original_position": 55, "commit_id": "c956265da134875e8e79bc12cc2223deaceea87c", "original_commit_id": "6fd112700dabe27bb85c3d35eca59c971d7ff985", "user": {"login": "zheng-xq", "id": 15736910, "node_id": "MDQ6VXNlcjE1NzM2OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/15736910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-xq", "html_url": "https://github.com/zheng-xq", "followers_url": "https://api.github.com/users/zheng-xq/followers", "following_url": "https://api.github.com/users/zheng-xq/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-xq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-xq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-xq/subscriptions", "organizations_url": "https://api.github.com/users/zheng-xq/orgs", "repos_url": "https://api.github.com/users/zheng-xq/repos", "events_url": "https://api.github.com/users/zheng-xq/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-xq/received_events", "type": "User", "site_admin": false}, "body": "Right now this code only supports NHWC. But eventually it needs to support both NCHW and NHWC, which are both very popular. So it's a good idea to add a data_format early on, and for now asserts that only NHWC is supported.", "created_at": "2017-01-19T19:28:25Z", "updated_at": "2017-03-09T00:28:35Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6205#discussion_r96937862", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6205", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/96937862"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6205#discussion_r96937862"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6205"}}, "body_html": "<p>Right now this code only supports NHWC. But eventually it needs to support both NCHW and NHWC, which are both very popular. So it's a good idea to add a data_format early on, and for now asserts that only NHWC is supported.</p>", "body_text": "Right now this code only supports NHWC. But eventually it needs to support both NCHW and NHWC, which are both very popular. So it's a good idea to add a data_format early on, and for now asserts that only NHWC is supported."}