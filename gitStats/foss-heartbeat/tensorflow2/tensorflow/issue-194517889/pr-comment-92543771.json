{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/92543771", "pull_request_review_id": 13060950, "id": 92543771, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNTQzNzcx", "diff_hunk": "@@ -0,0 +1,344 @@\n+/* Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#define EIGEN_USE_THREADS\n+\n+\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"./layer_norm_fused_op.h\"\n+\n+namespace tensorflow {\n+\n+typedef Eigen::GpuDevice GPUDevice;\n+\n+template <typename Device, typename T>\n+struct LaunchLayerNormOp;\n+\n+template <typename T>\n+struct LayerNormGPULaunch {\n+  static void Run(const GPUDevice& d, const LayerNormFusedArgs args, const T* input,\n+                   T* output);\n+};\n+template <typename T>\n+struct LaunchLayerNormOp<GPUDevice, T> {\n+  static void launch(OpKernelContext* ctx, const LayerNormFusedArgs args,\n+                     const T* input,  T* output\n+                     ) {\n+\n+    const GPUDevice& d = ctx->eigen_device<GPUDevice>();\n+    LayerNormGPULaunch<T>().Run(d, args, input, output);\n+\n+  }\n+};\n+\n+\n+template <typename Device, typename T>\n+class LayerNormOp : public OpKernel {\n+\n+ public:\n+\n+  explicit LayerNormOp(OpKernelConstruction* context)\n+      : OpKernel(context) {\n+    OP_REQUIRES_OK(context, context->GetAttr(\"epsilon\", &epsilon_));\n+\n+  }\n+\n+  void Compute(OpKernelContext* context) override {\n+\n+    const Tensor& input = context->input(0);\n+\n+    OP_REQUIRES(context, input.dims() >= 2,\n+                errors::InvalidArgument(\"input dimensions must be larger than 2D\",\n+                                        input.shape().DebugString()));\n+\n+\n+    const int32 last_dim = input.dims()-1;\n+    const int32 depth = input.dim_size(last_dim);\n+\n+    int32 n_slices = 1;\n+    for (int i = 0; i < last_dim; ++i)\n+    {\n+        n_slices *= input.dim_size(i);\n+    }\n+\n+    Tensor* output = nullptr;\n+    OP_REQUIRES_OK(context, context->allocate_output(0, input.shape(), &output));\n+\n+    VLOG(2) << \"LayerNormCustom: \"", "path": "tensorflow/contrib/layers/ln_kernels/layer_norm_fused_op.cc", "position": null, "original_position": 79, "commit_id": "c956265da134875e8e79bc12cc2223deaceea87c", "original_commit_id": "75883a49e704a93131e94a935906aa14b88cb4d0", "user": {"login": "MycChiu", "id": 6672514, "node_id": "MDQ6VXNlcjY2NzI1MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6672514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MycChiu", "html_url": "https://github.com/MycChiu", "followers_url": "https://api.github.com/users/MycChiu/followers", "following_url": "https://api.github.com/users/MycChiu/following{/other_user}", "gists_url": "https://api.github.com/users/MycChiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/MycChiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MycChiu/subscriptions", "organizations_url": "https://api.github.com/users/MycChiu/orgs", "repos_url": "https://api.github.com/users/MycChiu/repos", "events_url": "https://api.github.com/users/MycChiu/events{/privacy}", "received_events_url": "https://api.github.com/users/MycChiu/received_events", "type": "User", "site_admin": false}, "body": "I was wondering the same thing, but most kernels in `core/kernels` has this though, (for example [depthwise_conv_op.cc](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/depthwise_conv_op.cc) so I was hesitant to eliminate this line.", "created_at": "2016-12-15T04:38:58Z", "updated_at": "2017-03-09T00:28:35Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6205#discussion_r92543771", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6205", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/92543771"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6205#discussion_r92543771"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6205"}}, "body_html": "<p>I was wondering the same thing, but most kernels in <code>core/kernels</code> has this though, (for example <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/depthwise_conv_op.cc\">depthwise_conv_op.cc</a> so I was hesitant to eliminate this line.</p>", "body_text": "I was wondering the same thing, but most kernels in core/kernels has this though, (for example depthwise_conv_op.cc so I was hesitant to eliminate this line.", "in_reply_to_id": 92259868}