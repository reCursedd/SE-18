{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325454834", "html_url": "https://github.com/tensorflow/tensorflow/pull/12509#issuecomment-325454834", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12509", "id": 325454834, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTQ1NDgzNA==", "user": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-28T19:30:45Z", "updated_at": "2017-08-28T19:30:45Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2613663\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/byronyi\">@byronyi</a> I think this PR is essentially just removing the error case<br>\nerrors::Internal(\"Failed to find locality for \", device_name);<br>\nwhich cannot be hit, due to the immediately prior call to GetDeviceLocalityNonBlocking.<br>\n(Now a default value for DeviceAttributes.locality is returned, but perhaps an earlier version of GetDeviceLocalityNonBlocking could have returned an error if the table entry existed but had no locality value.)</p>\n<p>How do you anticipate hitting this case in the future?</p>", "body_text": "@byronyi I think this PR is essentially just removing the error case\nerrors::Internal(\"Failed to find locality for \", device_name);\nwhich cannot be hit, due to the immediately prior call to GetDeviceLocalityNonBlocking.\n(Now a default value for DeviceAttributes.locality is returned, but perhaps an earlier version of GetDeviceLocalityNonBlocking could have returned an error if the table entry existed but had no locality value.)\nHow do you anticipate hitting this case in the future?", "body": "@byronyi I think this PR is essentially just removing the error case\r\n   errors::Internal(\"Failed to find locality for \", device_name);\r\nwhich cannot be hit, due to the immediately prior call to GetDeviceLocalityNonBlocking.\r\n(Now a default value for DeviceAttributes.locality is returned, but perhaps an earlier version of GetDeviceLocalityNonBlocking could have returned an error if the table entry existed but had no locality value.)\r\n\r\nHow do you anticipate hitting this case in the future?  "}