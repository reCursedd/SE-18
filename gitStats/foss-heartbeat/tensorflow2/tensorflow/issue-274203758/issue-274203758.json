{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14586", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14586/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14586/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14586/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14586", "id": 274203758, "node_id": "MDU6SXNzdWUyNzQyMDM3NTg=", "number": 14586, "title": "TF Lite C++ standalone Interpreter", "user": {"login": "JulianNeeleman", "id": 8206438, "node_id": "MDQ6VXNlcjgyMDY0Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8206438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianNeeleman", "html_url": "https://github.com/JulianNeeleman", "followers_url": "https://api.github.com/users/JulianNeeleman/followers", "following_url": "https://api.github.com/users/JulianNeeleman/following{/other_user}", "gists_url": "https://api.github.com/users/JulianNeeleman/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianNeeleman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianNeeleman/subscriptions", "organizations_url": "https://api.github.com/users/JulianNeeleman/orgs", "repos_url": "https://api.github.com/users/JulianNeeleman/repos", "events_url": "https://api.github.com/users/JulianNeeleman/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianNeeleman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-15T15:46:08Z", "updated_at": "2018-09-12T07:43:27Z", "closed_at": "2017-11-29T20:37:52Z", "author_association": "NONE", "body_html": "<p><strong>Feature request</strong></p>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4</li>\n<li><strong>Python version</strong>: 2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.7.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: None</li>\n<li><strong>GPU model and memory</strong>: None</li>\n<li><strong>Exact command to reproduce</strong>: None</li>\n</ul>\n<p>I deploy TensorFlow models to environments with very limited memory, and was very excited to see how tiny the TF Lite kernel is (several hundred kilobytes). I know the project is young, but I was wondering if there are any plans to support a standalone C++ build for the Lite architecture, for deployment to (Linux) environments that do not have a TensorFlow runtime.</p>\n<p>For my purposes, this package should support the following:</p>\n<ul>\n<li>Loading a model configuration</li>\n<li>Loading input tensors</li>\n<li>Invoking the model with input tensors</li>\n<li>Storing the result in output tensors</li>\n<li>Some serialization method for the input- and output tensors</li>\n</ul>\n<p>I would like to know:</p>\n<ul>\n<li>Is this a possible feature for TF Lite?</li>\n<li>What would the scope be of implementing this?</li>\n<li>Are there any plans to do so?</li>\n</ul>", "body_text": "Feature request\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): 1.4\nPython version: 2.7.12\nBazel version (if compiling from source): 0.7.0\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version: None\nGPU model and memory: None\nExact command to reproduce: None\n\nI deploy TensorFlow models to environments with very limited memory, and was very excited to see how tiny the TF Lite kernel is (several hundred kilobytes). I know the project is young, but I was wondering if there are any plans to support a standalone C++ build for the Lite architecture, for deployment to (Linux) environments that do not have a TensorFlow runtime.\nFor my purposes, this package should support the following:\n\nLoading a model configuration\nLoading input tensors\nInvoking the model with input tensors\nStoring the result in output tensors\nSome serialization method for the input- and output tensors\n\nI would like to know:\n\nIs this a possible feature for TF Lite?\nWhat would the scope be of implementing this?\nAre there any plans to do so?", "body": "**Feature request**\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.4\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: 0.7.0\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: None\r\n- **Exact command to reproduce**: None\r\n\r\nI deploy TensorFlow models to environments with very limited memory, and was very excited to see how tiny the TF Lite kernel is (several hundred kilobytes). I know the project is young, but I was wondering if there are any plans to support a standalone C++ build for the Lite architecture, for deployment to (Linux) environments that do not have a TensorFlow runtime. \r\n\r\nFor my purposes, this package should support the following:\r\n- Loading a model configuration\r\n- Loading input tensors\r\n- Invoking the model with input tensors\r\n- Storing the result in output tensors\r\n- Some serialization method for the input- and output tensors\r\n\r\nI would like to know:\r\n- Is this a possible feature for TF Lite?\r\n- What would the scope be of implementing this?\r\n- Are there any plans to do so?"}