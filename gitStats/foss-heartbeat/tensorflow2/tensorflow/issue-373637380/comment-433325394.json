{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/433325394", "html_url": "https://github.com/tensorflow/tensorflow/pull/23221#issuecomment-433325394", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23221", "id": 433325394, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzMyNTM5NA==", "user": {"login": "yanivbl6", "id": 24679884, "node_id": "MDQ6VXNlcjI0Njc5ODg0", "avatar_url": "https://avatars2.githubusercontent.com/u/24679884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanivbl6", "html_url": "https://github.com/yanivbl6", "followers_url": "https://api.github.com/users/yanivbl6/followers", "following_url": "https://api.github.com/users/yanivbl6/following{/other_user}", "gists_url": "https://api.github.com/users/yanivbl6/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanivbl6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanivbl6/subscriptions", "organizations_url": "https://api.github.com/users/yanivbl6/orgs", "repos_url": "https://api.github.com/users/yanivbl6/repos", "events_url": "https://api.github.com/users/yanivbl6/events{/privacy}", "received_events_url": "https://api.github.com/users/yanivbl6/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T08:11:25Z", "updated_at": "2018-10-26T08:11:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It is normally dereged from MRDestroy, called on iterator erasure<br>\n<code>void RdmaMemoryMgr::EvictMemoryRegion(void* addr, size_t length);</code></p>\n<p>You can use InsertMemoryRegion to register memory so it can also be used in the future (using FindMemoryRegion) and automatically evicted in the end.</p>", "body_text": "It is normally dereged from MRDestroy, called on iterator erasure\nvoid RdmaMemoryMgr::EvictMemoryRegion(void* addr, size_t length);\nYou can use InsertMemoryRegion to register memory so it can also be used in the future (using FindMemoryRegion) and automatically evicted in the end.", "body": "It is normally dereged from MRDestroy, called on iterator erasure \r\n`void RdmaMemoryMgr::EvictMemoryRegion(void* addr, size_t length);`\r\n\r\nYou can use InsertMemoryRegion to register memory so it can also be used in the future (using FindMemoryRegion) and automatically evicted in the end."}