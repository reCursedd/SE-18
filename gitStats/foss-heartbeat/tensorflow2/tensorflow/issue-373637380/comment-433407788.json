{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/433407788", "html_url": "https://github.com/tensorflow/tensorflow/pull/23221#issuecomment-433407788", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23221", "id": 433407788, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzQwNzc4OA==", "user": {"login": "yanivbl6", "id": 24679884, "node_id": "MDQ6VXNlcjI0Njc5ODg0", "avatar_url": "https://avatars2.githubusercontent.com/u/24679884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanivbl6", "html_url": "https://github.com/yanivbl6", "followers_url": "https://api.github.com/users/yanivbl6/followers", "following_url": "https://api.github.com/users/yanivbl6/following{/other_user}", "gists_url": "https://api.github.com/users/yanivbl6/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanivbl6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanivbl6/subscriptions", "organizations_url": "https://api.github.com/users/yanivbl6/orgs", "repos_url": "https://api.github.com/users/yanivbl6/repos", "events_url": "https://api.github.com/users/yanivbl6/events{/privacy}", "received_events_url": "https://api.github.com/users/yanivbl6/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T13:29:34Z", "updated_at": "2018-10-26T13:29:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>If you use InsertMemoryRegion, next attempts to access the same memory should work with FindMemoryRegion without extra registration, so performance will be fine in the long run as long it's not just random data access (unlikely in the case of graph-computation).</p>\n<p>I don't want people to wait for my fix as I am having an hard time finding the time to work on this.<br>\nthat being said, I would like to have this tested on master due to the major changes pushed to the memory allocation mechanism since 1.9 (In the same commit that also broke the build).</p>", "body_text": "If you use InsertMemoryRegion, next attempts to access the same memory should work with FindMemoryRegion without extra registration, so performance will be fine in the long run as long it's not just random data access (unlikely in the case of graph-computation).\nI don't want people to wait for my fix as I am having an hard time finding the time to work on this.\nthat being said, I would like to have this tested on master due to the major changes pushed to the memory allocation mechanism since 1.9 (In the same commit that also broke the build).", "body": "If you use InsertMemoryRegion, next attempts to access the same memory should work with FindMemoryRegion without extra registration, so performance will be fine in the long run as long it's not just random data access (unlikely in the case of graph-computation).\r\n\r\nI don't want people to wait for my fix as I am having an hard time finding the time to work on this.\r\nthat being said, I would like to have this tested on master due to the major changes pushed to the memory allocation mechanism since 1.9 (In the same commit that also broke the build). "}