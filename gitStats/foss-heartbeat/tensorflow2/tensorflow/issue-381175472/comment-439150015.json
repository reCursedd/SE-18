{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/439150015", "html_url": "https://github.com/tensorflow/tensorflow/issues/23774#issuecomment-439150015", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23774", "id": 439150015, "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTE1MDAxNQ==", "user": {"login": "simonm3", "id": 1199593, "node_id": "MDQ6VXNlcjExOTk1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1199593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonm3", "html_url": "https://github.com/simonm3", "followers_url": "https://api.github.com/users/simonm3/followers", "following_url": "https://api.github.com/users/simonm3/following{/other_user}", "gists_url": "https://api.github.com/users/simonm3/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonm3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonm3/subscriptions", "organizations_url": "https://api.github.com/users/simonm3/orgs", "repos_url": "https://api.github.com/users/simonm3/repos", "events_url": "https://api.github.com/users/simonm3/events{/privacy}", "received_events_url": "https://api.github.com/users/simonm3/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-15T18:52:27Z", "updated_at": "2018-11-15T18:52:27Z", "author_association": "NONE", "body_html": "<p>On second thoughts this should be fixed in tensorflow as workarounds are fiddly. Typically a decorator would take *args, **kwargs if it could be used on a function or class method. In function_utils.py line 58 it has  args.remove('self'). Changing that to args.pop(0) would I think resolve.</p>", "body_text": "On second thoughts this should be fixed in tensorflow as workarounds are fiddly. Typically a decorator would take *args, **kwargs if it could be used on a function or class method. In function_utils.py line 58 it has  args.remove('self'). Changing that to args.pop(0) would I think resolve.", "body": "On second thoughts this should be fixed in tensorflow as workarounds are fiddly. Typically a decorator would take *args, **kwargs if it could be used on a function or class method. In function_utils.py line 58 it has  args.remove('self'). Changing that to args.pop(0) would I think resolve."}