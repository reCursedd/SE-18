{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/360246136", "html_url": "https://github.com/tensorflow/tensorflow/issues/16106#issuecomment-360246136", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16106", "id": 360246136, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDI0NjEzNg==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-24T19:28:03Z", "updated_at": "2018-01-24T19:29:07Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=93858\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kpot\">@kpot</a> : As a workaround, can you keep your integer variables on CPU? And furthermore, you can enable silent copying of tensors between CPU and GPU in a way that may cost performance (when the copies happen), but will work. Something like this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> tensorflow.contrib.eager <span class=\"pl-k\">as</span> tfe\n\ntfe.enable_eager_execution(<span class=\"pl-v\">device_policy</span><span class=\"pl-k\">=</span>tfe.<span class=\"pl-c1\">DEVICE_PLACEMENT_SILENT</span>)\n\n<span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/cpu:0<span class=\"pl-pds\">'</span></span>):\n  D <span class=\"pl-k\">=</span> tfe.Variable([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32)</pre></div>\n<p>This will be more similar to graph where the variable is actually placed in CPU memory and the contents are transparently transferred to GPU when needed. (See <a href=\"https://www.tensorflow.org/versions/r1.5/api_docs/python/tf/contrib/eager/enable_eager_execution\" rel=\"nofollow\">https://www.tensorflow.org/versions/r1.5/api_docs/python/tf/contrib/eager/enable_eager_execution</a>)</p>\n<p>Does that work?</p>\n<p>(We sincerely appreciate your feedback and your help in exposing these issues so we can iron them out)</p>", "body_text": "@kpot : As a workaround, can you keep your integer variables on CPU? And furthermore, you can enable silent copying of tensors between CPU and GPU in a way that may cost performance (when the copies happen), but will work. Something like this:\nimport tensorflow as tf\nimport tensorflow.contrib.eager as tfe\n\ntfe.enable_eager_execution(device_policy=tfe.DEVICE_PLACEMENT_SILENT)\n\nwith tf.device('/cpu:0'):\n  D = tfe.Variable([1, 2, 3], dtype=tf.int32)\nThis will be more similar to graph where the variable is actually placed in CPU memory and the contents are transparently transferred to GPU when needed. (See https://www.tensorflow.org/versions/r1.5/api_docs/python/tf/contrib/eager/enable_eager_execution)\nDoes that work?\n(We sincerely appreciate your feedback and your help in exposing these issues so we can iron them out)", "body": "@kpot : As a workaround, can you keep your integer variables on CPU? And furthermore, you can enable silent copying of tensors between CPU and GPU in a way that may cost performance (when the copies happen), but will work. Something like this:\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.eager as tfe\r\n\r\ntfe.enable_eager_execution(device_policy=tfe.DEVICE_PLACEMENT_SILENT)\r\n\r\nwith tf.device('/cpu:0'):\r\n  D = tfe.Variable([1, 2, 3], dtype=tf.int32)\r\n```\r\n\r\nThis will be more similar to graph where the variable is actually placed in CPU memory and the contents are transparently transferred to GPU when needed. (See https://www.tensorflow.org/versions/r1.5/api_docs/python/tf/contrib/eager/enable_eager_execution)\r\n\r\nDoes that work?\r\n\r\n(We sincerely appreciate your feedback and your help in exposing these issues so we can iron them out)\r\n"}