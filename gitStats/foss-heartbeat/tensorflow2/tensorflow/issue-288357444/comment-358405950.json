{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/358405950", "html_url": "https://github.com/tensorflow/tensorflow/issues/16106#issuecomment-358405950", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16106", "id": 358405950, "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODQwNTk1MA==", "user": {"login": "kpot", "id": 93858, "node_id": "MDQ6VXNlcjkzODU4", "avatar_url": "https://avatars3.githubusercontent.com/u/93858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpot", "html_url": "https://github.com/kpot", "followers_url": "https://api.github.com/users/kpot/followers", "following_url": "https://api.github.com/users/kpot/following{/other_user}", "gists_url": "https://api.github.com/users/kpot/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpot/subscriptions", "organizations_url": "https://api.github.com/users/kpot/orgs", "repos_url": "https://api.github.com/users/kpot/repos", "events_url": "https://api.github.com/users/kpot/events{/privacy}", "received_events_url": "https://api.github.com/users/kpot/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-17T18:56:57Z", "updated_at": "2018-01-17T18:56:57Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> Thanks, your example with int64 works great.  However, when I modified my earlier example, changing <code>int32</code> with <code>int64</code>, it failed again (on the same TF 1.5.0-rc1). My code exactly:</p>\n<pre><code>import tensorflow as tf\nimport tensorflow.contrib.eager as tfe\n\ntfe.enable_eager_execution()\n\nprint('TensorFlow version:', tf.__version__)\n\nwith tf.device('/gpu:0'):\n    D = tfe.Variable([1, 2, 3], dtype=tf.int64)\n    print('Variable D is placed on:', D.device)\n</code></pre>\n<p>it fails with the message</p>\n<pre><code>TensorFlow version: 1.5.0-rc1\n2018-01-17 23:42:46.460016: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:895] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-01-17 23:42:46.460292: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1105] Found device 0 with properties:\nname: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.582\npciBusID: 0000:01:00.0\ntotalMemory: 10.91GiB freeMemory: 363.06MiB\n2018-01-17 23:42:46.460316: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1195] Creating TensorFlow device (/device:GPU:0) -&gt; (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)\nTraceback (most recent call last):\n  File \"tf_bug.py\", line 9, in &lt;module&gt;\n    D = tfe.Variable([1, 2, 3], dtype=tf.int64)\n  File \"/home/kpot/pyves/ib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 277, in __init__\n    constraint=constraint)\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 422, in _init_from_args\n    graph_mode=self._in_graph_mode)\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 53, in _eager_safe_variable_handle\n    container=container)\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/ops/gen_resource_variable_ops.py\", line 396, in var_handle_op\n    attrs=_attrs, ctx=_ctx, name=name)\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/eager/execute.py\", line 66, in quick_execute\n    six.raise_from(core._status_to_exception(e.code, message), None)\n  File \"&lt;string&gt;\", line 3, in raise_from\ntensorflow.python.framework.errors_impl.NotFoundError: No registered 'VarHandleOp' OpKernel for GPU devices compatible with node VarHandleOp = VarHandleOp[container=\"eager-execution-0/\", dtype=DT_INT64, shape=[3], shared_name=\"2\"]()\n\t (OpKernel was found, but attributes didn't match)\n\t.  Registered:  device='GPU'; dtype in [DT_VARIANT]\n  device='GPU'; dtype in [DT_COMPLEX128]\n  device='GPU'; dtype in [DT_COMPLEX64]\n  device='GPU'; dtype in [DT_BOOL]\n  device='GPU'; dtype in [DT_DOUBLE]\n  device='GPU'; dtype in [DT_FLOAT]\n  device='GPU'; dtype in [DT_HALF]\n  device='CPU'\n [Op:VarHandleOp] name: Variable/\n</code></pre>\n<p>out of curiosity I've tried various <code>[u]intN</code>, none of them work as a dtype for the variable. It's not like I currently need such variables, just wanted to be thorough :)</p>", "body_text": "@asimshankar Thanks, your example with int64 works great.  However, when I modified my earlier example, changing int32 with int64, it failed again (on the same TF 1.5.0-rc1). My code exactly:\nimport tensorflow as tf\nimport tensorflow.contrib.eager as tfe\n\ntfe.enable_eager_execution()\n\nprint('TensorFlow version:', tf.__version__)\n\nwith tf.device('/gpu:0'):\n    D = tfe.Variable([1, 2, 3], dtype=tf.int64)\n    print('Variable D is placed on:', D.device)\n\nit fails with the message\nTensorFlow version: 1.5.0-rc1\n2018-01-17 23:42:46.460016: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:895] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-01-17 23:42:46.460292: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1105] Found device 0 with properties:\nname: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.582\npciBusID: 0000:01:00.0\ntotalMemory: 10.91GiB freeMemory: 363.06MiB\n2018-01-17 23:42:46.460316: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1195] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)\nTraceback (most recent call last):\n  File \"tf_bug.py\", line 9, in <module>\n    D = tfe.Variable([1, 2, 3], dtype=tf.int64)\n  File \"/home/kpot/pyves/ib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 277, in __init__\n    constraint=constraint)\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 422, in _init_from_args\n    graph_mode=self._in_graph_mode)\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 53, in _eager_safe_variable_handle\n    container=container)\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/ops/gen_resource_variable_ops.py\", line 396, in var_handle_op\n    attrs=_attrs, ctx=_ctx, name=name)\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/eager/execute.py\", line 66, in quick_execute\n    six.raise_from(core._status_to_exception(e.code, message), None)\n  File \"<string>\", line 3, in raise_from\ntensorflow.python.framework.errors_impl.NotFoundError: No registered 'VarHandleOp' OpKernel for GPU devices compatible with node VarHandleOp = VarHandleOp[container=\"eager-execution-0/\", dtype=DT_INT64, shape=[3], shared_name=\"2\"]()\n\t (OpKernel was found, but attributes didn't match)\n\t.  Registered:  device='GPU'; dtype in [DT_VARIANT]\n  device='GPU'; dtype in [DT_COMPLEX128]\n  device='GPU'; dtype in [DT_COMPLEX64]\n  device='GPU'; dtype in [DT_BOOL]\n  device='GPU'; dtype in [DT_DOUBLE]\n  device='GPU'; dtype in [DT_FLOAT]\n  device='GPU'; dtype in [DT_HALF]\n  device='CPU'\n [Op:VarHandleOp] name: Variable/\n\nout of curiosity I've tried various [u]intN, none of them work as a dtype for the variable. It's not like I currently need such variables, just wanted to be thorough :)", "body": "@asimshankar Thanks, your example with int64 works great.  However, when I modified my earlier example, changing `int32` with `int64`, it failed again (on the same TF 1.5.0-rc1). My code exactly:\r\n```\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.eager as tfe\r\n\r\ntfe.enable_eager_execution()\r\n\r\nprint('TensorFlow version:', tf.__version__)\r\n\r\nwith tf.device('/gpu:0'):\r\n    D = tfe.Variable([1, 2, 3], dtype=tf.int64)\r\n    print('Variable D is placed on:', D.device)\r\n```\r\n\r\nit fails with the message\r\n```\r\nTensorFlow version: 1.5.0-rc1\r\n2018-01-17 23:42:46.460016: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:895] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2018-01-17 23:42:46.460292: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1105] Found device 0 with properties:\r\nname: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.582\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 10.91GiB freeMemory: 363.06MiB\r\n2018-01-17 23:42:46.460316: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1195] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\nTraceback (most recent call last):\r\n  File \"tf_bug.py\", line 9, in <module>\r\n    D = tfe.Variable([1, 2, 3], dtype=tf.int64)\r\n  File \"/home/kpot/pyves/ib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 277, in __init__\r\n    constraint=constraint)\r\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 422, in _init_from_args\r\n    graph_mode=self._in_graph_mode)\r\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 53, in _eager_safe_variable_handle\r\n    container=container)\r\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/ops/gen_resource_variable_ops.py\", line 396, in var_handle_op\r\n    attrs=_attrs, ctx=_ctx, name=name)\r\n  File \"/home/kpot/pyves/lib/python3.6/site-packages/tensorflow/python/eager/execute.py\", line 66, in quick_execute\r\n    six.raise_from(core._status_to_exception(e.code, message), None)\r\n  File \"<string>\", line 3, in raise_from\r\ntensorflow.python.framework.errors_impl.NotFoundError: No registered 'VarHandleOp' OpKernel for GPU devices compatible with node VarHandleOp = VarHandleOp[container=\"eager-execution-0/\", dtype=DT_INT64, shape=[3], shared_name=\"2\"]()\r\n\t (OpKernel was found, but attributes didn't match)\r\n\t.  Registered:  device='GPU'; dtype in [DT_VARIANT]\r\n  device='GPU'; dtype in [DT_COMPLEX128]\r\n  device='GPU'; dtype in [DT_COMPLEX64]\r\n  device='GPU'; dtype in [DT_BOOL]\r\n  device='GPU'; dtype in [DT_DOUBLE]\r\n  device='GPU'; dtype in [DT_FLOAT]\r\n  device='GPU'; dtype in [DT_HALF]\r\n  device='CPU'\r\n [Op:VarHandleOp] name: Variable/\r\n```\r\nout of curiosity I've tried various `[u]intN`, none of them work as a dtype for the variable. It's not like I currently need such variables, just wanted to be thorough :)"}