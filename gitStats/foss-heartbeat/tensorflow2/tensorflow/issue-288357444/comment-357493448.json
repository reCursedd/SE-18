{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/357493448", "html_url": "https://github.com/tensorflow/tensorflow/issues/16106#issuecomment-357493448", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16106", "id": 357493448, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzQ5MzQ0OA==", "user": {"login": "kpot", "id": 93858, "node_id": "MDQ6VXNlcjkzODU4", "avatar_url": "https://avatars3.githubusercontent.com/u/93858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpot", "html_url": "https://github.com/kpot", "followers_url": "https://api.github.com/users/kpot/followers", "following_url": "https://api.github.com/users/kpot/following{/other_user}", "gists_url": "https://api.github.com/users/kpot/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpot/subscriptions", "organizations_url": "https://api.github.com/users/kpot/orgs", "repos_url": "https://api.github.com/users/kpot/repos", "events_url": "https://api.github.com/users/kpot/events{/privacy}", "received_events_url": "https://api.github.com/users/kpot/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-14T07:19:57Z", "updated_at": "2018-01-14T07:19:57Z", "author_association": "NONE", "body_html": "<p>Just in case, I've rebuilt TF without enabling XLA (but still with CUDA). No effect. The bug still shows up identically with the same stack trace.</p>\n<p>It seems that the bug also has some side effects: some of the functions like tf.reverse and others sometimes won't work with GPU-placed tensors, ignoring <code>tf.device('/gpu:0')</code> section and throwing exception like</p>\n<p><code>tensorflow.python.framework.errors_impl.InvalidArgumentError: Tensors on conflicting devices: cannot compute StridedSlice as input #0 was expected to be on /job:localhost/replica:0/task:0/device:CPU:0 but is actually on /job:localhost/replica:0/task:0/device:GPU:0 (operation running on /job:localhost/replica:0/task:0/device:GPU:0) Tensors can be copied explicitly using .gpu() or .cpu(), or transparently copied by using tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_SILENT). Copying tensors between devices may slow down your model [Op:StridedSlice] name: strided_slice/</code></p>", "body_text": "Just in case, I've rebuilt TF without enabling XLA (but still with CUDA). No effect. The bug still shows up identically with the same stack trace.\nIt seems that the bug also has some side effects: some of the functions like tf.reverse and others sometimes won't work with GPU-placed tensors, ignoring tf.device('/gpu:0') section and throwing exception like\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Tensors on conflicting devices: cannot compute StridedSlice as input #0 was expected to be on /job:localhost/replica:0/task:0/device:CPU:0 but is actually on /job:localhost/replica:0/task:0/device:GPU:0 (operation running on /job:localhost/replica:0/task:0/device:GPU:0) Tensors can be copied explicitly using .gpu() or .cpu(), or transparently copied by using tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_SILENT). Copying tensors between devices may slow down your model [Op:StridedSlice] name: strided_slice/", "body": "Just in case, I've rebuilt TF without enabling XLA (but still with CUDA). No effect. The bug still shows up identically with the same stack trace.\r\n\r\nIt seems that the bug also has some side effects: some of the functions like tf.reverse and others sometimes won't work with GPU-placed tensors, ignoring `tf.device('/gpu:0')` section and throwing exception like\r\n\r\n`tensorflow.python.framework.errors_impl.InvalidArgumentError: Tensors on conflicting devices: cannot compute StridedSlice as input #0 was expected to be on /job:localhost/replica:0/task:0/device:CPU:0 but is actually on /job:localhost/replica:0/task:0/device:GPU:0 (operation running on /job:localhost/replica:0/task:0/device:GPU:0) Tensors can be copied explicitly using .gpu() or .cpu(), or transparently copied by using tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_SILENT). Copying tensors between devices may slow down your model [Op:StridedSlice] name: strided_slice/`"}