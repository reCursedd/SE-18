{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20579", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20579/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20579/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20579/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20579", "id": 338770277, "node_id": "MDU6SXNzdWUzMzg3NzAyNzc=", "number": 20579, "title": "[Feature Request] Support S3 KMS client-side decryption when loading data", "user": {"login": "erikreppel", "id": 7102968, "node_id": "MDQ6VXNlcjcxMDI5Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7102968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikreppel", "html_url": "https://github.com/erikreppel", "followers_url": "https://api.github.com/users/erikreppel/followers", "following_url": "https://api.github.com/users/erikreppel/following{/other_user}", "gists_url": "https://api.github.com/users/erikreppel/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikreppel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikreppel/subscriptions", "organizations_url": "https://api.github.com/users/erikreppel/orgs", "repos_url": "https://api.github.com/users/erikreppel/repos", "events_url": "https://api.github.com/users/erikreppel/events{/privacy}", "received_events_url": "https://api.github.com/users/erikreppel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-06T00:52:59Z", "updated_at": "2018-09-24T17:41:15Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0</li>\n<li><strong>GPU model and memory</strong>: V100</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>It would be great to support S3 KMS client side decryption within TensorFlow, ideally transparently.</p>\n<p>We use S3 with KMS to store sensitive data and decrypting it before loading it into a <code>tf.Dataset</code> can get really gross/be a major bottle neck, in part because AWS's boto3 <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_sdk_cryptography.html\" rel=\"nofollow\">client library does not support client side KMS encryption</a> so decrypting data needs to be done manually (<a href=\"https://github.com/tedder/s3-client-side-encryption/blob/master/get.py\">example here</a>).</p>\n<p>However the AWS C++ client does support KMS client-side decryption.</p>\n<p>I'm not super familiar with TensorFlow's codebase but seems like there could be a couple of ways this could be added:</p>\n<ol>\n<li>Another contrib <code>tf.Dataset</code> implementation (<a href=\"https://github.com/tensorflow/tensorflow/pull/19712/files\">example here of an existing Dataset contrib</a>)<br>\nIn which case an extra method would likely need to be added to <a href=\"https://github.com/tensorflow/tensorflow/blob/935d5d8550ad06bc77e41e9a3d987658d3731be9/tensorflow/core/platform/s3/s3_file_system.h\"><code>s3_file_system.h</code></a> that uses the C++ client for decryption, or handle the envelope encryption as part of how the Python Dataset class loads data</li>\n</ol>\n<p>or</p>\n<ol start=\"2\">\n<li>From what I can tell <code>tf.python.lib.io.file_io</code> uses <a href=\"https://github.com/tensorflow/tensorflow/blob/935d5d8550ad06bc77e41e9a3d987658d3731be9/tensorflow/core/platform/s3/s3_file_system.h#L30\"><code>NewRandomAccessFile</code></a> from <code>s3_file_system.h</code> when loading datasets from S3 (as shown in the <a href=\"https://www.tensorflow.org/versions/r1.9/deploy/s3\" rel=\"nofollow\">s3 deploy docs</a>, correct me if I am wrong).<br>\nAnother envar could be added (<code>S3_KMS_ARN</code>) and if set the C++ S3 client would decrypt client side. To me this would seem like the better solution since no new datasets would need to be worried about, encrypted files in S3 would behave like regular files.</li>\n</ol>\n<p>An example of the C++ S3 encryption client can be found <a href=\"https://aws.amazon.com/blogs/developer/amazon-s3-encryption-client-is-now-available-for-c/\" rel=\"nofollow\">here</a>.</p>\n<h3>Exact command to reproduce</h3>\n<p>N/A</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.8\nPython version: 3.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0\nGPU model and memory: V100\n\nDescribe the problem\nIt would be great to support S3 KMS client side decryption within TensorFlow, ideally transparently.\nWe use S3 with KMS to store sensitive data and decrypting it before loading it into a tf.Dataset can get really gross/be a major bottle neck, in part because AWS's boto3 client library does not support client side KMS encryption so decrypting data needs to be done manually (example here).\nHowever the AWS C++ client does support KMS client-side decryption.\nI'm not super familiar with TensorFlow's codebase but seems like there could be a couple of ways this could be added:\n\nAnother contrib tf.Dataset implementation (example here of an existing Dataset contrib)\nIn which case an extra method would likely need to be added to s3_file_system.h that uses the C++ client for decryption, or handle the envelope encryption as part of how the Python Dataset class loads data\n\nor\n\nFrom what I can tell tf.python.lib.io.file_io uses NewRandomAccessFile from s3_file_system.h when loading datasets from S3 (as shown in the s3 deploy docs, correct me if I am wrong).\nAnother envar could be added (S3_KMS_ARN) and if set the C++ S3 client would decrypt client side. To me this would seem like the better solution since no new datasets would need to be worried about, encrypted files in S3 would behave like regular files.\n\nAn example of the C++ S3 encryption client can be found here.\nExact command to reproduce\nN/A", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0\r\n- **GPU model and memory**: V100\r\n\r\n### Describe the problem\r\nIt would be great to support S3 KMS client side decryption within TensorFlow, ideally transparently.\r\n\r\nWe use S3 with KMS to store sensitive data and decrypting it before loading it into a `tf.Dataset` can get really gross/be a major bottle neck, in part because AWS's boto3 [client library does not support client side KMS encryption](https://docs.aws.amazon.com/general/latest/gr/aws_sdk_cryptography.html) so decrypting data needs to be done manually ([example here](https://github.com/tedder/s3-client-side-encryption/blob/master/get.py)).\r\n\r\nHowever the AWS C++ client does support KMS client-side decryption.\r\n\r\nI'm not super familiar with TensorFlow's codebase but seems like there could be a couple of ways this could be added:\r\n\r\n1) Another contrib `tf.Dataset` implementation ([example here of an existing Dataset contrib](https://github.com/tensorflow/tensorflow/pull/19712/files))\r\nIn which case an extra method would likely need to be added to [`s3_file_system.h`](https://github.com/tensorflow/tensorflow/blob/935d5d8550ad06bc77e41e9a3d987658d3731be9/tensorflow/core/platform/s3/s3_file_system.h) that uses the C++ client for decryption, or handle the envelope encryption as part of how the Python Dataset class loads data\r\n\r\nor\r\n\r\n2) From what I can tell `tf.python.lib.io.file_io` uses [`NewRandomAccessFile`](https://github.com/tensorflow/tensorflow/blob/935d5d8550ad06bc77e41e9a3d987658d3731be9/tensorflow/core/platform/s3/s3_file_system.h#L30) from `s3_file_system.h` when loading datasets from S3 (as shown in the [s3 deploy docs](https://www.tensorflow.org/versions/r1.9/deploy/s3), correct me if I am wrong). \r\nAnother envar could be added (`S3_KMS_ARN`) and if set the C++ S3 client would decrypt client side. To me this would seem like the better solution since no new datasets would need to be worried about, encrypted files in S3 would behave like regular files.\r\n\r\nAn example of the C++ S3 encryption client can be found [here](https://aws.amazon.com/blogs/developer/amazon-s3-encryption-client-is-now-available-for-c/).\r\n\r\n### Exact command to reproduce\r\nN/A"}