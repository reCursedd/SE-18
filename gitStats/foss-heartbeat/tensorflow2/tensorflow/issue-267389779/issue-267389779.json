{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13880", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13880/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13880/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13880/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13880", "id": 267389779, "node_id": "MDU6SXNzdWUyNjczODk3Nzk=", "number": 13880, "title": "RMSProp fails with InteractiveSession() and embed_sequence on GPU", "user": {"login": "pekaalto", "id": 13544755, "node_id": "MDQ6VXNlcjEzNTQ0NzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/13544755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pekaalto", "html_url": "https://github.com/pekaalto", "followers_url": "https://api.github.com/users/pekaalto/followers", "following_url": "https://api.github.com/users/pekaalto/following{/other_user}", "gists_url": "https://api.github.com/users/pekaalto/gists{/gist_id}", "starred_url": "https://api.github.com/users/pekaalto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pekaalto/subscriptions", "organizations_url": "https://api.github.com/users/pekaalto/orgs", "repos_url": "https://api.github.com/users/pekaalto/repos", "events_url": "https://api.github.com/users/pekaalto/events{/privacy}", "received_events_url": "https://api.github.com/users/pekaalto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2017-10-21T15:29:33Z", "updated_at": "2018-01-04T18:10:23Z", "closed_at": "2018-01-03T19:13:40Z", "author_association": "NONE", "body_html": "<p>Note:<br>\nThis works fine if any of the following</p>\n<ul>\n<li>without GPU</li>\n<li>if use \"normal\" Session() instead of the interactive one.</li>\n<li>if don't do <code>embed_sequence</code></li>\n<li>user other optimiser, not RMSProp</li>\n</ul>\n<p>This is the snippet to get the error:</p>\n<pre><code>import tensorflow as tf\nfrom tensorflow.contrib import layers, framework\nimport numpy as np\n\nsess = tf.InteractiveSession(config=tf.ConfigProto(allow_soft_placement=True))\ninput = tf.placeholder(tf.int64, shape=[None])\noptimiser = tf.train.RMSPropOptimizer(0.1)\nx = layers.embed_sequence(input, vocab_size=20, embed_dim=5)\nloss = tf.reduce_sum(x)\ntrain_op = optimiser.minimize(loss)\nsess.run(tf.global_variables_initializer())\nsess.run(train_op, feed_dict={input: np.random.randint(10, size=5)})\n</code></pre>\n<p>Gives</p>\n<pre><code>2017-10-21 15:12:38.503957: E tensorflow/core/framework/op_segment.cc:53] Create kernel failed: Invalid argument: AttrValue must not have reference type value of float_ref\n   for attr 'tensor_type'\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op&lt;name=_Recv; signature= -&gt; tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true&gt;\n2017-10-21 15:12:38.504081: E tensorflow/core/common_runtime/executor.cc:644] Executor failed to create kernel. Invalid argument: AttrValue must not have reference type value of float_ref\n   for attr 'tensor_type'\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op&lt;name=_Recv; signature= -&gt; tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true&gt;\n   [[Node: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique)]]\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\n    return fn(*args)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\n    status, run_metadata)\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: AttrValue must not have reference type value of float_ref\n   for attr 'tensor_type'\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op&lt;name=_Recv; signature= -&gt; tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true&gt;\n   [[Node: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"rmsprop_fail.py\", line 19, in &lt;module&gt;\n    sess.run(train_op, feed_dict={input: np.random.randint(10, size=5)})\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 895, in run\n    run_metadata_ptr)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    options, run_metadata)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: AttrValue must not have reference type value of float_ref\n   for attr 'tensor_type'\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op&lt;name=_Recv; signature= -&gt; tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true&gt;\n   [[Node: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique)]]\n</code></pre>\n<p>If remove the <code>allow_soft_placement</code> then get:</p>\n<pre><code>Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\n    return fn(*args)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\n    status, run_metadata)\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32': Could not satisfy explicit device specification '' because the node was colocated with a group of nodes that required incompatible device '/job:localhost/replica:0/task:0/device:GPU:0'\nColocation Debug Info:\nColocation group had the following types and devices:\nSparseApplyRMSProp: CPU\nUnsortedSegmentSum: GPU CPU\nGather: GPU CPU\nStridedSlice: GPU CPU\nUnique: GPU CPU\nShape: GPU CPU\nCast: GPU CPU\nIdentity: GPU CPU\nVariableV2: GPU CPU\nConst: GPU CPU\n\t [[Node: gradients/EmbedSequence/embedding_lookup_grad/ToInt32 = Cast[DstT=DT_INT32, SrcT=DT_INT64, _class=[\"loc:@EmbedSequence/embeddings\"]](gradients/EmbedSequence/embedding_lookup_grad/Shape)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"rmsprop_fail.py\", line 19, in &lt;module&gt;\n    sess.run(train_op, feed_dict={input: np.random.randint(10, size=5)})\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 895, in run\n    run_metadata_ptr)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    options, run_metadata)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32': Could not satisfy explicit device specification '' because the node was colocated with a group of nodes that required incompatible device '/job:localhost/replica:0/task:0/device:GPU:0'\nColocation Debug Info:\nColocation group had the following types and devices:\nSparseApplyRMSProp: CPU\nUnsortedSegmentSum: GPU CPU\nGather: GPU CPU\nStridedSlice: GPU CPU\nUnique: GPU CPU\nShape: GPU CPU\nCast: GPU CPU\nIdentity: GPU CPU\nVariableV2: GPU CPU\nConst: GPU CPU\n\t [[Node: gradients/EmbedSequence/embedding_lookup_grad/ToInt32 = Cast[DstT=DT_INT32, SrcT=DT_INT64, _class=[\"loc:@EmbedSequence/embeddings\"]](gradients/EmbedSequence/embedding_lookup_grad/Shape)]]\n\nCaused by op 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32', defined at:\n  File \"rmsprop_fail.py\", line 15, in &lt;module&gt;\n    train_op = optimiser.minimize(loss)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 315, in minimize\n    grad_loss=grad_loss)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 386, in compute_gradients\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 542, in gradients\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 348, in _MaybeCompile\n    return grad_fn()  # Exit early\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 542, in &lt;lambda&gt;\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_grad.py\", line 365, in _GatherGrad\n    params_shape = math_ops.to_int32(params_shape)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/math_ops.py\", line 797, in to_int32\n    return cast(x, dtypes.int32, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/math_ops.py\", line 716, in cast\n    return gen_math_ops.cast(x, base_type, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 450, in cast\n    result = _op_def_lib.apply_op(\"Cast\", x=x, DstT=DstT, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\n...which was originally created as op 'EmbedSequence/embedding_lookup', defined at:\n  File \"rmsprop_fail.py\", line 11, in &lt;module&gt;\n    x = layers.embed_sequence(input, vocab_size=20, embed_dim=5)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/layers/python/layers/encoders.py\", line 142, in embed_sequence\n    return embedding_ops.embedding_lookup(embeddings, ids)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/embedding_ops.py\", line 294, in embedding_lookup\n    transform_fn=None)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/embedding_ops.py\", line 123, in _embedding_lookup_and_transform\n    result = _gather_and_clip(params[0], ids, max_norm, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/embedding_ops.py\", line 57, in _gather_and_clip\n    embs = array_ops.gather(params, ids, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py\", line 2409, in gather\n    validate_indices=validate_indices, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 1219, in gather\n    validate_indices=validate_indices, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32': Could not satisfy explicit device specification '' because the node was colocated with a group of nodes that required incompatible device '/job:localhost/replica:0/task:0/device:GPU:0'\nColocation Debug Info:\nColocation group had the following types and devices:\nSparseApplyRMSProp: CPU\nUnsortedSegmentSum: GPU CPU\nGather: GPU CPU\nStridedSlice: GPU CPU\nUnique: GPU CPU\nShape: GPU CPU\nCast: GPU CPU\nIdentity: GPU CPU\nVariableV2: GPU CPU\nConst: GPU CPU\n\t [[Node: gradients/EmbedSequence/embedding_lookup_grad/ToInt32 = Cast[DstT=DT_INT32, SrcT=DT_INT64, _class=[\"loc:@EmbedSequence/embeddings\"]](gradients/EmbedSequence/embedding_lookup_grad/Shape)]]\n</code></pre>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04.3 LTS</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: docker</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nCuda compilation tools, release 8.0, V8.0.61</li>\n<li><strong>GPU model and memory</strong>:<br>\nTesla K80</li>\n</ul>", "body_text": "Note:\nThis works fine if any of the following\n\nwithout GPU\nif use \"normal\" Session() instead of the interactive one.\nif don't do embed_sequence\nuser other optimiser, not RMSProp\n\nThis is the snippet to get the error:\nimport tensorflow as tf\nfrom tensorflow.contrib import layers, framework\nimport numpy as np\n\nsess = tf.InteractiveSession(config=tf.ConfigProto(allow_soft_placement=True))\ninput = tf.placeholder(tf.int64, shape=[None])\noptimiser = tf.train.RMSPropOptimizer(0.1)\nx = layers.embed_sequence(input, vocab_size=20, embed_dim=5)\nloss = tf.reduce_sum(x)\ntrain_op = optimiser.minimize(loss)\nsess.run(tf.global_variables_initializer())\nsess.run(train_op, feed_dict={input: np.random.randint(10, size=5)})\n\nGives\n2017-10-21 15:12:38.503957: E tensorflow/core/framework/op_segment.cc:53] Create kernel failed: Invalid argument: AttrValue must not have reference type value of float_ref\n   for attr 'tensor_type'\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op<name=_Recv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>\n2017-10-21 15:12:38.504081: E tensorflow/core/common_runtime/executor.cc:644] Executor failed to create kernel. Invalid argument: AttrValue must not have reference type value of float_ref\n   for attr 'tensor_type'\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op<name=_Recv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>\n   [[Node: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique)]]\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\n    return fn(*args)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\n    status, run_metadata)\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: AttrValue must not have reference type value of float_ref\n   for attr 'tensor_type'\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op<name=_Recv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>\n   [[Node: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"rmsprop_fail.py\", line 19, in <module>\n    sess.run(train_op, feed_dict={input: np.random.randint(10, size=5)})\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 895, in run\n    run_metadata_ptr)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    options, run_metadata)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: AttrValue must not have reference type value of float_ref\n   for attr 'tensor_type'\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op<name=_Recv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>\n   [[Node: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique)]]\n\nIf remove the allow_soft_placement then get:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\n    return fn(*args)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\n    status, run_metadata)\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32': Could not satisfy explicit device specification '' because the node was colocated with a group of nodes that required incompatible device '/job:localhost/replica:0/task:0/device:GPU:0'\nColocation Debug Info:\nColocation group had the following types and devices:\nSparseApplyRMSProp: CPU\nUnsortedSegmentSum: GPU CPU\nGather: GPU CPU\nStridedSlice: GPU CPU\nUnique: GPU CPU\nShape: GPU CPU\nCast: GPU CPU\nIdentity: GPU CPU\nVariableV2: GPU CPU\nConst: GPU CPU\n\t [[Node: gradients/EmbedSequence/embedding_lookup_grad/ToInt32 = Cast[DstT=DT_INT32, SrcT=DT_INT64, _class=[\"loc:@EmbedSequence/embeddings\"]](gradients/EmbedSequence/embedding_lookup_grad/Shape)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"rmsprop_fail.py\", line 19, in <module>\n    sess.run(train_op, feed_dict={input: np.random.randint(10, size=5)})\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 895, in run\n    run_metadata_ptr)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    options, run_metadata)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32': Could not satisfy explicit device specification '' because the node was colocated with a group of nodes that required incompatible device '/job:localhost/replica:0/task:0/device:GPU:0'\nColocation Debug Info:\nColocation group had the following types and devices:\nSparseApplyRMSProp: CPU\nUnsortedSegmentSum: GPU CPU\nGather: GPU CPU\nStridedSlice: GPU CPU\nUnique: GPU CPU\nShape: GPU CPU\nCast: GPU CPU\nIdentity: GPU CPU\nVariableV2: GPU CPU\nConst: GPU CPU\n\t [[Node: gradients/EmbedSequence/embedding_lookup_grad/ToInt32 = Cast[DstT=DT_INT32, SrcT=DT_INT64, _class=[\"loc:@EmbedSequence/embeddings\"]](gradients/EmbedSequence/embedding_lookup_grad/Shape)]]\n\nCaused by op 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32', defined at:\n  File \"rmsprop_fail.py\", line 15, in <module>\n    train_op = optimiser.minimize(loss)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 315, in minimize\n    grad_loss=grad_loss)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 386, in compute_gradients\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 542, in gradients\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 348, in _MaybeCompile\n    return grad_fn()  # Exit early\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 542, in <lambda>\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_grad.py\", line 365, in _GatherGrad\n    params_shape = math_ops.to_int32(params_shape)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/math_ops.py\", line 797, in to_int32\n    return cast(x, dtypes.int32, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/math_ops.py\", line 716, in cast\n    return gen_math_ops.cast(x, base_type, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 450, in cast\n    result = _op_def_lib.apply_op(\"Cast\", x=x, DstT=DstT, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\n...which was originally created as op 'EmbedSequence/embedding_lookup', defined at:\n  File \"rmsprop_fail.py\", line 11, in <module>\n    x = layers.embed_sequence(input, vocab_size=20, embed_dim=5)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/layers/python/layers/encoders.py\", line 142, in embed_sequence\n    return embedding_ops.embedding_lookup(embeddings, ids)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/embedding_ops.py\", line 294, in embedding_lookup\n    transform_fn=None)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/embedding_ops.py\", line 123, in _embedding_lookup_and_transform\n    result = _gather_and_clip(params[0], ids, max_norm, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/embedding_ops.py\", line 57, in _gather_and_clip\n    embs = array_ops.gather(params, ids, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py\", line 2409, in gather\n    validate_indices=validate_indices, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 1219, in gather\n    validate_indices=validate_indices, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32': Could not satisfy explicit device specification '' because the node was colocated with a group of nodes that required incompatible device '/job:localhost/replica:0/task:0/device:GPU:0'\nColocation Debug Info:\nColocation group had the following types and devices:\nSparseApplyRMSProp: CPU\nUnsortedSegmentSum: GPU CPU\nGather: GPU CPU\nStridedSlice: GPU CPU\nUnique: GPU CPU\nShape: GPU CPU\nCast: GPU CPU\nIdentity: GPU CPU\nVariableV2: GPU CPU\nConst: GPU CPU\n\t [[Node: gradients/EmbedSequence/embedding_lookup_grad/ToInt32 = Cast[DstT=DT_INT32, SrcT=DT_INT64, _class=[\"loc:@EmbedSequence/embeddings\"]](gradients/EmbedSequence/embedding_lookup_grad/Shape)]]\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04.3 LTS\nTensorFlow installed from (source or binary): docker\nTensorFlow version (use command below): 1.3.0\nPython version: 3.5\nCUDA/cuDNN version:\nCuda compilation tools, release 8.0, V8.0.61\nGPU model and memory:\nTesla K80", "body": "Note:\r\nThis works fine if any of the following\r\n- without GPU\r\n- if use \"normal\" Session() instead of the interactive one.\r\n- if don't do `embed_sequence`\r\n- user other optimiser, not RMSProp\r\n\r\nThis is the snippet to get the error:\r\n\r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib import layers, framework\r\nimport numpy as np\r\n\r\nsess = tf.InteractiveSession(config=tf.ConfigProto(allow_soft_placement=True))\r\ninput = tf.placeholder(tf.int64, shape=[None])\r\noptimiser = tf.train.RMSPropOptimizer(0.1)\r\nx = layers.embed_sequence(input, vocab_size=20, embed_dim=5)\r\nloss = tf.reduce_sum(x)\r\ntrain_op = optimiser.minimize(loss)\r\nsess.run(tf.global_variables_initializer())\r\nsess.run(train_op, feed_dict={input: np.random.randint(10, size=5)})\r\n```\r\n\r\nGives\r\n\r\n```\r\n2017-10-21 15:12:38.503957: E tensorflow/core/framework/op_segment.cc:53] Create kernel failed: Invalid argument: AttrValue must not have reference type value of float_ref\r\n   for attr 'tensor_type'\r\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op<name=_Recv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>\r\n2017-10-21 15:12:38.504081: E tensorflow/core/common_runtime/executor.cc:644] Executor failed to create kernel. Invalid argument: AttrValue must not have reference type value of float_ref\r\n   for attr 'tensor_type'\r\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op<name=_Recv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>\r\n   [[Node: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique)]]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\r\n    return fn(*args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\r\n    status, run_metadata)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\r\n    pywrap_tensorflow.TF_GetCode(status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: AttrValue must not have reference type value of float_ref\r\n   for attr 'tensor_type'\r\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op<name=_Recv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>\r\n   [[Node: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"rmsprop_fail.py\", line 19, in <module>\r\n    sess.run(train_op, feed_dict={input: np.random.randint(10, size=5)})\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 895, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n    options, run_metadata)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: AttrValue must not have reference type value of float_ref\r\n   for attr 'tensor_type'\r\n  ; NodeDef: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique); Op<name=_Recv; signature= -> tensor:tensor_type; attr=tensor_type:type; attr=tensor_name:string; attr=send_device:string; attr=send_device_incarnation:int; attr=recv_device:string; attr=client_terminated:bool,default=false; is_stateful=true>\r\n   [[Node: EmbedSequence/embeddings/RMSProp_1/_19 = _Recv[_start_time=0, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_36_EmbedSequence/embeddings/RMSProp_1\", tensor_type=DT_FLOAT_REF, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](^RMSProp/learning_rate, ^RMSProp/decay, ^RMSProp/momentum, ^RMSProp/epsilon, ^RMSProp/update_EmbedSequence/embeddings/UnsortedSegmentSum, ^RMSProp/update_EmbedSequence/embeddings/Unique)]]\r\n```\r\n\r\nIf remove the `allow_soft_placement` then get:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\r\n    return fn(*args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\r\n    status, run_metadata)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\r\n    pywrap_tensorflow.TF_GetCode(status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32': Could not satisfy explicit device specification '' because the node was colocated with a group of nodes that required incompatible device '/job:localhost/replica:0/task:0/device:GPU:0'\r\nColocation Debug Info:\r\nColocation group had the following types and devices:\r\nSparseApplyRMSProp: CPU\r\nUnsortedSegmentSum: GPU CPU\r\nGather: GPU CPU\r\nStridedSlice: GPU CPU\r\nUnique: GPU CPU\r\nShape: GPU CPU\r\nCast: GPU CPU\r\nIdentity: GPU CPU\r\nVariableV2: GPU CPU\r\nConst: GPU CPU\r\n\t [[Node: gradients/EmbedSequence/embedding_lookup_grad/ToInt32 = Cast[DstT=DT_INT32, SrcT=DT_INT64, _class=[\"loc:@EmbedSequence/embeddings\"]](gradients/EmbedSequence/embedding_lookup_grad/Shape)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"rmsprop_fail.py\", line 19, in <module>\r\n    sess.run(train_op, feed_dict={input: np.random.randint(10, size=5)})\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 895, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n    options, run_metadata)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32': Could not satisfy explicit device specification '' because the node was colocated with a group of nodes that required incompatible device '/job:localhost/replica:0/task:0/device:GPU:0'\r\nColocation Debug Info:\r\nColocation group had the following types and devices:\r\nSparseApplyRMSProp: CPU\r\nUnsortedSegmentSum: GPU CPU\r\nGather: GPU CPU\r\nStridedSlice: GPU CPU\r\nUnique: GPU CPU\r\nShape: GPU CPU\r\nCast: GPU CPU\r\nIdentity: GPU CPU\r\nVariableV2: GPU CPU\r\nConst: GPU CPU\r\n\t [[Node: gradients/EmbedSequence/embedding_lookup_grad/ToInt32 = Cast[DstT=DT_INT32, SrcT=DT_INT64, _class=[\"loc:@EmbedSequence/embeddings\"]](gradients/EmbedSequence/embedding_lookup_grad/Shape)]]\r\n\r\nCaused by op 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32', defined at:\r\n  File \"rmsprop_fail.py\", line 15, in <module>\r\n    train_op = optimiser.minimize(loss)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 315, in minimize\r\n    grad_loss=grad_loss)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 386, in compute_gradients\r\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 542, in gradients\r\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 348, in _MaybeCompile\r\n    return grad_fn()  # Exit early\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 542, in <lambda>\r\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_grad.py\", line 365, in _GatherGrad\r\n    params_shape = math_ops.to_int32(params_shape)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/math_ops.py\", line 797, in to_int32\r\n    return cast(x, dtypes.int32, name=name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/math_ops.py\", line 716, in cast\r\n    return gen_math_ops.cast(x, base_type, name=name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 450, in cast\r\n    result = _op_def_lib.apply_op(\"Cast\", x=x, DstT=DstT, name=name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\n...which was originally created as op 'EmbedSequence/embedding_lookup', defined at:\r\n  File \"rmsprop_fail.py\", line 11, in <module>\r\n    x = layers.embed_sequence(input, vocab_size=20, embed_dim=5)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/layers/python/layers/encoders.py\", line 142, in embed_sequence\r\n    return embedding_ops.embedding_lookup(embeddings, ids)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/embedding_ops.py\", line 294, in embedding_lookup\r\n    transform_fn=None)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/embedding_ops.py\", line 123, in _embedding_lookup_and_transform\r\n    result = _gather_and_clip(params[0], ids, max_norm, name=name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/embedding_ops.py\", line 57, in _gather_and_clip\r\n    embs = array_ops.gather(params, ids, name=name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py\", line 2409, in gather\r\n    validate_indices=validate_indices, name=name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 1219, in gather\r\n    validate_indices=validate_indices, name=name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'gradients/EmbedSequence/embedding_lookup_grad/ToInt32': Could not satisfy explicit device specification '' because the node was colocated with a group of nodes that required incompatible device '/job:localhost/replica:0/task:0/device:GPU:0'\r\nColocation Debug Info:\r\nColocation group had the following types and devices:\r\nSparseApplyRMSProp: CPU\r\nUnsortedSegmentSum: GPU CPU\r\nGather: GPU CPU\r\nStridedSlice: GPU CPU\r\nUnique: GPU CPU\r\nShape: GPU CPU\r\nCast: GPU CPU\r\nIdentity: GPU CPU\r\nVariableV2: GPU CPU\r\nConst: GPU CPU\r\n\t [[Node: gradients/EmbedSequence/embedding_lookup_grad/ToInt32 = Cast[DstT=DT_INT32, SrcT=DT_INT64, _class=[\"loc:@EmbedSequence/embeddings\"]](gradients/EmbedSequence/embedding_lookup_grad/Shape)]]\r\n```\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04.3 LTS \r\n- **TensorFlow installed from (source or binary)**: docker\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**: 3.5\r\n- **CUDA/cuDNN version**:\r\nCuda compilation tools, release 8.0, V8.0.61\r\n- **GPU model and memory**:\r\nTesla K80\r\n\r\n"}