{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224205130", "html_url": "https://github.com/tensorflow/tensorflow/issues/1203#issuecomment-224205130", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1203", "id": 224205130, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDIwNTEzMA==", "user": {"login": "flow-ryan", "id": 12072586, "node_id": "MDQ6VXNlcjEyMDcyNTg2", "avatar_url": "https://avatars0.githubusercontent.com/u/12072586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flow-ryan", "html_url": "https://github.com/flow-ryan", "followers_url": "https://api.github.com/users/flow-ryan/followers", "following_url": "https://api.github.com/users/flow-ryan/following{/other_user}", "gists_url": "https://api.github.com/users/flow-ryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/flow-ryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flow-ryan/subscriptions", "organizations_url": "https://api.github.com/users/flow-ryan/orgs", "repos_url": "https://api.github.com/users/flow-ryan/repos", "events_url": "https://api.github.com/users/flow-ryan/events{/privacy}", "received_events_url": "https://api.github.com/users/flow-ryan/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-07T07:46:10Z", "updated_at": "2016-06-07T07:48:06Z", "author_association": "NONE", "body_html": "<p>I did write down all steps while setting up a g2 aws instance where I encountered that problem. Maybe this could help with reproducing - I may have missed some apt-get or cd but the majority should be here.</p>\n<p>The os was ubuntu server 14.04 - ami-fce3c696.</p>\n<pre><code>sudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y build-essential\n\nsudo apt-get install -y make pkg-config xorg-dev zip zlib1g-dev\n\n# Blacklist Noveau which has some kind of conflict with the nvidia driver\necho -e \"blacklist nouveau\\nblacklist lbm-nouveau\\noptions nouveau modeset=0\\nalias nouveau off\\nalias lbm-nouveau off\\n\" | sudo tee /etc/modprobe.d/blacklist-nouveau.conf\necho options nouveau modeset=0 | sudo tee -a /etc/modprobe.d/nouveau-kms.conf\nsudo update-initramfs -u\nsudo reboot # Reboot\n\n# install nvidia driver, cuda, cud\nwget http://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_7.5.18_linux.run\n# wget http://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.28_linux.run\n\nsudo apt-get install -y linux-image-extra-`uname -r` linux-headers-`uname -r` linux-image-`uname -r`\n\nchmod +x cuda_7.5.18_linux.run\n./cuda_7.5.18_linux.run -extract=`pwd`/nvidia_installers\ncd nvidia_installers\n#install driver\nsudo ./NVIDIA-Linux-x86_64-352.39.run \ncd ..\n\n#install cuda\nsudo ./nvidia_installers/cuda-linux64-rel-7.5.18-19867135.run \n\necho 'export LD_LIBRARY_PATH=/usr/local/cuda-7.5/lib64:$LD_LIBRARY_PATH' &gt;&gt; ~/.bashrc\necho 'export CUDA_HOME=/usr/local/cuda-7.5' &gt;&gt; ~/.bashrc\necho 'export PATH=$PATH:/usr/local/cuda-7.5/bin' &gt;&gt; ~/.bashrc\n\n#install cudnn --&gt; first download cudnn-7.5-linux-x64-v5.0-rc.tar or 7.0-v4\ntar -xf cudnn-7.5-linux-x64-v5.0-rc.tar\nsudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64\nsudo cp cuda/include/cudnn.h /usr/local/cuda/include/\n\n# install all package dependencies\nsudo apt-get install -y \\\nzip \\\nvim \\\nswig \\\nfortran \\\ngit \\\nlibboost-all-dev \\\nlibatlas-base-dev \\\nlibblas-dev \\\nliblapack-dev \\\npython-dev \\\npython-pip \\\nvim \\\nsoftware-properties-common \\\nlibjpeg8-dev \\\nbyobu \\\nlibfreetype6-dev \\\nlibpng-dev\n\nsudo pip install -U pip\n\nsudo pip install -U \\\nvirtualenv \\\nbumpy \\\nscipy \\\nmatplotlib \\\ngensim \\\nsacred \\\nscikit-learn \\\nlangdetect \\\npymongo \\\njupiter \\\nscikit-image \\\npyyaml \\\npandas \\\nbs4\n\n# install jdk 1.8 for bazel\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java8-installer\n\n# install bazel\ngit clone https://github.com/bazelbuild/bazel.git\ncd bazel\ngit checkout tags/0.2.0\n./compile.sh\nsudo cp output/bazel /usr/bin\ncd ..\n\n# install tensorflow\ngit clone -b r0.8 --recurse-submodules https://github.com/tensorflow/tensorflow\ncd tensorflow\n./configure\n\n# bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\nbazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\nbazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow\nsudo pip install /tmp/tensorflow/tensorflow-0.8.0rc0-py2-none-any.whl\n</code></pre>", "body_text": "I did write down all steps while setting up a g2 aws instance where I encountered that problem. Maybe this could help with reproducing - I may have missed some apt-get or cd but the majority should be here.\nThe os was ubuntu server 14.04 - ami-fce3c696.\nsudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y build-essential\n\nsudo apt-get install -y make pkg-config xorg-dev zip zlib1g-dev\n\n# Blacklist Noveau which has some kind of conflict with the nvidia driver\necho -e \"blacklist nouveau\\nblacklist lbm-nouveau\\noptions nouveau modeset=0\\nalias nouveau off\\nalias lbm-nouveau off\\n\" | sudo tee /etc/modprobe.d/blacklist-nouveau.conf\necho options nouveau modeset=0 | sudo tee -a /etc/modprobe.d/nouveau-kms.conf\nsudo update-initramfs -u\nsudo reboot # Reboot\n\n# install nvidia driver, cuda, cud\nwget http://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_7.5.18_linux.run\n# wget http://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.28_linux.run\n\nsudo apt-get install -y linux-image-extra-`uname -r` linux-headers-`uname -r` linux-image-`uname -r`\n\nchmod +x cuda_7.5.18_linux.run\n./cuda_7.5.18_linux.run -extract=`pwd`/nvidia_installers\ncd nvidia_installers\n#install driver\nsudo ./NVIDIA-Linux-x86_64-352.39.run \ncd ..\n\n#install cuda\nsudo ./nvidia_installers/cuda-linux64-rel-7.5.18-19867135.run \n\necho 'export LD_LIBRARY_PATH=/usr/local/cuda-7.5/lib64:$LD_LIBRARY_PATH' >> ~/.bashrc\necho 'export CUDA_HOME=/usr/local/cuda-7.5' >> ~/.bashrc\necho 'export PATH=$PATH:/usr/local/cuda-7.5/bin' >> ~/.bashrc\n\n#install cudnn --> first download cudnn-7.5-linux-x64-v5.0-rc.tar or 7.0-v4\ntar -xf cudnn-7.5-linux-x64-v5.0-rc.tar\nsudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64\nsudo cp cuda/include/cudnn.h /usr/local/cuda/include/\n\n# install all package dependencies\nsudo apt-get install -y \\\nzip \\\nvim \\\nswig \\\nfortran \\\ngit \\\nlibboost-all-dev \\\nlibatlas-base-dev \\\nlibblas-dev \\\nliblapack-dev \\\npython-dev \\\npython-pip \\\nvim \\\nsoftware-properties-common \\\nlibjpeg8-dev \\\nbyobu \\\nlibfreetype6-dev \\\nlibpng-dev\n\nsudo pip install -U pip\n\nsudo pip install -U \\\nvirtualenv \\\nbumpy \\\nscipy \\\nmatplotlib \\\ngensim \\\nsacred \\\nscikit-learn \\\nlangdetect \\\npymongo \\\njupiter \\\nscikit-image \\\npyyaml \\\npandas \\\nbs4\n\n# install jdk 1.8 for bazel\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java8-installer\n\n# install bazel\ngit clone https://github.com/bazelbuild/bazel.git\ncd bazel\ngit checkout tags/0.2.0\n./compile.sh\nsudo cp output/bazel /usr/bin\ncd ..\n\n# install tensorflow\ngit clone -b r0.8 --recurse-submodules https://github.com/tensorflow/tensorflow\ncd tensorflow\n./configure\n\n# bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\nbazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\nbazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow\nsudo pip install /tmp/tensorflow/tensorflow-0.8.0rc0-py2-none-any.whl", "body": "I did write down all steps while setting up a g2 aws instance where I encountered that problem. Maybe this could help with reproducing - I may have missed some apt-get or cd but the majority should be here.\n\nThe os was ubuntu server 14.04 - ami-fce3c696.\n\n```\nsudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y build-essential\n\nsudo apt-get install -y make pkg-config xorg-dev zip zlib1g-dev\n\n# Blacklist Noveau which has some kind of conflict with the nvidia driver\necho -e \"blacklist nouveau\\nblacklist lbm-nouveau\\noptions nouveau modeset=0\\nalias nouveau off\\nalias lbm-nouveau off\\n\" | sudo tee /etc/modprobe.d/blacklist-nouveau.conf\necho options nouveau modeset=0 | sudo tee -a /etc/modprobe.d/nouveau-kms.conf\nsudo update-initramfs -u\nsudo reboot # Reboot\n\n# install nvidia driver, cuda, cud\nwget http://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_7.5.18_linux.run\n# wget http://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.28_linux.run\n\nsudo apt-get install -y linux-image-extra-`uname -r` linux-headers-`uname -r` linux-image-`uname -r`\n\nchmod +x cuda_7.5.18_linux.run\n./cuda_7.5.18_linux.run -extract=`pwd`/nvidia_installers\ncd nvidia_installers\n#install driver\nsudo ./NVIDIA-Linux-x86_64-352.39.run \ncd ..\n\n#install cuda\nsudo ./nvidia_installers/cuda-linux64-rel-7.5.18-19867135.run \n\necho 'export LD_LIBRARY_PATH=/usr/local/cuda-7.5/lib64:$LD_LIBRARY_PATH' >> ~/.bashrc\necho 'export CUDA_HOME=/usr/local/cuda-7.5' >> ~/.bashrc\necho 'export PATH=$PATH:/usr/local/cuda-7.5/bin' >> ~/.bashrc\n\n#install cudnn --> first download cudnn-7.5-linux-x64-v5.0-rc.tar or 7.0-v4\ntar -xf cudnn-7.5-linux-x64-v5.0-rc.tar\nsudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64\nsudo cp cuda/include/cudnn.h /usr/local/cuda/include/\n\n# install all package dependencies\nsudo apt-get install -y \\\nzip \\\nvim \\\nswig \\\nfortran \\\ngit \\\nlibboost-all-dev \\\nlibatlas-base-dev \\\nlibblas-dev \\\nliblapack-dev \\\npython-dev \\\npython-pip \\\nvim \\\nsoftware-properties-common \\\nlibjpeg8-dev \\\nbyobu \\\nlibfreetype6-dev \\\nlibpng-dev\n\nsudo pip install -U pip\n\nsudo pip install -U \\\nvirtualenv \\\nbumpy \\\nscipy \\\nmatplotlib \\\ngensim \\\nsacred \\\nscikit-learn \\\nlangdetect \\\npymongo \\\njupiter \\\nscikit-image \\\npyyaml \\\npandas \\\nbs4\n\n# install jdk 1.8 for bazel\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java8-installer\n\n# install bazel\ngit clone https://github.com/bazelbuild/bazel.git\ncd bazel\ngit checkout tags/0.2.0\n./compile.sh\nsudo cp output/bazel /usr/bin\ncd ..\n\n# install tensorflow\ngit clone -b r0.8 --recurse-submodules https://github.com/tensorflow/tensorflow\ncd tensorflow\n./configure\n\n# bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\nbazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\nbazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow\nsudo pip install /tmp/tensorflow/tensorflow-0.8.0rc0-py2-none-any.whl\n```\n"}