{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11369", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11369/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11369/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11369/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11369", "id": 241433935, "node_id": "MDU6SXNzdWUyNDE0MzM5MzU=", "number": 11369, "title": "TFRecord parse multiple times using parse_example", "user": {"login": "sujoyp", "id": 8893859, "node_id": "MDQ6VXNlcjg4OTM4NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8893859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sujoyp", "html_url": "https://github.com/sujoyp", "followers_url": "https://api.github.com/users/sujoyp/followers", "following_url": "https://api.github.com/users/sujoyp/following{/other_user}", "gists_url": "https://api.github.com/users/sujoyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/sujoyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sujoyp/subscriptions", "organizations_url": "https://api.github.com/users/sujoyp/orgs", "repos_url": "https://api.github.com/users/sujoyp/repos", "events_url": "https://api.github.com/users/sujoyp/events{/privacy}", "received_events_url": "https://api.github.com/users/sujoyp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-08T07:46:25Z", "updated_at": "2017-10-12T00:57:48Z", "closed_at": "2017-10-12T00:57:41Z", "author_association": "NONE", "body_html": "<p>In order to parse a sequence of example, I am using the following code in tensorflow.</p>\n<pre><code>sequence_len = 10\nfilename_queue = tf.train.string_input_producer(['foo.tfrecords'])\nreader = tf.TFRecordReader()\n_, seralized_example = reader.read_up_to(filename_queue,sequence_len)\nfeatures = tf.parse_example(seralized_example,features={'feature_raw': tf.VarLenFeature(dtype=tf.float32)})\nfeature = features['feature_raw'].values\n</code></pre>\n<p>This will give me a sequence of 10 examples. But I want to read the first 10 example sequence in on gpu the next one in the next gpu and so on. However, when I do that using tf.device() as follows, I get the same data in all the gpus.</p>\n<pre><code>sequence_len = 10\ndata = []\nfilename_queue = tf.train.string_input_producer(['foo.tfrecords'])\nreader = tf.TFRecordReader()\nfor g in range(num_gpus):\n  with tf.device('/gpu:%d' % g):\n    _, seralized_example = reader.read_up_to(filename_queue,sequence_len)\n    features = tf.parse_example(seralized_example,features={'feature_raw': tf.VarLenFeature(dtype=tf.float32)})\n    feature = features['feature_raw'].values\n    data.append(feature)\n</code></pre>\n<p>How to deal with this ?</p>", "body_text": "In order to parse a sequence of example, I am using the following code in tensorflow.\nsequence_len = 10\nfilename_queue = tf.train.string_input_producer(['foo.tfrecords'])\nreader = tf.TFRecordReader()\n_, seralized_example = reader.read_up_to(filename_queue,sequence_len)\nfeatures = tf.parse_example(seralized_example,features={'feature_raw': tf.VarLenFeature(dtype=tf.float32)})\nfeature = features['feature_raw'].values\n\nThis will give me a sequence of 10 examples. But I want to read the first 10 example sequence in on gpu the next one in the next gpu and so on. However, when I do that using tf.device() as follows, I get the same data in all the gpus.\nsequence_len = 10\ndata = []\nfilename_queue = tf.train.string_input_producer(['foo.tfrecords'])\nreader = tf.TFRecordReader()\nfor g in range(num_gpus):\n  with tf.device('/gpu:%d' % g):\n    _, seralized_example = reader.read_up_to(filename_queue,sequence_len)\n    features = tf.parse_example(seralized_example,features={'feature_raw': tf.VarLenFeature(dtype=tf.float32)})\n    feature = features['feature_raw'].values\n    data.append(feature)\n\nHow to deal with this ?", "body": "In order to parse a sequence of example, I am using the following code in tensorflow.\r\n    \r\n    sequence_len = 10\r\n    filename_queue = tf.train.string_input_producer(['foo.tfrecords'])\r\n    reader = tf.TFRecordReader()\r\n    _, seralized_example = reader.read_up_to(filename_queue,sequence_len)\r\n    features = tf.parse_example(seralized_example,features={'feature_raw': tf.VarLenFeature(dtype=tf.float32)})\r\n    feature = features['feature_raw'].values\r\n\r\nThis will give me a sequence of 10 examples. But I want to read the first 10 example sequence in on gpu the next one in the next gpu and so on. However, when I do that using tf.device() as follows, I get the same data in all the gpus. \r\n    \r\n    sequence_len = 10\r\n    data = []\r\n    filename_queue = tf.train.string_input_producer(['foo.tfrecords'])\r\n    reader = tf.TFRecordReader()\r\n    for g in range(num_gpus):\r\n      with tf.device('/gpu:%d' % g):\r\n        _, seralized_example = reader.read_up_to(filename_queue,sequence_len)\r\n        features = tf.parse_example(seralized_example,features={'feature_raw': tf.VarLenFeature(dtype=tf.float32)})\r\n        feature = features['feature_raw'].values\r\n        data.append(feature)\r\n\r\nHow to deal with this ?\r\n\r\n\r\n"}