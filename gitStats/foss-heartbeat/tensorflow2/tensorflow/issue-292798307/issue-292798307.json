{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16585", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16585/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16585/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16585/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16585", "id": 292798307, "node_id": "MDU6SXNzdWUyOTI3OTgzMDc=", "number": 16585, "title": "TensorFlow with CUDA or Python might rebuilds more than necessary instead of re-using bazel cache", "user": {"login": "lissyx", "id": 1645737, "node_id": "MDQ6VXNlcjE2NDU3Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1645737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lissyx", "html_url": "https://github.com/lissyx", "followers_url": "https://api.github.com/users/lissyx/followers", "following_url": "https://api.github.com/users/lissyx/following{/other_user}", "gists_url": "https://api.github.com/users/lissyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/lissyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lissyx/subscriptions", "organizations_url": "https://api.github.com/users/lissyx/orgs", "repos_url": "https://api.github.com/users/lissyx/repos", "events_url": "https://api.github.com/users/lissyx/events{/privacy}", "received_events_url": "https://api.github.com/users/lissyx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-30T14:16:49Z", "updated_at": "2018-02-02T02:03:32Z", "closed_at": "2018-02-02T02:03:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Context: for DeepSpeech, we perform tensorflow builds and then keep the cache in a tar (capturing the whole of the home directory of the build user). We then untar it and the deepspeech build through <code>bazel build</code> picks the proper cached items so it does not rebuild anything.</p>\n<p>Recently, we started to have increased (2.5x) build time on CUDA-enabled builds. Debugging with Bazel showed that it was rebuilding because the <code>actionKey</code> computed for <code>stream_executor_impl</code> was different. Instrumenting Bazel to get more informations, I could get down to the reason of the different actionKey: the ordering of the CUDA includes was different. The list itself contained the exact same content, just a different ordering.</p>\n<p>Those includes are symlinks, and they are generated from a genrule. This is all taken care of by <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/ba64f5334d4bba31d22c30e09a96f806ea0e2f7e/third_party/gpus/cuda_configure.bzl#L915-L1035\">tensorflow/third_party/gpus/cuda_configure.bzl</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 915 to 1035\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/ba64f5334d4bba31d22c30e09a96f806ea0e2f7e\">ba64f53</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L915\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"915\"></td>\n          <td id=\"LC915\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">_create_local_cuda_repository</span>(<span class=\"pl-smi\">repository_ctx</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L916\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"916\"></td>\n          <td id=\"LC916\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>Creates the repository containing files set up to build with CUDA.<span class=\"pl-pds\">\"\"\"</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L917\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"917\"></td>\n          <td id=\"LC917\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   cuda_config <span class=\"pl-k\">=</span> _get_cuda_config(repository_ctx) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L918\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"918\"></td>\n          <td id=\"LC918\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L919\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"919\"></td>\n          <td id=\"LC919\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   cudnn_header_dir <span class=\"pl-k\">=</span> _find_cudnn_header_dir(repository_ctx, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L920\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"920\"></td>\n          <td id=\"LC920\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                                             cuda_config.cudnn_install_basedir) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L921\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"921\"></td>\n          <td id=\"LC921\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L922\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"922\"></td>\n          <td id=\"LC922\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">#</span> Set up symbolic links for the cuda toolkit by creating genrules to do</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L923\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"923\"></td>\n          <td id=\"LC923\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">#</span> symlinking. We create one genrule for each directory we want to track under</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L924\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"924\"></td>\n          <td id=\"LC924\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">#</span> cuda_toolkit_path</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L925\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"925\"></td>\n          <td id=\"LC925\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   cuda_toolkit_path <span class=\"pl-k\">=</span> cuda_config.cuda_toolkit_path </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L926\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"926\"></td>\n          <td id=\"LC926\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   cuda_include_path <span class=\"pl-k\">=</span> cuda_toolkit_path <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/include<span class=\"pl-pds\">\"</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L927\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"927\"></td>\n          <td id=\"LC927\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   genrules <span class=\"pl-k\">=</span> [symlink_genrule_for_dir(repository_ctx, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L928\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"928\"></td>\n          <td id=\"LC928\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       cuda_include_path, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda/include<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda-include<span class=\"pl-pds\">\"</span></span>)] </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L929\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"929\"></td>\n          <td id=\"LC929\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   genrules.append(symlink_genrule_for_dir(repository_ctx, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L930\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"930\"></td>\n          <td id=\"LC930\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       cuda_toolkit_path <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/nvvm<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda/nvvm<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda-nvvm<span class=\"pl-pds\">\"</span></span>)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L931\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"931\"></td>\n          <td id=\"LC931\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   genrules.append(symlink_genrule_for_dir(repository_ctx, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L932\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"932\"></td>\n          <td id=\"LC932\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       cuda_toolkit_path <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/extras/CUPTI/include<span class=\"pl-pds\">\"</span></span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L933\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"933\"></td>\n          <td id=\"LC933\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda/extras/CUPTI/include<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda-extras<span class=\"pl-pds\">\"</span></span>)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L934\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"934\"></td>\n          <td id=\"LC934\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L935\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"935\"></td>\n          <td id=\"LC935\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   cuda_libs <span class=\"pl-k\">=</span> _find_libs(repository_ctx, cuda_config) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L936\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"936\"></td>\n          <td id=\"LC936\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   cuda_lib_src <span class=\"pl-k\">=</span> [] </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L937\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"937\"></td>\n          <td id=\"LC937\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   cuda_lib_dest <span class=\"pl-k\">=</span> [] </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L938\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"938\"></td>\n          <td id=\"LC938\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">for</span> lib <span class=\"pl-k\">in</span> cuda_libs.values(): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L939\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"939\"></td>\n          <td id=\"LC939\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     cuda_lib_src.append(lib.path) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L940\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"940\"></td>\n          <td id=\"LC940\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     cuda_lib_dest.append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda/lib/<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> lib.file_name) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L941\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"941\"></td>\n          <td id=\"LC941\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   genrules.append(symlink_genrule_for_dir(repository_ctx, <span class=\"pl-c1\">None</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda-lib<span class=\"pl-pds\">\"</span></span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L942\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"942\"></td>\n          <td id=\"LC942\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                                           cuda_lib_src, cuda_lib_dest)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L943\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"943\"></td>\n          <td id=\"LC943\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L944\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"944\"></td>\n          <td id=\"LC944\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">#</span> Set up the symbolic links for cudnn if cndnn was not installed to</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L945\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"945\"></td>\n          <td id=\"LC945\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">#</span> CUDA_TOOLKIT_PATH.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L946\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"946\"></td>\n          <td id=\"LC946\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   included_files <span class=\"pl-k\">=</span> _read_dir(repository_ctx, cuda_include_path).replace( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L947\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"947\"></td>\n          <td id=\"LC947\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       cuda_include_path, <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>).splitlines() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L948\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"948\"></td>\n          <td id=\"LC948\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/cudnn.h<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">not</span> <span class=\"pl-k\">in</span> included_files: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L949\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"949\"></td>\n          <td id=\"LC949\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     genrules.append(symlink_genrule_for_dir(repository_ctx, <span class=\"pl-c1\">None</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L950\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"950\"></td>\n          <td id=\"LC950\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda/include/<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cudnn-include<span class=\"pl-pds\">\"</span></span>, [cudnn_header_dir <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/cudnn.h<span class=\"pl-pds\">\"</span></span>], </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L951\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"951\"></td>\n          <td id=\"LC951\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cudnn.h<span class=\"pl-pds\">\"</span></span>])) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L952\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"952\"></td>\n          <td id=\"LC952\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">else</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L953\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"953\"></td>\n          <td id=\"LC953\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     genrules.append( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L954\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"954\"></td>\n          <td id=\"LC954\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-s\"><span class=\"pl-pds\">'</span>filegroup(<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">+</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L955\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"955\"></td>\n          <td id=\"LC955\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-s\"><span class=\"pl-pds\">'</span>    name = \"cudnn-include\",<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">+</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L956\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"956\"></td>\n          <td id=\"LC956\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-s\"><span class=\"pl-pds\">'</span>    srcs = [],<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">+</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L957\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"957\"></td>\n          <td id=\"LC957\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-s\"><span class=\"pl-pds\">'</span>)<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L958\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"958\"></td>\n          <td id=\"LC958\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         ) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L959\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"959\"></td>\n          <td id=\"LC959\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L960\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"960\"></td>\n          <td id=\"LC960\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">#</span> Set up BUILD file for cuda/</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L961\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"961\"></td>\n          <td id=\"LC961\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   _tpl(repository_ctx, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda:build_defs.bzl<span class=\"pl-pds\">\"</span></span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L962\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"962\"></td>\n          <td id=\"LC962\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L963\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"963\"></td>\n          <td id=\"LC963\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_is_configured}</span><span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>True<span class=\"pl-pds\">\"</span></span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L964\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"964\"></td>\n          <td id=\"LC964\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_extra_copts}</span><span class=\"pl-pds\">\"</span></span>: _compute_cuda_extra_copts( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L965\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"965\"></td>\n          <td id=\"LC965\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                repository_ctx, cuda_config.compute_capabilities), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L966\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"966\"></td>\n          <td id=\"LC966\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        }) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L967\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"967\"></td>\n          <td id=\"LC967\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   _tpl(repository_ctx, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda:BUILD<span class=\"pl-pds\">\"</span></span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L968\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"968\"></td>\n          <td id=\"LC968\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L969\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"969\"></td>\n          <td id=\"LC969\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_driver_lib}</span><span class=\"pl-pds\">\"</span></span>: cuda_libs[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda<span class=\"pl-pds\">\"</span></span>].file_name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L970\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"970\"></td>\n          <td id=\"LC970\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cudart_static_lib}</span><span class=\"pl-pds\">\"</span></span>: cuda_libs[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cudart_static<span class=\"pl-pds\">\"</span></span>].file_name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L971\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"971\"></td>\n          <td id=\"LC971\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cudart_static_linkopt}</span><span class=\"pl-pds\">\"</span></span>: _cudart_static_linkopt( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L972\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"972\"></td>\n          <td id=\"LC972\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                cuda_config.cpu_value), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L973\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"973\"></td>\n          <td id=\"LC973\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cudart_lib}</span><span class=\"pl-pds\">\"</span></span>: cuda_libs[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cudart<span class=\"pl-pds\">\"</span></span>].file_name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L974\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"974\"></td>\n          <td id=\"LC974\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cublas_lib}</span><span class=\"pl-pds\">\"</span></span>: cuda_libs[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cublas<span class=\"pl-pds\">\"</span></span>].file_name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L975\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"975\"></td>\n          <td id=\"LC975\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cusolver_lib}</span><span class=\"pl-pds\">\"</span></span>: cuda_libs[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cusolver<span class=\"pl-pds\">\"</span></span>].file_name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L976\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"976\"></td>\n          <td id=\"LC976\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cudnn_lib}</span><span class=\"pl-pds\">\"</span></span>: cuda_libs[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cudnn<span class=\"pl-pds\">\"</span></span>].file_name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L977\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"977\"></td>\n          <td id=\"LC977\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cufft_lib}</span><span class=\"pl-pds\">\"</span></span>: cuda_libs[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cufft<span class=\"pl-pds\">\"</span></span>].file_name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L978\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"978\"></td>\n          <td id=\"LC978\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{curand_lib}</span><span class=\"pl-pds\">\"</span></span>: cuda_libs[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>curand<span class=\"pl-pds\">\"</span></span>].file_name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L979\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"979\"></td>\n          <td id=\"LC979\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cupti_lib}</span><span class=\"pl-pds\">\"</span></span>: cuda_libs[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cupti<span class=\"pl-pds\">\"</span></span>].file_name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L980\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"980\"></td>\n          <td id=\"LC980\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_include_genrules}</span><span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">\"</span></span>.join(genrules), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L981\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"981\"></td>\n          <td id=\"LC981\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_headers}</span><span class=\"pl-pds\">\"</span></span>: (<span class=\"pl-s\"><span class=\"pl-pds\">'</span>\":cuda-include\",<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">+</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L982\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"982\"></td>\n          <td id=\"LC982\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                                <span class=\"pl-s\"><span class=\"pl-pds\">'</span>        \":cudnn-include\",<span class=\"pl-pds\">'</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L983\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"983\"></td>\n          <td id=\"LC983\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        }) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L984\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"984\"></td>\n          <td id=\"LC984\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L985\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"985\"></td>\n          <td id=\"LC985\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   is_cuda_clang <span class=\"pl-k\">=</span> _use_cuda_clang(repository_ctx) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L986\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"986\"></td>\n          <td id=\"LC986\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L987\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"987\"></td>\n          <td id=\"LC987\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   should_download_clang <span class=\"pl-k\">=</span> is_cuda_clang <span class=\"pl-k\">and</span> _flag_enabled( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L988\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"988\"></td>\n          <td id=\"LC988\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       repository_ctx, <span class=\"pl-c1\">_TF_DOWNLOAD_CLANG</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L989\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"989\"></td>\n          <td id=\"LC989\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> should_download_clang: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L990\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"990\"></td>\n          <td id=\"LC990\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     download_clang(repository_ctx, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>crosstool/extra_tools<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L991\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"991\"></td>\n          <td id=\"LC991\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L992\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"992\"></td>\n          <td id=\"LC992\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">#</span> Set up crosstool/</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L993\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"993\"></td>\n          <td id=\"LC993\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   cc <span class=\"pl-k\">=</span> find_cc(repository_ctx) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L994\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"994\"></td>\n          <td id=\"LC994\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   cc_fullpath <span class=\"pl-k\">=</span> cc <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> should_download_clang <span class=\"pl-k\">else</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>crosstool/<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> cc </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L995\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"995\"></td>\n          <td id=\"LC995\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L996\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"996\"></td>\n          <td id=\"LC996\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   host_compiler_includes <span class=\"pl-k\">=</span> _host_compiler_includes(repository_ctx, cc_fullpath) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L997\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"997\"></td>\n          <td id=\"LC997\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   cuda_defines <span class=\"pl-k\">=</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L998\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"998\"></td>\n          <td id=\"LC998\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_include_path}</span><span class=\"pl-pds\">\"</span></span>: _cuda_include_path(repository_ctx, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L999\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"999\"></td>\n          <td id=\"LC999\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                                                       cuda_config), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1000\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1000\"></td>\n          <td id=\"LC1000\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{host_compiler_includes}</span><span class=\"pl-pds\">\"</span></span>: host_compiler_includes, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1001\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1001\"></td>\n          <td id=\"LC1001\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1002\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1002\"></td>\n          <td id=\"LC1002\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> is_cuda_clang: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1003\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1003\"></td>\n          <td id=\"LC1003\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     cuda_defines[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{clang_path}</span><span class=\"pl-pds\">\"</span></span>] <span class=\"pl-k\">=</span> cc </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1004\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1004\"></td>\n          <td id=\"LC1004\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     _tpl(repository_ctx, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>crosstool:BUILD<span class=\"pl-pds\">\"</span></span>, {<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{linker_files}</span><span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>:empty<span class=\"pl-pds\">\"</span></span>}) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1005\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1005\"></td>\n          <td id=\"LC1005\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     _tpl(repository_ctx, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>crosstool:CROSSTOOL_clang<span class=\"pl-pds\">\"</span></span>, cuda_defines, <span class=\"pl-v\">out</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>crosstool/CROSSTOOL<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1006\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1006\"></td>\n          <td id=\"LC1006\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     repository_ctx.file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1007\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1007\"></td>\n          <td id=\"LC1007\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">else</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1008\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1008\"></td>\n          <td id=\"LC1008\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     nvcc_path <span class=\"pl-k\">=</span> <span class=\"pl-c1\">str</span>(repository_ctx.path(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-c1\">%s</span>/bin/nvcc<span class=\"pl-c1\">%s</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1009\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1009\"></td>\n          <td id=\"LC1009\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         (cuda_config.cuda_toolkit_path, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1010\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1010\"></td>\n          <td id=\"LC1010\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.exe<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">if</span> cuda_config.cpu_value <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Windows<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">else</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>))) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1011\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1011\"></td>\n          <td id=\"LC1011\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     _tpl(repository_ctx, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>crosstool:BUILD<span class=\"pl-pds\">\"</span></span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1012\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1012\"></td>\n          <td id=\"LC1012\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">          {<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{linker_files}</span><span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>:crosstool_wrapper_driver_is_not_gcc<span class=\"pl-pds\">\"</span></span>}) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1013\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1013\"></td>\n          <td id=\"LC1013\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     _tpl(repository_ctx, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>crosstool:CROSSTOOL_nvcc<span class=\"pl-pds\">\"</span></span>, cuda_defines, <span class=\"pl-v\">out</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>crosstool/CROSSTOOL<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1014\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1014\"></td>\n          <td id=\"LC1014\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     _tpl(repository_ctx, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1015\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1015\"></td>\n          <td id=\"LC1015\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">          <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>crosstool:clang/bin/crosstool_wrapper_driver_is_not_gcc<span class=\"pl-pds\">\"</span></span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1016\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1016\"></td>\n          <td id=\"LC1016\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">          { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1017\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1017\"></td>\n          <td id=\"LC1017\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">              <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cpu_compiler}</span><span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">str</span>(cc), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1018\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1018\"></td>\n          <td id=\"LC1018\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">              <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_version}</span><span class=\"pl-pds\">\"</span></span>: cuda_config.cuda_version, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1019\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1019\"></td>\n          <td id=\"LC1019\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">              <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{nvcc_path}</span><span class=\"pl-pds\">\"</span></span>: nvcc_path, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1020\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1020\"></td>\n          <td id=\"LC1020\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">              <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{gcc_host_compiler_path}</span><span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">str</span>(cc), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1021\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1021\"></td>\n          <td id=\"LC1021\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">              <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_compute_capabilities}</span><span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, <span class=\"pl-pds\">\"</span></span>.join( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1022\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1022\"></td>\n          <td id=\"LC1022\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                  [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\"</span><span class=\"pl-c1\">%s</span><span class=\"pl-cce\">\\\"</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> c <span class=\"pl-k\">for</span> c <span class=\"pl-k\">in</span> cuda_config.compute_capabilities]), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1023\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1023\"></td>\n          <td id=\"LC1023\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">          }) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1024\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1024\"></td>\n          <td id=\"LC1024\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1025\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1025\"></td>\n          <td id=\"LC1025\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">#</span> Set up cuda_config.h, which is used by</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1026\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1026\"></td>\n          <td id=\"LC1026\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">#</span> tensorflow/stream_executor/dso_loader.cc.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1027\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1027\"></td>\n          <td id=\"LC1027\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   _tpl(repository_ctx, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda:cuda_config.h<span class=\"pl-pds\">\"</span></span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1028\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1028\"></td>\n          <td id=\"LC1028\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1029\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1029\"></td>\n          <td id=\"LC1029\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_version}</span><span class=\"pl-pds\">\"</span></span>: cuda_config.cuda_version, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1030\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1030\"></td>\n          <td id=\"LC1030\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cudnn_version}</span><span class=\"pl-pds\">\"</span></span>: cuda_config.cudnn_version, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1031\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1031\"></td>\n          <td id=\"LC1031\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_compute_capabilities}</span><span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,<span class=\"pl-pds\">\"</span></span>.join( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1032\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1032\"></td>\n          <td id=\"LC1032\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>CudaVersion(<span class=\"pl-cce\">\\\"</span><span class=\"pl-c1\">%s</span><span class=\"pl-cce\">\\\"</span>)<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> c </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1033\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1033\"></td>\n          <td id=\"LC1033\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                 <span class=\"pl-k\">for</span> c <span class=\"pl-k\">in</span> cuda_config.compute_capabilities]), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1034\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1034\"></td>\n          <td id=\"LC1034\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{cuda_toolkit_path}</span><span class=\"pl-pds\">\"</span></span>: cuda_config.cuda_toolkit_path, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1035\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1035\"></td>\n          <td id=\"LC1035\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        }, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cuda/cuda/cuda_config.h<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n which generated shell script for the genrules, that actually do perform the symlinks. Checking those shell scripts revealed the exact same and different ordering.</p>\n<p>Checking more carefully, one will see that the headers are discovered by <code>_read_dir</code> function: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/ba64f5334d4bba31d22c30e09a96f806ea0e2f7e/third_party/gpus/cuda_configure.bzl#L891-L894\">tensorflow/third_party/gpus/cuda_configure.bzl</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 891 to 894\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/ba64f5334d4bba31d22c30e09a96f806ea0e2f7e\">ba64f53</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L891\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"891\"></td>\n          <td id=\"LC891\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> find_result <span class=\"pl-k\">=</span> _execute( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L892\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"892\"></td>\n          <td id=\"LC892\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     repository_ctx, [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>find<span class=\"pl-pds\">\"</span></span>, src_dir, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-follow<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-type<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>f<span class=\"pl-pds\">\"</span></span>], </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L893\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"893\"></td>\n          <td id=\"LC893\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-v\">empty_stdout_fine</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L894\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"894\"></td>\n          <td id=\"LC894\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> result <span class=\"pl-k\">=</span> find_result.stdout </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n, it does directly get the output of <code>find</code>. This is dependant on the ordering provided by <code>readdir</code> syscall.</p>\n<p>In our case, the ordering on the filesystem before making the tar archive, and after untarring it would be different.</p>\n<p>One simple fix for that is to force ordering the list of headers, this way we are sure the order is always the same and we are not dependant on what <code>readdir</code> is going to get us.</p>\n<p>In the past, Bazel would force the ordering of the elements considered to compute the actionKey. This was removed with 0.3.0 but it might have make the issue hidden <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/bazelbuild/bazel/commit/9dc32111d5b6c1c7c5eaf39efad5fef75327ee75/hovercard\" href=\"https://github.com/bazelbuild/bazel/commit/9dc32111d5b6c1c7c5eaf39efad5fef75327ee75\">bazelbuild/bazel@<tt>9dc3211</tt></a></p>", "body_text": "Context: for DeepSpeech, we perform tensorflow builds and then keep the cache in a tar (capturing the whole of the home directory of the build user). We then untar it and the deepspeech build through bazel build picks the proper cached items so it does not rebuild anything.\nRecently, we started to have increased (2.5x) build time on CUDA-enabled builds. Debugging with Bazel showed that it was rebuilding because the actionKey computed for stream_executor_impl was different. Instrumenting Bazel to get more informations, I could get down to the reason of the different actionKey: the ordering of the CUDA includes was different. The list itself contained the exact same content, just a different ordering.\nThose includes are symlinks, and they are generated from a genrule. This is all taken care of by \n  \n    \n      tensorflow/third_party/gpus/cuda_configure.bzl\n    \n    \n        Lines 915 to 1035\n      in\n      ba64f53\n    \n    \n    \n    \n\n        \n          \n           def _create_local_cuda_repository(repository_ctx): \n        \n\n        \n          \n             \"\"\"Creates the repository containing files set up to build with CUDA.\"\"\" \n        \n\n        \n          \n             cuda_config = _get_cuda_config(repository_ctx) \n        \n\n        \n          \n            \n        \n\n        \n          \n             cudnn_header_dir = _find_cudnn_header_dir(repository_ctx, \n        \n\n        \n          \n                                                       cuda_config.cudnn_install_basedir) \n        \n\n        \n          \n            \n        \n\n        \n          \n             # Set up symbolic links for the cuda toolkit by creating genrules to do \n        \n\n        \n          \n             # symlinking. We create one genrule for each directory we want to track under \n        \n\n        \n          \n             # cuda_toolkit_path \n        \n\n        \n          \n             cuda_toolkit_path = cuda_config.cuda_toolkit_path \n        \n\n        \n          \n             cuda_include_path = cuda_toolkit_path + \"/include\" \n        \n\n        \n          \n             genrules = [symlink_genrule_for_dir(repository_ctx, \n        \n\n        \n          \n                 cuda_include_path, \"cuda/include\", \"cuda-include\")] \n        \n\n        \n          \n             genrules.append(symlink_genrule_for_dir(repository_ctx, \n        \n\n        \n          \n                 cuda_toolkit_path + \"/nvvm\", \"cuda/nvvm\", \"cuda-nvvm\")) \n        \n\n        \n          \n             genrules.append(symlink_genrule_for_dir(repository_ctx, \n        \n\n        \n          \n                 cuda_toolkit_path + \"/extras/CUPTI/include\", \n        \n\n        \n          \n                 \"cuda/extras/CUPTI/include\", \"cuda-extras\")) \n        \n\n        \n          \n            \n        \n\n        \n          \n             cuda_libs = _find_libs(repository_ctx, cuda_config) \n        \n\n        \n          \n             cuda_lib_src = [] \n        \n\n        \n          \n             cuda_lib_dest = [] \n        \n\n        \n          \n             for lib in cuda_libs.values(): \n        \n\n        \n          \n               cuda_lib_src.append(lib.path) \n        \n\n        \n          \n               cuda_lib_dest.append(\"cuda/lib/\" + lib.file_name) \n        \n\n        \n          \n             genrules.append(symlink_genrule_for_dir(repository_ctx, None, \"\", \"cuda-lib\", \n        \n\n        \n          \n                                                     cuda_lib_src, cuda_lib_dest)) \n        \n\n        \n          \n            \n        \n\n        \n          \n             # Set up the symbolic links for cudnn if cndnn was not installed to \n        \n\n        \n          \n             # CUDA_TOOLKIT_PATH. \n        \n\n        \n          \n             included_files = _read_dir(repository_ctx, cuda_include_path).replace( \n        \n\n        \n          \n                 cuda_include_path, '').splitlines() \n        \n\n        \n          \n             if '/cudnn.h' not in included_files: \n        \n\n        \n          \n               genrules.append(symlink_genrule_for_dir(repository_ctx, None, \n        \n\n        \n          \n                   \"cuda/include/\", \"cudnn-include\", [cudnn_header_dir + \"/cudnn.h\"], \n        \n\n        \n          \n                   [\"cudnn.h\"])) \n        \n\n        \n          \n             else: \n        \n\n        \n          \n               genrules.append( \n        \n\n        \n          \n                       'filegroup(\\n' + \n        \n\n        \n          \n                       '    name = \"cudnn-include\",\\n' + \n        \n\n        \n          \n                       '    srcs = [],\\n' + \n        \n\n        \n          \n                       ')\\n' \n        \n\n        \n          \n                   ) \n        \n\n        \n          \n            \n        \n\n        \n          \n             # Set up BUILD file for cuda/ \n        \n\n        \n          \n             _tpl(repository_ctx, \"cuda:build_defs.bzl\", \n        \n\n        \n          \n                  { \n        \n\n        \n          \n                      \"%{cuda_is_configured}\": \"True\", \n        \n\n        \n          \n                      \"%{cuda_extra_copts}\": _compute_cuda_extra_copts( \n        \n\n        \n          \n                          repository_ctx, cuda_config.compute_capabilities), \n        \n\n        \n          \n                  }) \n        \n\n        \n          \n             _tpl(repository_ctx, \"cuda:BUILD\", \n        \n\n        \n          \n                  { \n        \n\n        \n          \n                      \"%{cuda_driver_lib}\": cuda_libs[\"cuda\"].file_name, \n        \n\n        \n          \n                      \"%{cudart_static_lib}\": cuda_libs[\"cudart_static\"].file_name, \n        \n\n        \n          \n                      \"%{cudart_static_linkopt}\": _cudart_static_linkopt( \n        \n\n        \n          \n                          cuda_config.cpu_value), \n        \n\n        \n          \n                      \"%{cudart_lib}\": cuda_libs[\"cudart\"].file_name, \n        \n\n        \n          \n                      \"%{cublas_lib}\": cuda_libs[\"cublas\"].file_name, \n        \n\n        \n          \n                      \"%{cusolver_lib}\": cuda_libs[\"cusolver\"].file_name, \n        \n\n        \n          \n                      \"%{cudnn_lib}\": cuda_libs[\"cudnn\"].file_name, \n        \n\n        \n          \n                      \"%{cufft_lib}\": cuda_libs[\"cufft\"].file_name, \n        \n\n        \n          \n                      \"%{curand_lib}\": cuda_libs[\"curand\"].file_name, \n        \n\n        \n          \n                      \"%{cupti_lib}\": cuda_libs[\"cupti\"].file_name, \n        \n\n        \n          \n                      \"%{cuda_include_genrules}\": \"\\n\".join(genrules), \n        \n\n        \n          \n                      \"%{cuda_headers}\": ('\":cuda-include\",\\n' + \n        \n\n        \n          \n                                          '        \":cudnn-include\",') \n        \n\n        \n          \n                  }) \n        \n\n        \n          \n            \n        \n\n        \n          \n             is_cuda_clang = _use_cuda_clang(repository_ctx) \n        \n\n        \n          \n            \n        \n\n        \n          \n             should_download_clang = is_cuda_clang and _flag_enabled( \n        \n\n        \n          \n                 repository_ctx, _TF_DOWNLOAD_CLANG) \n        \n\n        \n          \n             if should_download_clang: \n        \n\n        \n          \n               download_clang(repository_ctx, \"crosstool/extra_tools\") \n        \n\n        \n          \n            \n        \n\n        \n          \n             # Set up crosstool/ \n        \n\n        \n          \n             cc = find_cc(repository_ctx) \n        \n\n        \n          \n             cc_fullpath = cc if not should_download_clang else \"crosstool/\" + cc \n        \n\n        \n          \n            \n        \n\n        \n          \n             host_compiler_includes = _host_compiler_includes(repository_ctx, cc_fullpath) \n        \n\n        \n          \n             cuda_defines = { \n        \n\n        \n          \n                      \"%{cuda_include_path}\": _cuda_include_path(repository_ctx, \n        \n\n        \n          \n                                                                 cuda_config), \n        \n\n        \n          \n                      \"%{host_compiler_includes}\": host_compiler_includes, \n        \n\n        \n          \n                  } \n        \n\n        \n          \n             if is_cuda_clang: \n        \n\n        \n          \n               cuda_defines[\"%{clang_path}\"] = cc \n        \n\n        \n          \n               _tpl(repository_ctx, \"crosstool:BUILD\", {\"%{linker_files}\": \":empty\"}) \n        \n\n        \n          \n               _tpl(repository_ctx, \"crosstool:CROSSTOOL_clang\", cuda_defines, out=\"crosstool/CROSSTOOL\") \n        \n\n        \n          \n               repository_ctx.file(\"crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\", \"\") \n        \n\n        \n          \n             else: \n        \n\n        \n          \n               nvcc_path = str(repository_ctx.path(\"%s/bin/nvcc%s\" % \n        \n\n        \n          \n                   (cuda_config.cuda_toolkit_path, \n        \n\n        \n          \n                   \".exe\" if cuda_config.cpu_value == \"Windows\" else \"\"))) \n        \n\n        \n          \n               _tpl(repository_ctx, \"crosstool:BUILD\", \n        \n\n        \n          \n                    {\"%{linker_files}\": \":crosstool_wrapper_driver_is_not_gcc\"}) \n        \n\n        \n          \n               _tpl(repository_ctx, \"crosstool:CROSSTOOL_nvcc\", cuda_defines, out=\"crosstool/CROSSTOOL\") \n        \n\n        \n          \n               _tpl(repository_ctx, \n        \n\n        \n          \n                    \"crosstool:clang/bin/crosstool_wrapper_driver_is_not_gcc\", \n        \n\n        \n          \n                    { \n        \n\n        \n          \n                        \"%{cpu_compiler}\": str(cc), \n        \n\n        \n          \n                        \"%{cuda_version}\": cuda_config.cuda_version, \n        \n\n        \n          \n                        \"%{nvcc_path}\": nvcc_path, \n        \n\n        \n          \n                        \"%{gcc_host_compiler_path}\": str(cc), \n        \n\n        \n          \n                        \"%{cuda_compute_capabilities}\": \", \".join( \n        \n\n        \n          \n                            [\"\\\"%s\\\"\" % c for c in cuda_config.compute_capabilities]), \n        \n\n        \n          \n                    }) \n        \n\n        \n          \n            \n        \n\n        \n          \n             # Set up cuda_config.h, which is used by \n        \n\n        \n          \n             # tensorflow/stream_executor/dso_loader.cc. \n        \n\n        \n          \n             _tpl(repository_ctx, \"cuda:cuda_config.h\", \n        \n\n        \n          \n                  { \n        \n\n        \n          \n                      \"%{cuda_version}\": cuda_config.cuda_version, \n        \n\n        \n          \n                      \"%{cudnn_version}\": cuda_config.cudnn_version, \n        \n\n        \n          \n                      \"%{cuda_compute_capabilities}\": \",\".join( \n        \n\n        \n          \n                          [\"CudaVersion(\\\"%s\\\")\" % c \n        \n\n        \n          \n                           for c in cuda_config.compute_capabilities]), \n        \n\n        \n          \n                          \"%{cuda_toolkit_path}\": cuda_config.cuda_toolkit_path, \n        \n\n        \n          \n                  }, \"cuda/cuda/cuda_config.h\") \n        \n    \n  \n\n which generated shell script for the genrules, that actually do perform the symlinks. Checking those shell scripts revealed the exact same and different ordering.\nChecking more carefully, one will see that the headers are discovered by _read_dir function: \n  \n    \n      tensorflow/third_party/gpus/cuda_configure.bzl\n    \n    \n        Lines 891 to 894\n      in\n      ba64f53\n    \n    \n    \n    \n\n        \n          \n           find_result = _execute( \n        \n\n        \n          \n               repository_ctx, [\"find\", src_dir, \"-follow\", \"-type\", \"f\"], \n        \n\n        \n          \n               empty_stdout_fine=True) \n        \n\n        \n          \n           result = find_result.stdout \n        \n    \n  \n\n, it does directly get the output of find. This is dependant on the ordering provided by readdir syscall.\nIn our case, the ordering on the filesystem before making the tar archive, and after untarring it would be different.\nOne simple fix for that is to force ordering the list of headers, this way we are sure the order is always the same and we are not dependant on what readdir is going to get us.\nIn the past, Bazel would force the ordering of the elements considered to compute the actionKey. This was removed with 0.3.0 but it might have make the issue hidden bazelbuild/bazel@9dc3211", "body": "Context: for DeepSpeech, we perform tensorflow builds and then keep the cache in a tar (capturing the whole of the home directory of the build user). We then untar it and the deepspeech build through `bazel build` picks the proper cached items so it does not rebuild anything.\r\n\r\nRecently, we started to have increased (2.5x) build time on CUDA-enabled builds. Debugging with Bazel showed that it was rebuilding because the `actionKey` computed for `stream_executor_impl` was different. Instrumenting Bazel to get more informations, I could get down to the reason of the different actionKey: the ordering of the CUDA includes was different. The list itself contained the exact same content, just a different ordering.\r\n\r\nThose includes are symlinks, and they are generated from a genrule. This is all taken care of by https://github.com/tensorflow/tensorflow/blob/ba64f5334d4bba31d22c30e09a96f806ea0e2f7e/third_party/gpus/cuda_configure.bzl#L915-L1035 which generated shell script for the genrules, that actually do perform the symlinks. Checking those shell scripts revealed the exact same and different ordering.\r\n\r\nChecking more carefully, one will see that the headers are discovered by `_read_dir` function: https://github.com/tensorflow/tensorflow/blob/ba64f5334d4bba31d22c30e09a96f806ea0e2f7e/third_party/gpus/cuda_configure.bzl#L891-L894, it does directly get the output of `find`. This is dependant on the ordering provided by `readdir` syscall.\r\n\r\nIn our case, the ordering on the filesystem before making the tar archive, and after untarring it would be different.\r\n\r\nOne simple fix for that is to force ordering the list of headers, this way we are sure the order is always the same and we are not dependant on what `readdir` is going to get us.\r\n\r\nIn the past, Bazel would force the ordering of the elements considered to compute the actionKey. This was removed with 0.3.0 but it might have make the issue hidden https://github.com/bazelbuild/bazel/commit/9dc32111d5b6c1c7c5eaf39efad5fef75327ee75"}