{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/163427763", "pull_request_review_id": 91036200, "id": 163427763, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzQyNzc2Mw==", "diff_hunk": "@@ -0,0 +1,125 @@\n+/* Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+#include \"tensorflow/contrib/tensorrt/convert/inferShapes.h\"\n+#include <functional>\n+#include \"tensorflow/core/common_runtime/shape_refiner.h\"\n+#include \"tensorflow/core/framework/node_def.pb.h\"\n+#include \"tensorflow/core/framework/shape_inference.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/types.pb_text.h\"\n+#include \"tensorflow/core/graph/algorithm.h\"\n+#include \"tensorflow/core/graph/graph.h\"\n+#include \"tensorflow/core/graph/graph_constructor.h\"\n+#include \"tensorflow/core/lib/core/errors.h\"\n+#include \"tensorflow/core/lib/core/status.h\"\n+#include \"tensorflow/core/platform/logging.h\"\n+\n+#define _TF_LOG_DEBUG ::tensorflow::internal::LogMessage(__FILE__, __LINE__, -1)\n+\n+namespace tensorflow {\n+namespace trt {\n+std::vector<tensorflow::DataType> getTypes(const tensorflow::OpDef& op,\n+                                           const tensorflow::NodeDef& nd,\n+                                           bool inp = true) {\n+  const auto& attrMap = nd.attr();\n+  auto getType = [&attrMap](decltype(\n+                     op.input_arg(0)) a) -> std::vector<tensorflow::DataType> {\n+    std::vector<tensorflow::DataType> tvec;\n+    if (!a.type_list_attr().empty()) {  // get the list types\n+      const auto& tl = attrMap.at(a.type_list_attr()).list();\n+      int tsize = tl.type_size();\n+      tvec.reserve(tsize);\n+      for (int t = 0; t < tsize; t++) {\n+        tvec.push_back(tl.type(t));\n+      }\n+      return tvec;\n+    }\n+    tensorflow::DataType cType = tensorflow::DT_INVALID;\n+    if (a.type() != tensorflow::DT_INVALID) {  // get defined types\n+      cType = a.type();\n+    } else if (!a.type_attr().empty()) {\n+      cType = attrMap.at(a.type_attr()).type();\n+    }\n+    if (!a.number_attr().empty()) {  // numbertypes\n+      int64 nTensors = attrMap.at(a.number_attr()).i();\n+      tvec = std::vector<tensorflow::DataType>(nTensors, cType);\n+      return tvec;\n+    }\n+    tvec.push_back(cType);\n+    return tvec;\n+  };\n+  std::vector<tensorflow::DataType> types;\n+  if (inp) {\n+    int n_inputs = op.input_arg_size();\n+    for (int i = 0; i < n_inputs; i++) {\n+      auto tout = getType(op.input_arg(i));\n+      LOG(DEBUG) << \"Node= \" << nd.name() << \" #inputs\" << tout.size();\n+      types.insert(types.end(), tout.begin(), tout.end());\n+    }\n+  } else {\n+    int n_outputs = op.output_arg_size();\n+    // types.resize(n_outputs);\n+    for (int i = 0; i < n_outputs; i++) {\n+      auto tout = getType(op.output_arg(i));\n+      LOG(DEBUG) << \"Node= \" << nd.name() << \" #outputs\" << tout.size();\n+      types.insert(types.end(), tout.begin(), tout.end());\n+    }\n+  }\n+  return types;\n+}\n+\n+tensorflow::Status inferShapes(const tensorflow::GraphDef& graph_def,\n+                               const std::vector<std::string>& output_names,\n+                               ShapeMap& shapes) {\n+  tensorflow::Graph g(OpRegistry::Global());\n+  TF_RETURN_IF_ERROR(tensorflow::ConvertGraphDefToGraph(", "path": "tensorflow/contrib/tensorrt/convert/inferShapes.cc", "position": null, "original_position": 84, "commit_id": "1e4b5b8c0cc1675b9ecac3569c91563a2a4f9984", "original_commit_id": "825e7a32e9f4dbad21a9ddb9d8a34bd3e32b1d0e", "user": {"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}, "body": "Thanks @benoitsteiner ,\r\n\r\nWe had some issues with grappler but they are resolved in recent commits. We have it implemented in our working branch and will switch using grappler in the next PR.", "created_at": "2018-01-24T00:58:52Z", "updated_at": "2018-02-12T23:36:57Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/16253#discussion_r163427763", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16253", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/163427763"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/16253#discussion_r163427763"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16253"}}, "body_html": "<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a> ,</p>\n<p>We had some issues with grappler but they are resolved in recent commits. We have it implemented in our working branch and will switch using grappler in the next PR.</p>", "body_text": "Thanks @benoitsteiner ,\nWe had some issues with grappler but they are resolved in recent commits. We have it implemented in our working branch and will switch using grappler in the next PR.", "in_reply_to_id": 163061089}