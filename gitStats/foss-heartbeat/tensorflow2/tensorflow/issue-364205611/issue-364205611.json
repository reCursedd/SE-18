{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22550", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22550/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22550/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22550/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22550", "id": 364205611, "node_id": "MDU6SXNzdWUzNjQyMDU2MTE=", "number": 22550, "title": "MirroredStrategy and Optimizer Compatibility", "user": {"login": "dcyoung", "id": 7978433, "node_id": "MDQ6VXNlcjc5Nzg0MzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7978433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcyoung", "html_url": "https://github.com/dcyoung", "followers_url": "https://api.github.com/users/dcyoung/followers", "following_url": "https://api.github.com/users/dcyoung/following{/other_user}", "gists_url": "https://api.github.com/users/dcyoung/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcyoung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcyoung/subscriptions", "organizations_url": "https://api.github.com/users/dcyoung/orgs", "repos_url": "https://api.github.com/users/dcyoung/repos", "events_url": "https://api.github.com/users/dcyoung/events{/privacy}", "received_events_url": "https://api.github.com/users/dcyoung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 996845227, "node_id": "MDU6TGFiZWw5OTY4NDUyMjc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:dist-strat", "name": "comp:dist-strat", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "anj-s", "id": 32556631, "node_id": "MDQ6VXNlcjMyNTU2NjMx", "avatar_url": "https://avatars1.githubusercontent.com/u/32556631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anj-s", "html_url": "https://github.com/anj-s", "followers_url": "https://api.github.com/users/anj-s/followers", "following_url": "https://api.github.com/users/anj-s/following{/other_user}", "gists_url": "https://api.github.com/users/anj-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/anj-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anj-s/subscriptions", "organizations_url": "https://api.github.com/users/anj-s/orgs", "repos_url": "https://api.github.com/users/anj-s/repos", "events_url": "https://api.github.com/users/anj-s/events{/privacy}", "received_events_url": "https://api.github.com/users/anj-s/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "anj-s", "id": 32556631, "node_id": "MDQ6VXNlcjMyNTU2NjMx", "avatar_url": "https://avatars1.githubusercontent.com/u/32556631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anj-s", "html_url": "https://github.com/anj-s", "followers_url": "https://api.github.com/users/anj-s/followers", "following_url": "https://api.github.com/users/anj-s/following{/other_user}", "gists_url": "https://api.github.com/users/anj-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/anj-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anj-s/subscriptions", "organizations_url": "https://api.github.com/users/anj-s/orgs", "repos_url": "https://api.github.com/users/anj-s/repos", "events_url": "https://api.github.com/users/anj-s/events{/privacy}", "received_events_url": "https://api.github.com/users/anj-s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-09-26T20:48:24Z", "updated_at": "2018-10-28T23:54:15Z", "closed_at": "2018-10-28T23:54:15Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes, duplicated the minimal code from documentation snippet <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/distribute#example-with-keras-api\">here</a></li>\n</ul>\n<p>But the included <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/distribute/python/examples/keras_mnist.py\">keras_mnist.py</a> example is broken as well.</p>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nDocker container <code>tensorflow/tensorflow:1.11.0-rc2-gpu-py3</code></li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:</li>\n<li><strong>TensorFlow version (use command below)</strong>:</li>\n<li><strong>Python version</strong>:</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:<br>\n2 x 1080ti</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/distribute/python/examples/keras_mnist.py\">keras_mnist.py</a> example seems to break. Investigating further...</p>\n<p>Optimizers other than <code>tf.train.GradientDescentOptimizer</code> are not working with <code>MirroredStrategy</code> for Keras models as shown in this official <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/distribute#example-with-keras-api\">example</a></p>\n<h3>Source code / logs</h3>\n<p><strong>Setup</strong>, copied from the <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/distribute#example-with-keras-api\">example</a>:</p>\n<div class=\"highlight highlight-source-python\"><pre>inputs <span class=\"pl-k\">=</span> tf.keras.layers.Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">1</span>,))\npredictions <span class=\"pl-k\">=</span> tf.keras.layers.Dense(<span class=\"pl-c1\">1</span>)(inputs)\nmodel <span class=\"pl-k\">=</span> tf.keras.models.Model(<span class=\"pl-v\">inputs</span><span class=\"pl-k\">=</span>inputs, <span class=\"pl-v\">outputs</span><span class=\"pl-k\">=</span>predictions)\n\nfeatures <span class=\"pl-k\">=</span> tf.data.Dataset.from_tensors([<span class=\"pl-c1\">1</span>.]).repeat(<span class=\"pl-c1\">10000</span>).batch(<span class=\"pl-c1\">10</span>)\nlabels <span class=\"pl-k\">=</span> tf.data.Dataset.from_tensors([<span class=\"pl-c1\">1</span>.]).repeat(<span class=\"pl-c1\">10000</span>).batch(<span class=\"pl-c1\">10</span>)\ntrain_dataset <span class=\"pl-k\">=</span> tf.data.Dataset.zip((features, labels))\n\ndistribution <span class=\"pl-k\">=</span> tf.contrib.distribute.MirroredStrategy()</pre></div>\n<p><strong>Then, this works</strong>:</p>\n<div class=\"highlight highlight-source-python\"><pre>model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>categorical_crossentropy<span class=\"pl-pds\">'</span></span>,\n              <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span>tf.train.GradientDescentOptimizer(<span class=\"pl-v\">learning_rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.2</span>),\n              <span class=\"pl-v\">distribute</span><span class=\"pl-k\">=</span>distribution)\nmodel.fit(train_dataset, <span class=\"pl-v\">epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">5</span>, <span class=\"pl-v\">steps_per_epoch</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>)</pre></div>\n<p>But, <strong>Keras optimizers</strong> don't seem to work:</p>\n<div class=\"highlight highlight-source-python\"><pre>model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>categorical_crossentropy<span class=\"pl-pds\">'</span></span>,\n              <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span>tf.keras.optimizers.SGD(<span class=\"pl-v\">lr</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.2</span>, <span class=\"pl-v\">momentum</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.9</span>),\n              <span class=\"pl-v\">distribute</span><span class=\"pl-k\">=</span>distribution)\nmodel.fit(train_dataset, <span class=\"pl-v\">epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">5</span>, <span class=\"pl-v\">steps_per_epoch</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>)</pre></div>\n<p>and these <strong>Tensorflow Optimizers</strong> are throwing errors as well:</p>\n<div class=\"highlight highlight-source-python\"><pre>model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>categorical_crossentropy<span class=\"pl-pds\">'</span></span>,\n              <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span>tf.train.AdamOptimizer(<span class=\"pl-v\">learning_rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.2</span>),\n              <span class=\"pl-v\">distribute</span><span class=\"pl-k\">=</span>distribution)\nmodel.fit(train_dataset, <span class=\"pl-v\">epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">5</span>, <span class=\"pl-v\">steps_per_epoch</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>)</pre></div>\n<div class=\"highlight highlight-source-python\"><pre>model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>categorical_crossentropy<span class=\"pl-pds\">'</span></span>,\n              <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span>tf.train.MomentumOptimizer(<span class=\"pl-v\">learning_rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.2</span>, <span class=\"pl-v\">momentum</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.9</span>),\n              <span class=\"pl-v\">distribute</span><span class=\"pl-k\">=</span>distribution)\nmodel.fit(train_dataset, <span class=\"pl-v\">epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">5</span>, <span class=\"pl-v\">steps_per_epoch</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>)</pre></div>\n<div class=\"highlight highlight-source-python\"><pre>model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>categorical_crossentropy<span class=\"pl-pds\">'</span></span>,\n              <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span>tf.train.RMSPropOptimzier(<span class=\"pl-v\">learning_rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.2</span>),\n              <span class=\"pl-v\">distribute</span><span class=\"pl-k\">=</span>distribution)\nmodel.fit(train_dataset, <span class=\"pl-v\">epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">5</span>, <span class=\"pl-v\">steps_per_epoch</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>)</pre></div>\n<p>Error looks like:</p>\n<div class=\"highlight highlight-source-shell\"><pre>  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/engine/training.py<span class=\"pl-pds\">\"</span></span>, line 1590, <span class=\"pl-k\">in</span> fit\n    validation_steps=validation_steps)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/engine/training_distributed.py<span class=\"pl-pds\">\"</span></span>, line 125, <span class=\"pl-k\">in</span> fit_loop\n    orig_model_weights = <span class=\"pl-en\">model.get_weights</span>()\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/engine/network.py<span class=\"pl-pds\">\"</span></span>, line 483, <span class=\"pl-k\">in</span> get_weights\n    <span class=\"pl-k\">return</span> backend.batch_get_value(weights)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py<span class=\"pl-pds\">\"</span></span>, line 2717, <span class=\"pl-k\">in</span> batch_get_value\n    <span class=\"pl-k\">return</span> <span class=\"pl-en\">get_session</span>().run(tensors)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py<span class=\"pl-pds\">\"</span></span>, line 465, <span class=\"pl-k\">in</span> get_session\n    _initialize_variables(session)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py<span class=\"pl-pds\">\"</span></span>, line 710, <span class=\"pl-k\">in</span> _initialize_variables\n    variables = <span class=\"pl-en\">_get_variables(ops.get_default_graph</span>())\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py<span class=\"pl-pds\">\"</span></span>, line 704, <span class=\"pl-k\">in</span> _get_variables\n    <span class=\"pl-en\">variables.update(opt.optimizer.variables</span>())\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py<span class=\"pl-pds\">\"</span></span>, line 785, <span class=\"pl-k\">in</span> variables\n    optimizer_variables = [v <span class=\"pl-k\">for</span> <span class=\"pl-smi\">v</span> <span class=\"pl-k\">in</span> <span class=\"pl-en\">self._non_slot_variables</span>()\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py<span class=\"pl-pds\">\"</span></span>, line 786, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>listcomp<span class=\"pl-k\">&gt;</span>\n    <span class=\"pl-k\">if</span> _from_current_graph(v)]\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py<span class=\"pl-pds\">\"</span></span>, line 779, <span class=\"pl-k\">in</span> _from_current_graph\n    <span class=\"pl-k\">return</span> variable.op.graph is current_graph\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py<span class=\"pl-pds\">\"</span></span>, line 305, <span class=\"pl-k\">in</span> op\n    <span class=\"pl-k\">return</span> <span class=\"pl-en\">self.get</span>().op\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py<span class=\"pl-pds\">\"</span></span>, line 73, <span class=\"pl-k\">in</span> get\n    (device, <span class=\"pl-en\">self._index.keys</span>(), <span class=\"pl-en\">device_util.current</span>())), e)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;string&gt;<span class=\"pl-pds\">\"</span></span>, line 3, <span class=\"pl-k\">in</span> raise_from\nValueError: Device /replica:0/task:0/device:CPU:0 not found <span class=\"pl-k\">in</span> dict_keys([<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/replica:0/task:0/device:GPU:1<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/replica:0/task:0/device:GPU:0<span class=\"pl-pds\">'</span></span>]) (current device )</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes, duplicated the minimal code from documentation snippet here\n\nBut the included keras_mnist.py example is broken as well.\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nDocker container tensorflow/tensorflow:1.11.0-rc2-gpu-py3\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary):\nTensorFlow version (use command below):\nPython version:\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\n2 x 1080ti\nExact command to reproduce:\n\nDescribe the problem\nkeras_mnist.py example seems to break. Investigating further...\nOptimizers other than tf.train.GradientDescentOptimizer are not working with MirroredStrategy for Keras models as shown in this official example\nSource code / logs\nSetup, copied from the example:\ninputs = tf.keras.layers.Input(shape=(1,))\npredictions = tf.keras.layers.Dense(1)(inputs)\nmodel = tf.keras.models.Model(inputs=inputs, outputs=predictions)\n\nfeatures = tf.data.Dataset.from_tensors([1.]).repeat(10000).batch(10)\nlabels = tf.data.Dataset.from_tensors([1.]).repeat(10000).batch(10)\ntrain_dataset = tf.data.Dataset.zip((features, labels))\n\ndistribution = tf.contrib.distribute.MirroredStrategy()\nThen, this works:\nmodel.compile(loss='categorical_crossentropy',\n              optimizer=tf.train.GradientDescentOptimizer(learning_rate=0.2),\n              distribute=distribution)\nmodel.fit(train_dataset, epochs=5, steps_per_epoch=10)\nBut, Keras optimizers don't seem to work:\nmodel.compile(loss='categorical_crossentropy',\n              optimizer=tf.keras.optimizers.SGD(lr=0.2, momentum=0.9),\n              distribute=distribution)\nmodel.fit(train_dataset, epochs=5, steps_per_epoch=10)\nand these Tensorflow Optimizers are throwing errors as well:\nmodel.compile(loss='categorical_crossentropy',\n              optimizer=tf.train.AdamOptimizer(learning_rate=0.2),\n              distribute=distribution)\nmodel.fit(train_dataset, epochs=5, steps_per_epoch=10)\nmodel.compile(loss='categorical_crossentropy',\n              optimizer=tf.train.MomentumOptimizer(learning_rate=0.2, momentum=0.9),\n              distribute=distribution)\nmodel.fit(train_dataset, epochs=5, steps_per_epoch=10)\nmodel.compile(loss='categorical_crossentropy',\n              optimizer=tf.train.RMSPropOptimzier(learning_rate=0.2),\n              distribute=distribution)\nmodel.fit(train_dataset, epochs=5, steps_per_epoch=10)\nError looks like:\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/engine/training.py\", line 1590, in fit\n    validation_steps=validation_steps)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/engine/training_distributed.py\", line 125, in fit_loop\n    orig_model_weights = model.get_weights()\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/engine/network.py\", line 483, in get_weights\n    return backend.batch_get_value(weights)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py\", line 2717, in batch_get_value\n    return get_session().run(tensors)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py\", line 465, in get_session\n    _initialize_variables(session)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py\", line 710, in _initialize_variables\n    variables = _get_variables(ops.get_default_graph())\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py\", line 704, in _get_variables\n    variables.update(opt.optimizer.variables())\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 785, in variables\n    optimizer_variables = [v for v in self._non_slot_variables()\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 786, in <listcomp>\n    if _from_current_graph(v)]\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 779, in _from_current_graph\n    return variable.op.graph is current_graph\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py\", line 305, in op\n    return self.get().op\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py\", line 73, in get\n    (device, self._index.keys(), device_util.current())), e)\n  File \"<string>\", line 3, in raise_from\nValueError: Device /replica:0/task:0/device:CPU:0 not found in dict_keys(['/replica:0/task:0/device:GPU:1', '/replica:0/task:0/device:GPU:0']) (current device )", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes, duplicated the minimal code from documentation snippet [here](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/distribute#example-with-keras-api)\r\n\r\nBut the included [keras_mnist.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/distribute/python/examples/keras_mnist.py) example is broken as well.\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nDocker container `tensorflow/tensorflow:1.11.0-rc2-gpu-py3`\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**:\r\n- **TensorFlow version (use command below)**:\r\n- **Python version**:\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n2 x 1080ti\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\n[keras_mnist.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/distribute/python/examples/keras_mnist.py) example seems to break. Investigating further... \r\n\r\nOptimizers other than `tf.train.GradientDescentOptimizer` are not working with `MirroredStrategy` for Keras models as shown in this official [example](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/distribute#example-with-keras-api)\r\n\r\n\r\n### Source code / logs\r\n**Setup**, copied from the [example](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/distribute#example-with-keras-api):\r\n\r\n```python\r\ninputs = tf.keras.layers.Input(shape=(1,))\r\npredictions = tf.keras.layers.Dense(1)(inputs)\r\nmodel = tf.keras.models.Model(inputs=inputs, outputs=predictions)\r\n\r\nfeatures = tf.data.Dataset.from_tensors([1.]).repeat(10000).batch(10)\r\nlabels = tf.data.Dataset.from_tensors([1.]).repeat(10000).batch(10)\r\ntrain_dataset = tf.data.Dataset.zip((features, labels))\r\n\r\ndistribution = tf.contrib.distribute.MirroredStrategy()\r\n```\r\n\r\n**Then, this works**:\r\n```python\r\nmodel.compile(loss='categorical_crossentropy',\r\n              optimizer=tf.train.GradientDescentOptimizer(learning_rate=0.2),\r\n              distribute=distribution)\r\nmodel.fit(train_dataset, epochs=5, steps_per_epoch=10)\r\n```\r\n\r\n\r\nBut, **Keras optimizers** don't seem to work:\r\n```python\r\nmodel.compile(loss='categorical_crossentropy',\r\n              optimizer=tf.keras.optimizers.SGD(lr=0.2, momentum=0.9),\r\n              distribute=distribution)\r\nmodel.fit(train_dataset, epochs=5, steps_per_epoch=10)\r\n```\r\n\r\nand these **Tensorflow Optimizers** are throwing errors as well:\r\n\r\n```python\r\nmodel.compile(loss='categorical_crossentropy',\r\n              optimizer=tf.train.AdamOptimizer(learning_rate=0.2),\r\n              distribute=distribution)\r\nmodel.fit(train_dataset, epochs=5, steps_per_epoch=10)\r\n```\r\n\r\n```python\r\nmodel.compile(loss='categorical_crossentropy',\r\n              optimizer=tf.train.MomentumOptimizer(learning_rate=0.2, momentum=0.9),\r\n              distribute=distribution)\r\nmodel.fit(train_dataset, epochs=5, steps_per_epoch=10)\r\n```\r\n\r\n```python\r\nmodel.compile(loss='categorical_crossentropy',\r\n              optimizer=tf.train.RMSPropOptimzier(learning_rate=0.2),\r\n              distribute=distribution)\r\nmodel.fit(train_dataset, epochs=5, steps_per_epoch=10)\r\n```\r\n\r\n\r\n\r\nError looks like:\r\n```bash\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/engine/training.py\", line 1590, in fit\r\n    validation_steps=validation_steps)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/engine/training_distributed.py\", line 125, in fit_loop\r\n    orig_model_weights = model.get_weights()\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/engine/network.py\", line 483, in get_weights\r\n    return backend.batch_get_value(weights)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py\", line 2717, in batch_get_value\r\n    return get_session().run(tensors)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py\", line 465, in get_session\r\n    _initialize_variables(session)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py\", line 710, in _initialize_variables\r\n    variables = _get_variables(ops.get_default_graph())\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/keras/backend.py\", line 704, in _get_variables\r\n    variables.update(opt.optimizer.variables())\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 785, in variables\r\n    optimizer_variables = [v for v in self._non_slot_variables()\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 786, in <listcomp>\r\n    if _from_current_graph(v)]\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 779, in _from_current_graph\r\n    return variable.op.graph is current_graph\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py\", line 305, in op\r\n    return self.get().op\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py\", line 73, in get\r\n    (device, self._index.keys(), device_util.current())), e)\r\n  File \"<string>\", line 3, in raise_from\r\nValueError: Device /replica:0/task:0/device:CPU:0 not found in dict_keys(['/replica:0/task:0/device:GPU:1', '/replica:0/task:0/device:GPU:0']) (current device )\r\n```\r\n\r\n\r\n\r\n"}