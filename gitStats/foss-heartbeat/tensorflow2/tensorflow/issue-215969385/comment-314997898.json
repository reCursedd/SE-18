{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314997898", "html_url": "https://github.com/tensorflow/tensorflow/issues/8617#issuecomment-314997898", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8617", "id": 314997898, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk5Nzg5OA==", "user": {"login": "hgaiser", "id": 716138, "node_id": "MDQ6VXNlcjcxNjEzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/716138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hgaiser", "html_url": "https://github.com/hgaiser", "followers_url": "https://api.github.com/users/hgaiser/followers", "following_url": "https://api.github.com/users/hgaiser/following{/other_user}", "gists_url": "https://api.github.com/users/hgaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/hgaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hgaiser/subscriptions", "organizations_url": "https://api.github.com/users/hgaiser/orgs", "repos_url": "https://api.github.com/users/hgaiser/repos", "events_url": "https://api.github.com/users/hgaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/hgaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-13T07:39:33Z", "updated_at": "2017-07-13T07:44:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=710255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fchollet\">@fchollet</a>, what if the non-Keras layer has a backprop function and/or trainable params (say <code>tf.nn.conv2d</code>)? How can these be added to a Keras model? A Lambda layer would not handle the backpropagation / trainable params, correct?</p>", "body_text": "@fchollet, what if the non-Keras layer has a backprop function and/or trainable params (say tf.nn.conv2d)? How can these be added to a Keras model? A Lambda layer would not handle the backpropagation / trainable params, correct?", "body": "@fchollet, what if the non-Keras layer has a backprop function and/or trainable params (say `tf.nn.conv2d`)? How can these be added to a Keras model? A Lambda layer would not handle the backpropagation / trainable params, correct?\r\n\r\n"}