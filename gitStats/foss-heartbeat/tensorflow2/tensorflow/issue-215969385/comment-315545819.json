{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/315545819", "html_url": "https://github.com/tensorflow/tensorflow/issues/8617#issuecomment-315545819", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8617", "id": 315545819, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU0NTgxOQ==", "user": {"login": "hgaiser", "id": 716138, "node_id": "MDQ6VXNlcjcxNjEzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/716138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hgaiser", "html_url": "https://github.com/hgaiser", "followers_url": "https://api.github.com/users/hgaiser/followers", "following_url": "https://api.github.com/users/hgaiser/following{/other_user}", "gists_url": "https://api.github.com/users/hgaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/hgaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hgaiser/subscriptions", "organizations_url": "https://api.github.com/users/hgaiser/orgs", "repos_url": "https://api.github.com/users/hgaiser/repos", "events_url": "https://api.github.com/users/hgaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/hgaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-15T16:35:43Z", "updated_at": "2017-07-15T16:35:43Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>If you have parameters to train, you should write a custom layer:<br>\n<a href=\"https://keras.io/layers/writing-your-own-keras-layers/\" rel=\"nofollow\">https://keras.io/layers/writing-your-own-keras-layers/</a></p>\n</blockquote>\n<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=710255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fchollet\">@fchollet</a>, I think I'm beginning to understand the situation. In my specific case I'm tring to use a layer with no trainable weights (RoiPooling) but it does have a backward propagation function. If I register the op in the C API with <code>REGISTER_OP</code>, wrap it in a Keras <code>Lambda</code> layer and register the backward propagation function with the same op name (currently only possible in python with the <code>@ops.RegisterGradient</code> decorator), then tensorflow (and thus Keras) should be able to compute correct gradients. I believe this is correct and I will continue to work under that assumption. If it is not correct then I would gladly hear about it :)</p>", "body_text": "If you have parameters to train, you should write a custom layer:\nhttps://keras.io/layers/writing-your-own-keras-layers/\n\nThanks @fchollet, I think I'm beginning to understand the situation. In my specific case I'm tring to use a layer with no trainable weights (RoiPooling) but it does have a backward propagation function. If I register the op in the C API with REGISTER_OP, wrap it in a Keras Lambda layer and register the backward propagation function with the same op name (currently only possible in python with the @ops.RegisterGradient decorator), then tensorflow (and thus Keras) should be able to compute correct gradients. I believe this is correct and I will continue to work under that assumption. If it is not correct then I would gladly hear about it :)", "body": "> If you have parameters to train, you should write a custom layer:\r\n> https://keras.io/layers/writing-your-own-keras-layers/\r\n\r\nThanks @fchollet, I think I'm beginning to understand the situation. In my specific case I'm tring to use a layer with no trainable weights (RoiPooling) but it does have a backward propagation function. If I register the op in the C API with `REGISTER_OP`, wrap it in a Keras `Lambda` layer and register the backward propagation function with the same op name (currently only possible in python with the `@ops.RegisterGradient` decorator), then tensorflow (and thus Keras) should be able to compute correct gradients. I believe this is correct and I will continue to work under that assumption. If it is not correct then I would gladly hear about it :)"}