{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11986", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11986/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11986/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11986/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11986", "id": 247584989, "node_id": "MDU6SXNzdWUyNDc1ODQ5ODk=", "number": 11986, "title": "The FixedLenFeature of parse_example?", "user": {"login": "gauss-clb", "id": 11674304, "node_id": "MDQ6VXNlcjExNjc0MzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/11674304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gauss-clb", "html_url": "https://github.com/gauss-clb", "followers_url": "https://api.github.com/users/gauss-clb/followers", "following_url": "https://api.github.com/users/gauss-clb/following{/other_user}", "gists_url": "https://api.github.com/users/gauss-clb/gists{/gist_id}", "starred_url": "https://api.github.com/users/gauss-clb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gauss-clb/subscriptions", "organizations_url": "https://api.github.com/users/gauss-clb/orgs", "repos_url": "https://api.github.com/users/gauss-clb/repos", "events_url": "https://api.github.com/users/gauss-clb/events{/privacy}", "received_events_url": "https://api.github.com/users/gauss-clb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-08-03T03:52:02Z", "updated_at": "2018-02-08T14:59:31Z", "closed_at": "2018-02-08T14:59:31Z", "author_association": "NONE", "body_html": "<p>View<a href=\"https://www.tensorflow.org/versions/master/api_docs/python/tf/parse_example\" rel=\"nofollow\"> API DOC</a>.</p>\n<p>The description maybe wrong?<br>\n<code>Each FixedLenFeature df maps to a Tensor of the specified type (or tf.float32 if not specified) and shape (serialized.size(),) + df.shape.</code></p>\n<p>But the example shows:<br>\nFor dense results in two serialized Examples:</p>\n<pre><code>[\n  features {\n    feature { key: \"age\" value { int64_list { value: [ 0 ] } } }\n    feature { key: \"gender\" value { bytes_list { value: [ \"f\" ] } } }\n   },\n   features {\n    feature { key: \"age\" value { int64_list { value: [] } } }\n    feature { key: \"gender\" value { bytes_list { value: [ \"f\" ] } } }\n  }\n]\n</code></pre>\n<p>We can use arguments:</p>\n<pre><code>example_names: [\"input0\", \"input1\"],\nfeatures: {\n    \"age\": FixedLenFeature([], dtype=tf.int64, default_value=-1),\n    \"gender\": FixedLenFeature([], dtype=tf.string),\n}\n</code></pre>\n<p>And the expected output is:</p>\n<pre><code>\n{\n  \"age\": [[0], [-1]],\n  \"gender\": [[\"f\"], [\"f\"]],\n}\n</code></pre>\n<p>The shape of output is (2, 1) not equal to (2, ) + (), where  (2,) is <code>(serialized.size(),)</code> and () is <code>df.shape</code>.</p>", "body_text": "View API DOC.\nThe description maybe wrong?\nEach FixedLenFeature df maps to a Tensor of the specified type (or tf.float32 if not specified) and shape (serialized.size(),) + df.shape.\nBut the example shows:\nFor dense results in two serialized Examples:\n[\n  features {\n    feature { key: \"age\" value { int64_list { value: [ 0 ] } } }\n    feature { key: \"gender\" value { bytes_list { value: [ \"f\" ] } } }\n   },\n   features {\n    feature { key: \"age\" value { int64_list { value: [] } } }\n    feature { key: \"gender\" value { bytes_list { value: [ \"f\" ] } } }\n  }\n]\n\nWe can use arguments:\nexample_names: [\"input0\", \"input1\"],\nfeatures: {\n    \"age\": FixedLenFeature([], dtype=tf.int64, default_value=-1),\n    \"gender\": FixedLenFeature([], dtype=tf.string),\n}\n\nAnd the expected output is:\n\n{\n  \"age\": [[0], [-1]],\n  \"gender\": [[\"f\"], [\"f\"]],\n}\n\nThe shape of output is (2, 1) not equal to (2, ) + (), where  (2,) is (serialized.size(),) and () is df.shape.", "body": "View[ API DOC](https://www.tensorflow.org/versions/master/api_docs/python/tf/parse_example).\r\n\r\nThe description maybe wrong?\r\n`Each FixedLenFeature df maps to a Tensor of the specified type (or tf.float32 if not specified) and shape (serialized.size(),) + df.shape.`\r\n\r\nBut the example shows:\r\nFor dense results in two serialized Examples:\r\n\r\n```\r\n[\r\n  features {\r\n    feature { key: \"age\" value { int64_list { value: [ 0 ] } } }\r\n    feature { key: \"gender\" value { bytes_list { value: [ \"f\" ] } } }\r\n   },\r\n   features {\r\n    feature { key: \"age\" value { int64_list { value: [] } } }\r\n    feature { key: \"gender\" value { bytes_list { value: [ \"f\" ] } } }\r\n  }\r\n]\r\n```\r\nWe can use arguments:\r\n\r\n```\r\nexample_names: [\"input0\", \"input1\"],\r\nfeatures: {\r\n    \"age\": FixedLenFeature([], dtype=tf.int64, default_value=-1),\r\n    \"gender\": FixedLenFeature([], dtype=tf.string),\r\n}\r\n```\r\nAnd the expected output is:\r\n```\r\n\r\n{\r\n  \"age\": [[0], [-1]],\r\n  \"gender\": [[\"f\"], [\"f\"]],\r\n}\r\n```\r\nThe shape of output is (2, 1) not equal to (2, ) + (), where  (2,) is `(serialized.size(),)` and () is `df.shape`.\r\n"}