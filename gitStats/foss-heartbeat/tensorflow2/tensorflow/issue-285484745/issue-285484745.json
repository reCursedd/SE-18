{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15791", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15791/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15791/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15791/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15791", "id": 285484745, "node_id": "MDU6SXNzdWUyODU0ODQ3NDU=", "number": 15791, "title": "weighted_cross_entropy_with_logits produces wrong result", "user": {"login": "chaoyan1037", "id": 11991224, "node_id": "MDQ6VXNlcjExOTkxMjI0", "avatar_url": "https://avatars2.githubusercontent.com/u/11991224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaoyan1037", "html_url": "https://github.com/chaoyan1037", "followers_url": "https://api.github.com/users/chaoyan1037/followers", "following_url": "https://api.github.com/users/chaoyan1037/following{/other_user}", "gists_url": "https://api.github.com/users/chaoyan1037/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaoyan1037/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaoyan1037/subscriptions", "organizations_url": "https://api.github.com/users/chaoyan1037/orgs", "repos_url": "https://api.github.com/users/chaoyan1037/repos", "events_url": "https://api.github.com/users/chaoyan1037/events{/privacy}", "received_events_url": "https://api.github.com/users/chaoyan1037/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-02T17:11:06Z", "updated_at": "2018-01-02T18:23:20Z", "closed_at": "2018-01-02T18:23:20Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 14.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0/6.0</li>\n<li><strong>GPU model and memory</strong>: Geforce GTX 1080 Ti / 12G</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am trying to use tf.nn.weighted_cross_entropy_with_logits API, but I found I just can not get the right result when the weight is not 1.0 (1.0 means no weight).</p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\ndef my_binary_crossentropy_np(labels, output, weight=10.0):\n  \"\"\"\n  Weighted binary crossentropy between an output tensor \n  and a target tensor.\n  \"\"\"\n  # transform back to logits\n  epsilon = 1e-08\n  np.clip(output, epsilon, 1.0 - epsilon, out=output)\n  output = np.log(output / (1.0 - output))\n\n  # https://www.tensorflow.org/api_docs/python/tf/nn/weighted_cross_entropy_with_logits \n  # l = 1 + (q - 1) * z\n  # (1 - z) * x + l * (log(1 + exp(-abs(x))) + max(-x, 0))\n  l = 1.0 + (weight - 1.0) * labels\n  loss1 = np.multiply(1.0 - labels, output)\n  loss2 = np.multiply(l, np.log(1.0 + np.exp(-abs(output))))\n  loss3 = np.maximum(-output, 0)\n  loss = loss1 + loss2 + loss3\n  \n  return np.mean(loss)\n\n\ndef my_binary_crossentropy_tf(labels, output, weight=1.0):\n  \"\"\"\n  Weighted binary crossentropy between an output tensor \n  and a target tensor.\n  \"\"\"\n  epsilon = 1e-08\n  output = tf.clip_by_value(output, epsilon, 1.0 - epsilon)\n  output = tf.log(output / (1.0 - output))\n\n  # compute weighted loss\n  #loss = tf.nn.sigmoid_cross_entropy_with_logits(labels=labels, logits=output)\n  loss = tf.nn.weighted_cross_entropy_with_logits(targets=labels, logits=output, pos_weight=weight)\n  return tf.reduce_mean(loss)\n\n\n# generate random test data and random label\npredict = np.random.rand(10, 8)\n\nlabel = np.random.rand(10, 8)\nlabel[label &gt;= 0.5] = 1\nlabel[label &lt; 0.5] = 0\n\n\nloss1 = my_binary_crossentropy_np(label, predict, 1.0)\nprint('loss1 = ', loss1)\n\nloss1 = my_binary_crossentropy_np(label, predict, 10.0)\nprint('loss1 = ', loss1)\n\n\npredict_tf = tf.convert_to_tensor(predict)\nloss2 = my_binary_crossentropy_tf(label, predict_tf, 1.0)\nloss2 = tf.Session().run(loss2)\nprint('loss2 = ', loss2)\n\nloss2 = my_binary_crossentropy_tf(label, predict_tf, 10.0)\nloss2 = tf.Session().run(loss2)\nprint('loss2 = ', loss2)\n</code></pre>\n<p>running result:<br>\nloss1 =  1.02193164517<br>\nloss1 =  1.96332399324</p>\n<p>loss2 =  1.02193164517<br>\nloss2 =  4.80529539791</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 14.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.3.0\nPython version: 3.6\nCUDA/cuDNN version: 8.0/6.0\nGPU model and memory: Geforce GTX 1080 Ti / 12G\n\nDescribe the problem\nI am trying to use tf.nn.weighted_cross_entropy_with_logits API, but I found I just can not get the right result when the weight is not 1.0 (1.0 means no weight).\nSource code / logs\nimport tensorflow as tf\nimport numpy as np\n\ndef my_binary_crossentropy_np(labels, output, weight=10.0):\n  \"\"\"\n  Weighted binary crossentropy between an output tensor \n  and a target tensor.\n  \"\"\"\n  # transform back to logits\n  epsilon = 1e-08\n  np.clip(output, epsilon, 1.0 - epsilon, out=output)\n  output = np.log(output / (1.0 - output))\n\n  # https://www.tensorflow.org/api_docs/python/tf/nn/weighted_cross_entropy_with_logits \n  # l = 1 + (q - 1) * z\n  # (1 - z) * x + l * (log(1 + exp(-abs(x))) + max(-x, 0))\n  l = 1.0 + (weight - 1.0) * labels\n  loss1 = np.multiply(1.0 - labels, output)\n  loss2 = np.multiply(l, np.log(1.0 + np.exp(-abs(output))))\n  loss3 = np.maximum(-output, 0)\n  loss = loss1 + loss2 + loss3\n  \n  return np.mean(loss)\n\n\ndef my_binary_crossentropy_tf(labels, output, weight=1.0):\n  \"\"\"\n  Weighted binary crossentropy between an output tensor \n  and a target tensor.\n  \"\"\"\n  epsilon = 1e-08\n  output = tf.clip_by_value(output, epsilon, 1.0 - epsilon)\n  output = tf.log(output / (1.0 - output))\n\n  # compute weighted loss\n  #loss = tf.nn.sigmoid_cross_entropy_with_logits(labels=labels, logits=output)\n  loss = tf.nn.weighted_cross_entropy_with_logits(targets=labels, logits=output, pos_weight=weight)\n  return tf.reduce_mean(loss)\n\n\n# generate random test data and random label\npredict = np.random.rand(10, 8)\n\nlabel = np.random.rand(10, 8)\nlabel[label >= 0.5] = 1\nlabel[label < 0.5] = 0\n\n\nloss1 = my_binary_crossentropy_np(label, predict, 1.0)\nprint('loss1 = ', loss1)\n\nloss1 = my_binary_crossentropy_np(label, predict, 10.0)\nprint('loss1 = ', loss1)\n\n\npredict_tf = tf.convert_to_tensor(predict)\nloss2 = my_binary_crossentropy_tf(label, predict_tf, 1.0)\nloss2 = tf.Session().run(loss2)\nprint('loss2 = ', loss2)\n\nloss2 = my_binary_crossentropy_tf(label, predict_tf, 10.0)\nloss2 = tf.Session().run(loss2)\nprint('loss2 = ', loss2)\n\nrunning result:\nloss1 =  1.02193164517\nloss1 =  1.96332399324\nloss2 =  1.02193164517\nloss2 =  4.80529539791", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**: 3.6\r\n- **CUDA/cuDNN version**: 8.0/6.0\r\n- **GPU model and memory**: Geforce GTX 1080 Ti / 12G\r\n\r\n### Describe the problem\r\nI am trying to use tf.nn.weighted_cross_entropy_with_logits API, but I found I just can not get the right result when the weight is not 1.0 (1.0 means no weight).\r\n\r\n\r\n### Source code / logs\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ndef my_binary_crossentropy_np(labels, output, weight=10.0):\r\n  \"\"\"\r\n  Weighted binary crossentropy between an output tensor \r\n  and a target tensor.\r\n  \"\"\"\r\n  # transform back to logits\r\n  epsilon = 1e-08\r\n  np.clip(output, epsilon, 1.0 - epsilon, out=output)\r\n  output = np.log(output / (1.0 - output))\r\n\r\n  # https://www.tensorflow.org/api_docs/python/tf/nn/weighted_cross_entropy_with_logits \r\n  # l = 1 + (q - 1) * z\r\n  # (1 - z) * x + l * (log(1 + exp(-abs(x))) + max(-x, 0))\r\n  l = 1.0 + (weight - 1.0) * labels\r\n  loss1 = np.multiply(1.0 - labels, output)\r\n  loss2 = np.multiply(l, np.log(1.0 + np.exp(-abs(output))))\r\n  loss3 = np.maximum(-output, 0)\r\n  loss = loss1 + loss2 + loss3\r\n  \r\n  return np.mean(loss)\r\n\r\n\r\ndef my_binary_crossentropy_tf(labels, output, weight=1.0):\r\n  \"\"\"\r\n  Weighted binary crossentropy between an output tensor \r\n  and a target tensor.\r\n  \"\"\"\r\n  epsilon = 1e-08\r\n  output = tf.clip_by_value(output, epsilon, 1.0 - epsilon)\r\n  output = tf.log(output / (1.0 - output))\r\n\r\n  # compute weighted loss\r\n  #loss = tf.nn.sigmoid_cross_entropy_with_logits(labels=labels, logits=output)\r\n  loss = tf.nn.weighted_cross_entropy_with_logits(targets=labels, logits=output, pos_weight=weight)\r\n  return tf.reduce_mean(loss)\r\n\r\n\r\n# generate random test data and random label\r\npredict = np.random.rand(10, 8)\r\n\r\nlabel = np.random.rand(10, 8)\r\nlabel[label >= 0.5] = 1\r\nlabel[label < 0.5] = 0\r\n\r\n\r\nloss1 = my_binary_crossentropy_np(label, predict, 1.0)\r\nprint('loss1 = ', loss1)\r\n\r\nloss1 = my_binary_crossentropy_np(label, predict, 10.0)\r\nprint('loss1 = ', loss1)\r\n\r\n\r\npredict_tf = tf.convert_to_tensor(predict)\r\nloss2 = my_binary_crossentropy_tf(label, predict_tf, 1.0)\r\nloss2 = tf.Session().run(loss2)\r\nprint('loss2 = ', loss2)\r\n\r\nloss2 = my_binary_crossentropy_tf(label, predict_tf, 10.0)\r\nloss2 = tf.Session().run(loss2)\r\nprint('loss2 = ', loss2)\r\n```\r\n\r\nrunning result: \r\nloss1 =  1.02193164517\r\nloss1 =  1.96332399324\r\n\r\nloss2 =  1.02193164517\r\nloss2 =  4.80529539791\r\n"}