{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/243591372", "html_url": "https://github.com/tensorflow/tensorflow/issues/2037#issuecomment-243591372", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2037", "id": 243591372, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzU5MTM3Mg==", "user": {"login": "fbolanos", "id": 5876325, "node_id": "MDQ6VXNlcjU4NzYzMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5876325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fbolanos", "html_url": "https://github.com/fbolanos", "followers_url": "https://api.github.com/users/fbolanos/followers", "following_url": "https://api.github.com/users/fbolanos/following{/other_user}", "gists_url": "https://api.github.com/users/fbolanos/gists{/gist_id}", "starred_url": "https://api.github.com/users/fbolanos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fbolanos/subscriptions", "organizations_url": "https://api.github.com/users/fbolanos/orgs", "repos_url": "https://api.github.com/users/fbolanos/repos", "events_url": "https://api.github.com/users/fbolanos/events{/privacy}", "received_events_url": "https://api.github.com/users/fbolanos/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-30T21:44:57Z", "updated_at": "2016-08-30T21:44:57Z", "author_association": "NONE", "body_html": "<p>Can also reproduce, Ubuntu 16.04, nVidia driver 367.35, GTX 1080, CUDA 8.0, cuDNN 5.1, compiled tensorflow from source.</p>\n<p>Output comes out as expected from CPU, but when GPU is enabled, nans are made on some of the output lines. Also, lines that have nans change each time you run the test program. Also sometimes when you run the test program it crashes by saying  Floating point exception.</p>\n<p>cuda-gdb gave if I got the floating point exception:<br>\n<code>0x0000555556057e80 in tensorflow::functor::CastFunctor&lt;Eigen::GpuDevice, float, int&gt;::operator()(Eigen::GpuDevice const&amp;, Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 1, 1, long&gt;, 16&gt;, Eigen::TensorMap&lt;Eigen::Tensor&lt;int const, 1, 1, long&gt;, 16&gt;) () </code></p>\n<p>Even stranger is that when the program ran successfully using cuda-gdb, the output would be completely normal. Except whenever I got the above floating point exception. This is so bizarre...</p>", "body_text": "Can also reproduce, Ubuntu 16.04, nVidia driver 367.35, GTX 1080, CUDA 8.0, cuDNN 5.1, compiled tensorflow from source.\nOutput comes out as expected from CPU, but when GPU is enabled, nans are made on some of the output lines. Also, lines that have nans change each time you run the test program. Also sometimes when you run the test program it crashes by saying  Floating point exception.\ncuda-gdb gave if I got the floating point exception:\n0x0000555556057e80 in tensorflow::functor::CastFunctor<Eigen::GpuDevice, float, int>::operator()(Eigen::GpuDevice const&, Eigen::TensorMap<Eigen::Tensor<float, 1, 1, long>, 16>, Eigen::TensorMap<Eigen::Tensor<int const, 1, 1, long>, 16>) () \nEven stranger is that when the program ran successfully using cuda-gdb, the output would be completely normal. Except whenever I got the above floating point exception. This is so bizarre...", "body": "Can also reproduce, Ubuntu 16.04, nVidia driver 367.35, GTX 1080, CUDA 8.0, cuDNN 5.1, compiled tensorflow from source. \n\nOutput comes out as expected from CPU, but when GPU is enabled, nans are made on some of the output lines. Also, lines that have nans change each time you run the test program. Also sometimes when you run the test program it crashes by saying  Floating point exception. \n\ncuda-gdb gave if I got the floating point exception: \n`0x0000555556057e80 in tensorflow::functor::CastFunctor<Eigen::GpuDevice, float, int>::operator()(Eigen::GpuDevice const&, Eigen::TensorMap<Eigen::Tensor<float, 1, 1, long>, 16>, Eigen::TensorMap<Eigen::Tensor<int const, 1, 1, long>, 16>) ()\n`\n\nEven stranger is that when the program ran successfully using cuda-gdb, the output would be completely normal. Except whenever I got the above floating point exception. This is so bizarre... \n"}