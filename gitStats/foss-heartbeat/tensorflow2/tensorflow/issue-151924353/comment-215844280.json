{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/215844280", "html_url": "https://github.com/tensorflow/tensorflow/issues/2170#issuecomment-215844280", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2170", "id": 215844280, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTg0NDI4MA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-29T18:42:52Z", "updated_at": "2016-04-29T18:42:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>tf.gather()</code> works for exactly the case you describe (it's not perfect, but it handles indexing on the 0th dimension):</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> weights <span class=\"pl-k\">=</span> tf.constant([[<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>]])\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> indices <span class=\"pl-k\">=</span> tf.constant([<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>])\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> indexed <span class=\"pl-k\">=</span> tf.gather(weights, indices)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> sess <span class=\"pl-k\">=</span> tf.Session()\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> sess.run(indexed)\narray([[<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>],\n       [<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>],\n       [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>],\n       [<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>]], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>int32)</pre></div>", "body_text": "tf.gather() works for exactly the case you describe (it's not perfect, but it handles indexing on the 0th dimension):\n>>> import tensorflow as tf\n>>> \n>>> weights = tf.constant([[0, 0], [1, 1], [2, 2]])\n>>> indices = tf.constant([0, 2, 1, 2])\n>>> indexed = tf.gather(weights, indices)\n>>> sess = tf.Session()\n>>> sess.run(indexed)\narray([[0, 0],\n       [2, 2],\n       [1, 1],\n       [2, 2]], dtype=int32)", "body": "`tf.gather()` works for exactly the case you describe (it's not perfect, but it handles indexing on the 0th dimension):\n\n``` python\n>>> import tensorflow as tf\n>>> \n>>> weights = tf.constant([[0, 0], [1, 1], [2, 2]])\n>>> indices = tf.constant([0, 2, 1, 2])\n>>> indexed = tf.gather(weights, indices)\n>>> sess = tf.Session()\n>>> sess.run(indexed)\narray([[0, 0],\n       [2, 2],\n       [1, 1],\n       [2, 2]], dtype=int32)\n```\n"}