{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/733", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/733/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/733/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/733/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/733", "id": 125754474, "node_id": "MDU6SXNzdWUxMjU3NTQ0NzQ=", "number": 733, "title": "Build error under Python 3: error: void function 'InitIfNeeded' should not return a value", "user": {"login": "ogrisel", "id": 89061, "node_id": "MDQ6VXNlcjg5MDYx", "avatar_url": "https://avatars0.githubusercontent.com/u/89061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogrisel", "html_url": "https://github.com/ogrisel", "followers_url": "https://api.github.com/users/ogrisel/followers", "following_url": "https://api.github.com/users/ogrisel/following{/other_user}", "gists_url": "https://api.github.com/users/ogrisel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogrisel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogrisel/subscriptions", "organizations_url": "https://api.github.com/users/ogrisel/orgs", "repos_url": "https://api.github.com/users/ogrisel/repos", "events_url": "https://api.github.com/users/ogrisel/events{/privacy}", "received_events_url": "https://api.github.com/users/ogrisel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-01-09T11:49:14Z", "updated_at": "2016-01-30T18:59:56Z", "closed_at": "2016-01-13T18:44:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Fresh clone with up to date bazel and swig from homebrew.</p>\n<pre><code>tensorflow/python/lib/core/py_func.cc:47:5: error: void function 'InitIfNeeded' should not return a value [-Wreturn-type]\n    import_array();\n    ^~~~~~~~~~~~~~\nthird_party/py/numpy/numpy_include/numpy/__multiarray_api.h:1532:144: note: expanded from macro 'import_array'\n#define import_array() {if (_import_array() &lt; 0) {PyErr_Print(); PyErr_SetString(PyExc_ImportError, \"numpy.core.multiarray failed to import\"); return NUMPY_IMPORT_ARRAY_RETVAL; } }\n</code></pre>\n<p>The following seems to fix the build issue:</p>\n<div class=\"highlight highlight-source-diff\"><pre><span class=\"pl-c1\">diff --git a/tensorflow/python/lib/core/py_func.cc b/tensorflow/python/lib/core/py_func.cc</span>\nindex 5da997e..8f9221b 100644\n<span class=\"pl-md\">--- a/tensorflow/python/lib/core/py_func.cc</span>\n<span class=\"pl-mi1\">+++ b/tensorflow/python/lib/core/py_func.cc</span>\n<span class=\"pl-mdr\">@@ -39,7 +39,7 @@</span> PyObject* GetPyTrampoline() {\n }\n\n // Module initialization (mainly import numpy) if needed.\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>void InitIfNeeded() {</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>int InitIfNeeded() {</span>\n   mutex_lock l(mu);\n   if (!initialized) {\n     PyGILState_STATE py_threadstate;</pre></div>\n<p>but:</p>\n<ul>\n<li>I am not sure this is the correct fix: should we check for <code>NUMPY_IMPORT_ARRAY_RETVAL</code> instead?</li>\n<li>Why does this break now? Was it just a warning previously?</li>\n</ul>", "body_text": "Fresh clone with up to date bazel and swig from homebrew.\ntensorflow/python/lib/core/py_func.cc:47:5: error: void function 'InitIfNeeded' should not return a value [-Wreturn-type]\n    import_array();\n    ^~~~~~~~~~~~~~\nthird_party/py/numpy/numpy_include/numpy/__multiarray_api.h:1532:144: note: expanded from macro 'import_array'\n#define import_array() {if (_import_array() < 0) {PyErr_Print(); PyErr_SetString(PyExc_ImportError, \"numpy.core.multiarray failed to import\"); return NUMPY_IMPORT_ARRAY_RETVAL; } }\n\nThe following seems to fix the build issue:\ndiff --git a/tensorflow/python/lib/core/py_func.cc b/tensorflow/python/lib/core/py_func.cc\nindex 5da997e..8f9221b 100644\n--- a/tensorflow/python/lib/core/py_func.cc\n+++ b/tensorflow/python/lib/core/py_func.cc\n@@ -39,7 +39,7 @@ PyObject* GetPyTrampoline() {\n }\n\n // Module initialization (mainly import numpy) if needed.\n-void InitIfNeeded() {\n+int InitIfNeeded() {\n   mutex_lock l(mu);\n   if (!initialized) {\n     PyGILState_STATE py_threadstate;\nbut:\n\nI am not sure this is the correct fix: should we check for NUMPY_IMPORT_ARRAY_RETVAL instead?\nWhy does this break now? Was it just a warning previously?", "body": "Fresh clone with up to date bazel and swig from homebrew.\n\n```\ntensorflow/python/lib/core/py_func.cc:47:5: error: void function 'InitIfNeeded' should not return a value [-Wreturn-type]\n    import_array();\n    ^~~~~~~~~~~~~~\nthird_party/py/numpy/numpy_include/numpy/__multiarray_api.h:1532:144: note: expanded from macro 'import_array'\n#define import_array() {if (_import_array() < 0) {PyErr_Print(); PyErr_SetString(PyExc_ImportError, \"numpy.core.multiarray failed to import\"); return NUMPY_IMPORT_ARRAY_RETVAL; } }\n```\n\nThe following seems to fix the build issue:\n\n``` diff\ndiff --git a/tensorflow/python/lib/core/py_func.cc b/tensorflow/python/lib/core/py_func.cc\nindex 5da997e..8f9221b 100644\n--- a/tensorflow/python/lib/core/py_func.cc\n+++ b/tensorflow/python/lib/core/py_func.cc\n@@ -39,7 +39,7 @@ PyObject* GetPyTrampoline() {\n }\n\n // Module initialization (mainly import numpy) if needed.\n-void InitIfNeeded() {\n+int InitIfNeeded() {\n   mutex_lock l(mu);\n   if (!initialized) {\n     PyGILState_STATE py_threadstate;\n```\n\nbut:\n- I am not sure this is the correct fix: should we check for `NUMPY_IMPORT_ARRAY_RETVAL` instead?\n- Why does this break now? Was it just a warning previously?\n"}