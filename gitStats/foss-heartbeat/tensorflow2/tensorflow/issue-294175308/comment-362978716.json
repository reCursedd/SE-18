{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362978716", "html_url": "https://github.com/tensorflow/tensorflow/issues/16747#issuecomment-362978716", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16747", "id": 362978716, "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mjk3ODcxNg==", "user": {"login": "qmick", "id": 6958746, "node_id": "MDQ6VXNlcjY5NTg3NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6958746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmick", "html_url": "https://github.com/qmick", "followers_url": "https://api.github.com/users/qmick/followers", "following_url": "https://api.github.com/users/qmick/following{/other_user}", "gists_url": "https://api.github.com/users/qmick/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmick/subscriptions", "organizations_url": "https://api.github.com/users/qmick/orgs", "repos_url": "https://api.github.com/users/qmick/repos", "events_url": "https://api.github.com/users/qmick/events{/privacy}", "received_events_url": "https://api.github.com/users/qmick/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-05T04:29:05Z", "updated_at": "2018-02-10T12:09:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>TensorFlow doc doesn't tell much about that. But TensorFlow use <code>Eigen</code> to calculate the eigenvalues:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/ba032db13627945e7cc772dbd3d85d257aef3ab9/tensorflow/core/kernels/self_adjoint_eig_op.cc#L58-L65\">tensorflow/tensorflow/core/kernels/self_adjoint_eig_op.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 58 to 65\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/ba032db13627945e7cc772dbd3d85d257aef3ab9\">ba032db</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> Eigen::SelfAdjointEigenSolver&lt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L59\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"59\"></td>\n          <td id=\"LC59\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     Eigen::Matrix&lt;Scalar, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor&gt;&gt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L60\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"60\"></td>\n          <td id=\"LC60\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">es</span>(inputs[<span class=\"pl-c1\">0</span>]); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L61\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"61\"></td>\n          <td id=\"LC61\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">OP_REQUIRES</span>(context, es.<span class=\"pl-c1\">info</span>() == Eigen::Success, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L62\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"62\"></td>\n          <td id=\"LC62\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-c1\">errors::InvalidArgument</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Self Adjoint Eigen decomposition was<span class=\"pl-pds\">\"</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L63\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"63\"></td>\n          <td id=\"LC63\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                                     <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>not successful. <span class=\"pl-pds\">\"</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L64\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"64\"></td>\n          <td id=\"LC64\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                                     <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The input might not be valid.<span class=\"pl-pds\">\"</span></span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L65\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"65\"></td>\n          <td id=\"LC65\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> outputs-&gt;<span class=\"pl-c1\">at</span>(<span class=\"pl-c1\">0</span>).<span class=\"pl-c1\">row</span>(<span class=\"pl-c1\">0</span>) = es.<span class=\"pl-c1\">eigenvalues</span>().<span class=\"pl-c1\">transpose</span>(); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>And document of <code>Eigen</code> says:</p>\n<blockquote>\n<p>The eigenvalues are repeated according to their algebraic multiplicity, so there are as many eigenvalues as rows in the matrix. The eigenvalues are sorted in increasing order.<br>\n<a href=\"https://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html#a3df8721abcc71132f7f02bf9dfe78e41\" rel=\"nofollow\">https://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html#a3df8721abcc71132f7f02bf9dfe78e41</a></p>\n</blockquote>\n<p>So the order is guranteed by <code>Eigen</code>.</p>\n<p>For clarification, I think adding this to TensorFlow documents may be better.</p>\n<p>UPDATE:<br>\nIt also holds for GPU implementation. See CUDA doc:</p>\n<blockquote>\n<p>a real array of dimension n. The eigenvalue values of A, in ascending order ie, sorted so that W(i) &lt;= W(i+1).<br>\n<a href=\"http://docs.nvidia.com/cuda/cusolver/#cuds-lt-t-gt-syevd\" rel=\"nofollow\">http://docs.nvidia.com/cuda/cusolver/#cuds-lt-t-gt-syevd</a></p>\n</blockquote>", "body_text": "TensorFlow doc doesn't tell much about that. But TensorFlow use Eigen to calculate the eigenvalues:\n\n  \n    \n      tensorflow/tensorflow/core/kernels/self_adjoint_eig_op.cc\n    \n    \n        Lines 58 to 65\n      in\n      ba032db\n    \n    \n    \n    \n\n        \n          \n           Eigen::SelfAdjointEigenSolver< \n        \n\n        \n          \n               Eigen::Matrix<Scalar, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor>> \n        \n\n        \n          \n               es(inputs[0]); \n        \n\n        \n          \n           OP_REQUIRES(context, es.info() == Eigen::Success, \n        \n\n        \n          \n                       errors::InvalidArgument(\"Self Adjoint Eigen decomposition was\" \n        \n\n        \n          \n                                               \"not successful. \" \n        \n\n        \n          \n                                               \"The input might not be valid.\")); \n        \n\n        \n          \n           outputs->at(0).row(0) = es.eigenvalues().transpose(); \n        \n    \n  \n\n\nAnd document of Eigen says:\n\nThe eigenvalues are repeated according to their algebraic multiplicity, so there are as many eigenvalues as rows in the matrix. The eigenvalues are sorted in increasing order.\nhttps://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html#a3df8721abcc71132f7f02bf9dfe78e41\n\nSo the order is guranteed by Eigen.\nFor clarification, I think adding this to TensorFlow documents may be better.\nUPDATE:\nIt also holds for GPU implementation. See CUDA doc:\n\na real array of dimension n. The eigenvalue values of A, in ascending order ie, sorted so that W(i) <= W(i+1).\nhttp://docs.nvidia.com/cuda/cusolver/#cuds-lt-t-gt-syevd", "body": "TensorFlow doc doesn't tell much about that. But TensorFlow use `Eigen` to calculate the eigenvalues:\r\nhttps://github.com/tensorflow/tensorflow/blob/ba032db13627945e7cc772dbd3d85d257aef3ab9/tensorflow/core/kernels/self_adjoint_eig_op.cc#L58-L65\r\n\r\nAnd document of `Eigen` says:\r\n\r\n> The eigenvalues are repeated according to their algebraic multiplicity, so there are as many eigenvalues as rows in the matrix. The eigenvalues are sorted in increasing order.\r\nhttps://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html#a3df8721abcc71132f7f02bf9dfe78e41\r\n\r\nSo the order is guranteed by `Eigen`.\r\n\r\nFor clarification, I think adding this to TensorFlow documents may be better.\r\n\r\nUPDATE:\r\nIt also holds for GPU implementation. See CUDA doc:\r\n> a real array of dimension n. The eigenvalue values of A, in ascending order ie, sorted so that W(i) <= W(i+1).\r\n> http://docs.nvidia.com/cuda/cusolver/#cuds-lt-t-gt-syevd"}